(ns net.wikipunk.rdf.schema
  {:dcat/downloadURL
   "https://schema.org/version/latest/schemaorg-current-http.ttl",
   :namespaces {"dcat"     "http://www.w3.org/ns/dcat#",
                "dcmitype" "http://purl.org/dc/dcmitype/",
                "dcterms"  "http://purl.org/dc/terms/",
                "foaf"     "http://xmlns.com/foaf/0.1/",
                "owl"      "http://www.w3.org/2002/07/owl#",
                "rdf"      "http://www.w3.org/1999/02/22-rdf-syntax-ns#",
                "rdfs"     "http://www.w3.org/2000/01/rdf-schema#",
                "schema"   "http://schema.org/",
                "skos"     "http://www.w3.org/2004/02/skos/core#",
                "void"     "http://rdfs.org/ns/void#"},
   :rdf/type :owl/Ontology,
   :rdfa/prefix "schema",
   :rdfa/uri "http://schema.org/",
   :rdfs/isDefinedBy {:xsd/anyURI "http://schema.org/docs/full.html"}}
  (:refer-clojure :exclude [agent comment map name parents]))

(def AMRadioChannel
  {:db/ident        :schema/AMRadioChannel,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A radio channel that uses AM.",
   :rdfs/label      "AMRadioChannel",
   :rdfs/subClassOf :schema/RadioChannel,
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1004"}})

(def APIReference
  {:db/ident :schema/APIReference,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Reference documentation for application programming interfaces (APIs).",
   :rdfs/label "APIReference",
   :rdfs/subClassOf :schema/TechArticle})

(def Abdomen
  {:db/ident        :schema/Abdomen,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Abdomen clinical examination.",
   :rdfs/label      "Abdomen",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def AboutPage
  {:db/ident        :schema/AboutPage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Web page type: About page.",
   :rdfs/label      "AboutPage",
   :rdfs/subClassOf :schema/WebPage})

(def AcceptAction
  {:db/ident :schema/AcceptAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of committing to/adopting an object.\\n\\nRelated actions:\\n\\n* [[RejectAction]]: The antonym of AcceptAction.",
   :rdfs/label "AcceptAction",
   :rdfs/subClassOf :schema/AllocateAction})

(def Accommodation
  {:db/ident :schema/Accommodation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An accommodation is a place that can accommodate human beings, e.g. a hotel room, a camping pitch, or a meeting room. Many accommodations are for overnight stays, but this is not a mandatory requirement.\nFor more specific types of accommodations not defined in schema.org, one can use [[additionalType]] with external vocabularies.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n",
   :rdfs/label "Accommodation",
   :rdfs/subClassOf :schema/Place,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def AccountingService
  {:db/ident :schema/AccountingService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Accountancy business.\\n\\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\\(s).\n      ",
   :rdfs/label "AccountingService",
   :rdfs/subClassOf :schema/FinancialService})

(def AchieveAction
  {:db/ident :schema/AchieveAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of accomplishing something via previous efforts. It is an instantaneous action rather than an ongoing process.",
   :rdfs/label "AchieveAction",
   :rdfs/subClassOf :schema/Action})

(def Action
  {:db/ident :schema/Action,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An action performed by a direct agent and indirect participants upon a direct object. Optionally happens at a location with the help of an inanimate instrument. The execution of the action may produce a result. Specific action sub-type documentation specifies the exact expectation of each argument/role.\\n\\nSee also [blog post](http://blog.schema.org/2014/04/announcing-schemaorg-actions.html) and [Actions overview document](http://schema.org/docs/actions.html).",
   :rdfs/label "Action",
   :rdfs/subClassOf :schema/Thing,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/ActionCollabClass"}})

(def ActionAccessSpecification
  {:db/ident :schema/ActionAccessSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A set of requirements that must be fulfilled in order to perform an Action.",
   :rdfs/label "ActionAccessSpecification",
   :rdfs/subClassOf :schema/Intangible,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1741"}})

(def ActionStatusType
  {:db/ident        :schema/ActionStatusType,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The status of an Action.",
   :rdfs/label      "ActionStatusType",
   :rdfs/subClassOf :schema/StatusEnumeration})

(def ActivateAction
  {:db/ident :schema/ActivateAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of starting or activating a device or application (e.g. starting a timer or turning on a flashlight).",
   :rdfs/label "ActivateAction",
   :rdfs/subClassOf :schema/ControlAction})

(def ActivationFee
  {:db/ident :schema/ActivationFee,
   :rdf/type :schema/PriceComponentTypeEnumeration,
   :rdfs/comment
   "Represents the activation fee part of the total price for an offered product, for example a cellphone contract.",
   :rdfs/label "ActivationFee",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def ActiveActionStatus
  {:db/ident :schema/ActiveActionStatus,
   :rdf/type :schema/ActionStatusType,
   :rdfs/comment
   "An in-progress action (e.g., while watching the movie, or driving to a location).",
   :rdfs/label "ActiveActionStatus"})

(def ActiveNotRecruiting
  {:db/ident        :schema/ActiveNotRecruiting,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Active, but not recruiting new participants.",
   :rdfs/label      "ActiveNotRecruiting",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def AddAction
  {:db/ident        :schema/AddAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of editing by adding an object to a collection.",
   :rdfs/label      "AddAction",
   :rdfs/subClassOf :schema/UpdateAction})

(def AdministrativeArea
  {:db/ident :schema/AdministrativeArea,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A geographical region, typically under the jurisdiction of a particular government.",
   :rdfs/label "AdministrativeArea",
   :rdfs/subClassOf :schema/Place})

(def AdultEntertainment
  {:db/ident        :schema/AdultEntertainment,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An adult entertainment establishment.",
   :rdfs/label      "AdultEntertainment",
   :rdfs/subClassOf :schema/EntertainmentBusiness})

(def AdultOrientedEnumeration
  {:db/ident :schema/AdultOrientedEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumeration of considerations that make a product relevant or potentially restricted for adults only.",
   :rdfs/label "AdultOrientedEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def AdvertiserContentArticle
  {:db/ident :schema/AdvertiserContentArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An [[Article]] that an external entity has paid to place or to produce to its specifications. Includes [advertorials](https://en.wikipedia.org/wiki/Advertorial), sponsored content, native advertising and other paid content.",
   :rdfs/label "AdvertiserContentArticle",
   :rdfs/subClassOf :schema/Article,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def AerobicActivity
  {:db/ident :schema/AerobicActivity,
   :rdf/type :schema/PhysicalActivityCategory,
   :rdfs/comment
   "Physical activity of relatively low intensity that depends primarily on the aerobic energy-generating process; during activity, the aerobic metabolism uses oxygen to adequately meet energy demands during exercise.",
   :rdfs/label "AerobicActivity",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def AggregateOffer
  {:db/ident :schema/AggregateOffer,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "When a single product is associated with multiple offers (for example, the same pair of shoes is offered by different merchants), then AggregateOffer can be used.\\n\\nNote: AggregateOffers are normally expected to associate multiple offers that all share the same defined [[businessFunction]] value, or default to http://purl.org/goodrelations/v1#Sell if businessFunction is not explicitly defined.",
   :rdfs/label "AggregateOffer",
   :rdfs/subClassOf :schema/Offer})

(def AggregateRating
  {:db/ident        :schema/AggregateRating,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The average rating based on multiple ratings or reviews.",
   :rdfs/label      "AggregateRating",
   :rdfs/subClassOf :schema/Rating})

(def AgreeAction
  {:db/ident :schema/AgreeAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of expressing a consistency of opinion with the object. An agent agrees to/about an object (a proposition, topic or theme) with participants.",
   :rdfs/label "AgreeAction",
   :rdfs/subClassOf :schema/ReactAction})

(def Airline
  {:db/ident        :schema/Airline,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An organization that provides flights for passengers.",
   :rdfs/label      "Airline",
   :rdfs/subClassOf :schema/Organization})

(def Airport
  {:db/ident        :schema/Airport,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An airport.",
   :rdfs/label      "Airport",
   :rdfs/subClassOf :schema/CivicStructure})

(def AlbumRelease
  {:db/ident           :schema/AlbumRelease,
   :rdf/type           :schema/MusicAlbumReleaseType,
   :rdfs/comment       "AlbumRelease.",
   :rdfs/label         "AlbumRelease",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def AlcoholConsideration
  {:db/ident        :schema/AlcoholConsideration,
   :rdf/type        :schema/AdultOrientedEnumeration,
   :rdfs/comment    "Item contains alcohol or promotes alcohol consumption.",
   :rdfs/label      "AlcoholConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def AlignmentObject
  {:db/ident :schema/AlignmentObject,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An intangible item that describes an alignment between a learning resource and a node in an educational framework.\n\nShould not be used where the nature of the alignment can be described using a simple property, for example to express that a resource [[teaches]] or [[assesses]] a competency.",
   :rdfs/label "AlignmentObject",
   :rdfs/subClassOf :schema/Intangible,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/LRMIClass"}})

(def AllWheelDriveConfiguration
  {:db/ident :schema/AllWheelDriveConfiguration,
   :rdf/type :schema/DriveWheelConfigurationValue,
   :rdfs/comment
   "All-wheel Drive is a transmission layout where the engine drives all four wheels.",
   :rdfs/label "AllWheelDriveConfiguration",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def AllergiesHealthAspect
  {:db/ident :schema/AllergiesHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment "Content about the allergy-related aspects of a health topic.",
   :rdfs/label "AllergiesHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2799"}})

(def AllocateAction
  {:db/ident :schema/AllocateAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of organizing tasks/objects/events by associating resources to it.",
   :rdfs/label "AllocateAction",
   :rdfs/subClassOf :schema/OrganizeAction})

(def AmpStory
  {:db/ident :schema/AmpStory,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A creative work with a visual storytelling format intended to be viewed online, particularly on mobile devices.",
   :rdfs/label "AmpStory",
   :rdfs/subClassOf #{:schema/MediaObject :schema/CreativeWork},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2646"}})

(def AmusementPark
  {:db/ident        :schema/AmusementPark,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An amusement park.",
   :rdfs/label      "AmusementPark",
   :rdfs/subClassOf :schema/EntertainmentBusiness})

(def AnaerobicActivity
  {:db/ident :schema/AnaerobicActivity,
   :rdf/type :schema/PhysicalActivityCategory,
   :rdfs/comment
   "Physical activity that is of high-intensity which utilizes the anaerobic metabolism of the body.",
   :rdfs/label "AnaerobicActivity",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def AnalysisNewsArticle
  {:db/ident :schema/AnalysisNewsArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An AnalysisNewsArticle is a [[NewsArticle]] that, while based on factual reporting, incorporates the expertise of the author/producer, offering interpretations and conclusions.",
   :rdfs/label "AnalysisNewsArticle",
   :rdfs/subClassOf :schema/NewsArticle,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def AnatomicalStructure
  {:db/ident :schema/AnatomicalStructure,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any part of the human body, typically a component of an anatomical system. Organs, tissues, and cells are all anatomical structures.",
   :rdfs/label "AnatomicalStructure",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def AnatomicalSystem
  {:db/ident :schema/AnatomicalSystem,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An anatomical system is a group of anatomical structures that work together to perform a certain task. Anatomical systems, such as organ systems, are one organizing principle of anatomy, and can include circulatory, digestive, endocrine, integumentary, immune, lymphatic, muscular, nervous, reproductive, respiratory, skeletal, urinary, vestibular, and other systems.",
   :rdfs/label "AnatomicalSystem",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def AndroidPlatform
  {:db/ident :schema/AndroidPlatform,
   :rdf/type :schema/DigitalPlatformEnumeration,
   :rdfs/comment
   "Represents the broad notion of Android-based operating systems.",
   :rdfs/label "AndroidPlatform",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3057"}})

(def Anesthesia
  {:db/ident :schema/Anesthesia,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to study of anesthetics and their application.",
   :rdfs/label "Anesthesia",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def AnimalShelter
  {:db/ident        :schema/AnimalShelter,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Animal shelter.",
   :rdfs/label      "AnimalShelter",
   :rdfs/subClassOf :schema/LocalBusiness})

(def Answer
  {:db/ident :schema/Answer,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An answer offered to a question; perhaps correct, perhaps opinionated or wrong.",
   :rdfs/label "Answer",
   :rdfs/subClassOf :schema/Comment,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/QAStackExchange"}})

(def Apartment
  {:db/ident :schema/Apartment,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An apartment (in American English) or flat (in British English) is a self-contained housing unit (a type of residential real estate) that occupies only part of a building (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Apartment\">http://en.wikipedia.org/wiki/Apartment</a>).",
   :rdfs/label "Apartment",
   :rdfs/subClassOf :schema/Accommodation,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def ApartmentComplex
  {:db/ident        :schema/ApartmentComplex,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Residence type: Apartment complex.",
   :rdfs/label      "ApartmentComplex",
   :rdfs/subClassOf :schema/Residence})

(def Appearance
  {:db/ident        :schema/Appearance,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Appearance assessment with clinical examination.",
   :rdfs/label      "Appearance",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def AppendAction
  {:db/ident        :schema/AppendAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of inserting at the end if an ordered collection.",
   :rdfs/label      "AppendAction",
   :rdfs/subClassOf :schema/InsertAction})

(def ApplyAction
  {:db/ident :schema/ApplyAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of registering to an organization/service without the guarantee to receive it.\\n\\nRelated actions:\\n\\n* [[RegisterAction]]: Unlike RegisterAction, ApplyAction has no guarantees that the application will be accepted.",
   :rdfs/label "ApplyAction",
   :rdfs/subClassOf :schema/OrganizeAction})

(def ApprovedIndication
  {:db/ident :schema/ApprovedIndication,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An indication for a medical therapy that has been formally specified or approved by a regulatory body that regulates use of the therapy; for example, the US FDA approves indications for most drugs in the US.",
   :rdfs/label "ApprovedIndication",
   :rdfs/subClassOf :schema/MedicalIndication,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Aquarium
  {:db/ident        :schema/Aquarium,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Aquarium.",
   :rdfs/label      "Aquarium",
   :rdfs/subClassOf :schema/CivicStructure})

(def ArchiveComponent
  {:db/ident :schema/ArchiveComponent,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   {:rdf/language "en",
    :rdf/value
    "An intangible type to be applied to any archive content, carrying with it a set of properties required to describe archival items and collections."},
   :rdfs/label {:rdf/language "en",
                :rdf/value    "ArchiveComponent"},
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1758"}})

(def ArchiveOrganization
  {:db/ident :schema/ArchiveOrganization,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   {:rdf/language "en",
    :rdf/value
    "An organization with archival holdings. An organization which keeps and preserves archival material and typically makes it accessible to the public."},
   :rdfs/label {:rdf/language "en",
                :rdf/value    "ArchiveOrganization"},
   :rdfs/subClassOf :schema/LocalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1758"}})

(def ArriveAction
  {:db/ident :schema/ArriveAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of arriving at a place. An agent arrives at a destination from a fromLocation, optionally with participants.",
   :rdfs/label "ArriveAction",
   :rdfs/subClassOf :schema/MoveAction})

(def ArtGallery
  {:db/ident        :schema/ArtGallery,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An art gallery.",
   :rdfs/label      "ArtGallery",
   :rdfs/subClassOf :schema/EntertainmentBusiness})

(def Artery
  {:db/ident :schema/Artery,
   :owl/equivalentClass
   {:xsd/anyURI "http://purl.bioontology.org/ontology/SNOMEDCT/51114001"},
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A type of blood vessel that specifically carries blood away from the heart.",
   :rdfs/label "Artery",
   :rdfs/subClassOf :schema/Vessel,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Article
  {:db/ident :schema/Article,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An article, such as a news article or piece of investigative report. Newspapers and magazines have articles of many different types and this is intended to cover them all.\\n\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).",
   :rdfs/label "Article",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/rNews"}})

(def AskAction
  {:db/ident :schema/AskAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of posing a question / favor to someone.\\n\\nRelated actions:\\n\\n* [[ReplyAction]]: Appears generally as a response to AskAction.",
   :rdfs/label "AskAction",
   :rdfs/subClassOf :schema/CommunicateAction})

(def AskPublicNewsArticle
  {:db/ident :schema/AskPublicNewsArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[NewsArticle]] expressing an open call by a [[NewsMediaOrganization]] asking the public for input, insights, clarifications, anecdotes, documentation, etc., on an issue, for reporting purposes.",
   :rdfs/label "AskPublicNewsArticle",
   :rdfs/subClassOf :schema/NewsArticle,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def AssessAction
  {:db/ident        :schema/AssessAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of forming one's opinion, reaction or sentiment.",
   :rdfs/label      "AssessAction",
   :rdfs/subClassOf :schema/Action})

(def AssignAction
  {:db/ident :schema/AssignAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of allocating an action/event/task to some destination (someone or something).",
   :rdfs/label "AssignAction",
   :rdfs/subClassOf :schema/AllocateAction})

(def Atlas
  {:db/ident :schema/Atlas,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A collection or bound volume of maps, charts, plates or tables, physical or in media form illustrating any subject.",
   :rdfs/label "Atlas",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/source {:xsd/anyURI "http://www.productontology.org/id/Atlas"}})

(def Attorney
  {:db/ident :schema/Attorney,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Professional service: Attorney. \\n\\nThis type is deprecated - [[LegalService]] is more inclusive and less ambiguous.",
   :rdfs/label "Attorney",
   :rdfs/subClassOf :schema/LegalService})

(def Audience
  {:db/ident :schema/Audience,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Intended audience for an item, i.e. the group for whom the item was created.",
   :rdfs/label "Audience",
   :rdfs/subClassOf :schema/Intangible})

(def AudioObject
  {:db/ident           :schema/AudioObject,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "An audio file.",
   :rdfs/label         "AudioObject",
   :rdfs/subClassOf    :schema/MediaObject,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/rNews"}})

(def AudioObjectSnapshot
  {:db/ident :schema/AudioObjectSnapshot,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A specific and exact (byte-for-byte) version of an [[AudioObject]]. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.",
   :rdfs/label "AudioObjectSnapshot",
   :rdfs/subClassOf :schema/AudioObject,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def Audiobook
  {:db/ident        :schema/Audiobook,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An audiobook.",
   :rdfs/label      "Audiobook",
   :rdfs/subClassOf #{:schema/AudioObject :schema/Book},
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"}})

(def AudiobookFormat
  {:db/ident :schema/AudiobookFormat,
   :rdf/type :schema/BookFormatType,
   :rdfs/comment
   "Book format: Audiobook. This is an enumerated value for use with the bookFormat property. There is also a type 'Audiobook' in the bib extension which includes Audiobook specific properties.",
   :rdfs/label "AudiobookFormat"})

(def AuthoritativeLegalValue
  {:db/ident :schema/AuthoritativeLegalValue,
   :rdf/type :schema/LegalValueLevel,
   :rdfs/comment
   "Indicates that the publisher gives some special status to the publication of the document. (\"The Queens Printer\" version of a UK Act of Parliament, or the PDF version of a Directive published by the EU Office of Publications.) Something \"Authoritative\" is considered to be also [[OfficialLegalValue]].",
   :rdfs/label "AuthoritativeLegalValue",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch
   {:xsd/anyURI "http://data.europa.eu/eli/ontology#LegalValue-authoritative"}})

(def AuthorizeAction
  {:db/ident        :schema/AuthorizeAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of granting permission to an object.",
   :rdfs/label      "AuthorizeAction",
   :rdfs/subClassOf :schema/AllocateAction})

(def AutoBodyShop
  {:db/ident        :schema/AutoBodyShop,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Auto body shop.",
   :rdfs/label      "AutoBodyShop",
   :rdfs/subClassOf :schema/AutomotiveBusiness})

(def AutoDealer
  {:db/ident        :schema/AutoDealer,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An car dealership.",
   :rdfs/label      "AutoDealer",
   :rdfs/subClassOf :schema/AutomotiveBusiness})

(def AutoPartsStore
  {:db/ident        :schema/AutoPartsStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An auto parts store.",
   :rdfs/label      "AutoPartsStore",
   :rdfs/subClassOf #{:schema/AutomotiveBusiness :schema/Store}})

(def AutoRental
  {:db/ident        :schema/AutoRental,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A car rental business.",
   :rdfs/label      "AutoRental",
   :rdfs/subClassOf :schema/AutomotiveBusiness})

(def AutoRepair
  {:db/ident        :schema/AutoRepair,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Car repair business.",
   :rdfs/label      "AutoRepair",
   :rdfs/subClassOf :schema/AutomotiveBusiness})

(def AutoWash
  {:db/ident        :schema/AutoWash,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A car wash business.",
   :rdfs/label      "AutoWash",
   :rdfs/subClassOf :schema/AutomotiveBusiness})

(def AutomatedTeller
  {:db/ident        :schema/AutomatedTeller,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "ATM/cash machine.",
   :rdfs/label      "AutomatedTeller",
   :rdfs/subClassOf :schema/FinancialService})

(def AutomotiveBusiness
  {:db/ident        :schema/AutomotiveBusiness,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Car repair, sales, or parts.",
   :rdfs/label      "AutomotiveBusiness",
   :rdfs/subClassOf :schema/LocalBusiness})

(def Ayurvedic
  {:db/ident :schema/Ayurvedic,
   :rdf/type :schema/MedicineSystem,
   :rdfs/comment
   "A system of medicine that originated in India over thousands of years and that focuses on integrating and balancing the body, mind, and spirit.",
   :rdfs/label "Ayurvedic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def BackOrder
  {:db/ident     :schema/BackOrder,
   :rdf/type     :schema/ItemAvailability,
   :rdfs/comment "Indicates that the item is available on back order.",
   :rdfs/label   "BackOrder"})

(def BackgroundNewsArticle
  {:db/ident :schema/BackgroundNewsArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[NewsArticle]] providing historical context, definition and detail on a specific topic (aka \"explainer\" or \"backgrounder\"). For example, an in-depth article or frequently-asked-questions ([FAQ](https://en.wikipedia.org/wiki/FAQ)) document on topics such as Climate Change or the European Union. Other kinds of background material from a non-news setting are often described using [[Book]] or [[Article]], in particular [[ScholarlyArticle]]. See also [[NewsArticle]] for related vocabulary from a learning/education perspective.",
   :rdfs/label "BackgroundNewsArticle",
   :rdfs/subClassOf :schema/NewsArticle,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def Bacteria
  {:db/ident        :schema/Bacteria,
   :rdf/type        :schema/InfectiousAgentClass,
   :rdfs/comment    "Pathogenic bacteria that cause bacterial infection.",
   :rdfs/label      "Bacteria",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Bakery
  {:db/ident        :schema/Bakery,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A bakery.",
   :rdfs/label      "Bakery",
   :rdfs/subClassOf :schema/FoodEstablishment})

(def Balance
  {:db/ident :schema/Balance,
   :rdf/type :schema/PhysicalActivityCategory,
   :rdfs/comment
   "Physical activity that is engaged to help maintain posture and balance.",
   :rdfs/label "Balance",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def BankAccount
  {:db/ident :schema/BankAccount,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A product or service offered by a bank whereby one may deposit, withdraw or transfer money and in some cases be paid interest.",
   :rdfs/label "BankAccount",
   :rdfs/subClassOf :schema/FinancialProduct,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}})

(def BankOrCreditUnion
  {:db/ident        :schema/BankOrCreditUnion,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Bank or credit union.",
   :rdfs/label      "BankOrCreditUnion",
   :rdfs/subClassOf :schema/FinancialService})

(def BarOrPub
  {:db/ident        :schema/BarOrPub,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A bar or pub.",
   :rdfs/label      "BarOrPub",
   :rdfs/subClassOf :schema/FoodEstablishment})

(def Barcode
  {:db/ident :schema/Barcode,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An image of a visual machine-readable code such as a barcode or QR code.",
   :rdfs/label "Barcode",
   :rdfs/subClassOf :schema/ImageObject})

(def BasicIncome
  {:db/ident        :schema/BasicIncome,
   :rdf/type        :schema/GovernmentBenefitsType,
   :rdfs/comment    "BasicIncome: this is a benefit for basic income.",
   :rdfs/label      "BasicIncome",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def Beach
  {:db/ident        :schema/Beach,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Beach.",
   :rdfs/label      "Beach",
   :rdfs/subClassOf :schema/CivicStructure})

(def BeautySalon
  {:db/ident        :schema/BeautySalon,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Beauty salon.",
   :rdfs/label      "BeautySalon",
   :rdfs/subClassOf :schema/HealthAndBeautyBusiness})

(def BedAndBreakfast
  {:db/ident :schema/BedAndBreakfast,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Bed and breakfast.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n",
   :rdfs/label "BedAndBreakfast",
   :rdfs/subClassOf :schema/LodgingBusiness})

(def BedDetails
  {:db/ident :schema/BedDetails,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An entity holding detailed information about the available bed types, e.g. the quantity of twin beds for a hotel room. For the single case of just one bed of a certain type, you can use bed directly with a text. See also [[BedType]] (under development).",
   :rdfs/label "BedDetails",
   :rdfs/subClassOf :schema/Intangible,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def BedType
  {:db/ident :schema/BedType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A type of bed. This is used for indicating the bed or beds available in an accommodation.",
   :rdfs/label "BedType",
   :rdfs/subClassOf :schema/QualitativeValue,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1262"}})

(def BefriendAction
  {:db/ident :schema/BefriendAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of forming a personal connection with someone (object) mutually/bidirectionally/symmetrically.\\n\\nRelated actions:\\n\\n* [[FollowAction]]: Unlike FollowAction, BefriendAction implies that the connection is reciprocal.",
   :rdfs/label "BefriendAction",
   :rdfs/subClassOf :schema/InteractAction})

(def BenefitsHealthAspect
  {:db/ident :schema/BenefitsHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Content about the benefits and advantages of usage or utilization of topic.",
   :rdfs/label "BenefitsHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def BikeStore
  {:db/ident        :schema/BikeStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A bike store.",
   :rdfs/label      "BikeStore",
   :rdfs/subClassOf :schema/Store})

(def BioChemEntity
  {:db/ident :schema/BioChemEntity,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any biological, chemical, or biochemical thing. For example: a protein; a gene; a chemical; a synthetic chemical.",
   :rdfs/label "BioChemEntity",
   :rdfs/subClassOf :schema/Thing,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI "http://bioschemas.org"}})

(def Blog
  {:db/ident :schema/Blog,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [blog](https://en.wikipedia.org/wiki/Blog), sometimes known as a \"weblog\". Note that the individual posts ([[BlogPosting]]s) in a [[Blog]] are often colloquially referred to by the same term.",
   :rdfs/label "Blog",
   :rdfs/subClassOf :schema/CreativeWork})

(def BlogPosting
  {:db/ident        :schema/BlogPosting,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A blog post.",
   :rdfs/label      "BlogPosting",
   :rdfs/subClassOf :schema/SocialMediaPosting})

(def BloodTest
  {:db/ident :schema/BloodTest,
   :rdf/type :rdfs/Class,
   :rdfs/comment "A medical test performed on a sample of a patient's blood.",
   :rdfs/label "BloodTest",
   :rdfs/subClassOf :schema/MedicalTest,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def BoardingPolicyType
  {:db/ident        :schema/BoardingPolicyType,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A type of boarding policy used by an airline.",
   :rdfs/label      "BoardingPolicyType",
   :rdfs/subClassOf :schema/Enumeration})

(def BoatReservation
  {:db/ident :schema/BoatReservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservation for boat travel.\n\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].",
   :rdfs/label "BoatReservation",
   :rdfs/subClassOf :schema/Reservation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1755"}})

(def BoatTerminal
  {:db/ident        :schema/BoatTerminal,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A terminal for boats, ships, and other water vessels.",
   :rdfs/label      "BoatTerminal",
   :rdfs/subClassOf :schema/CivicStructure,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1755"}})

(def BoatTrip
  {:db/ident        :schema/BoatTrip,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A trip on a commercial ferry line.",
   :rdfs/label      "BoatTrip",
   :rdfs/subClassOf :schema/Trip,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1755"}})

(def BodyMeasurementArm
  {:db/ident :schema/BodyMeasurementArm,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Arm length (measured between arms/shoulder line intersection and the prominent wrist bone). Used, for example, to fit shirts.",
   :rdfs/label "BodyMeasurementArm",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementBust
  {:db/ident :schema/BodyMeasurementBust,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Maximum girth of bust. Used, for example, to fit women's suits.",
   :rdfs/label "BodyMeasurementBust",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementChest
  {:db/ident :schema/BodyMeasurementChest,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Maximum girth of chest. Used, for example, to fit men's suits.",
   :rdfs/label "BodyMeasurementChest",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementFoot
  {:db/ident :schema/BodyMeasurementFoot,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Foot length (measured between end of the most prominent toe and the most prominent part of the heel). Used, for example, to measure socks.",
   :rdfs/label "BodyMeasurementFoot",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementHand
  {:db/ident :schema/BodyMeasurementHand,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Maximum hand girth (measured over the knuckles of the open right hand excluding thumb, fingers together). Used, for example, to fit gloves.",
   :rdfs/label "BodyMeasurementHand",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementHead
  {:db/ident :schema/BodyMeasurementHead,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Maximum girth of head above the ears. Used, for example, to fit hats.",
   :rdfs/label "BodyMeasurementHead",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementHeight
  {:db/ident :schema/BodyMeasurementHeight,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Body height (measured between crown of head and soles of feet). Used, for example, to fit jackets.",
   :rdfs/label "BodyMeasurementHeight",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementHips
  {:db/ident :schema/BodyMeasurementHips,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Girth of hips (measured around the buttocks). Used, for example, to fit skirts.",
   :rdfs/label "BodyMeasurementHips",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementInsideLeg
  {:db/ident :schema/BodyMeasurementInsideLeg,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Inside leg (measured between crotch and soles of feet). Used, for example, to fit pants.",
   :rdfs/label "BodyMeasurementInsideLeg",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementNeck
  {:db/ident        :schema/BodyMeasurementNeck,
   :rdf/type        :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment    "Girth of neck. Used, for example, to fit shirts.",
   :rdfs/label      "BodyMeasurementNeck",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementTypeEnumeration
  {:db/ident :schema/BodyMeasurementTypeEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates types (or dimensions) of a person's body measurements, for example for fitting of clothes.",
   :rdfs/label "BodyMeasurementTypeEnumeration",
   :rdfs/subClassOf :schema/MeasurementTypeEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementUnderbust
  {:db/ident :schema/BodyMeasurementUnderbust,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Girth of body just below the bust. Used, for example, to fit women's swimwear.",
   :rdfs/label "BodyMeasurementUnderbust",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementWaist
  {:db/ident :schema/BodyMeasurementWaist,
   :rdf/type :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment
   "Girth of natural waistline (between hip bones and lower ribs). Used, for example, to fit pants.",
   :rdfs/label "BodyMeasurementWaist",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyMeasurementWeight
  {:db/ident        :schema/BodyMeasurementWeight,
   :rdf/type        :schema/BodyMeasurementTypeEnumeration,
   :rdfs/comment    "Body weight. Used, for example, to measure pantyhose.",
   :rdfs/label      "BodyMeasurementWeight",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def BodyOfWater
  {:db/ident        :schema/BodyOfWater,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A body of water, such as a sea, ocean, or lake.",
   :rdfs/label      "BodyOfWater",
   :rdfs/subClassOf :schema/Landform})

(def Bone
  {:db/ident :schema/Bone,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Rigid connective tissue that comprises up the skeletal structure of the human body.",
   :rdfs/label "Bone",
   :rdfs/subClassOf :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Book
  {:db/ident        :schema/Book,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A book.",
   :rdfs/label      "Book",
   :rdfs/subClassOf :schema/CreativeWork})

(def BookFormatType
  {:db/ident        :schema/BookFormatType,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The publication format of the book.",
   :rdfs/label      "BookFormatType",
   :rdfs/subClassOf :schema/Enumeration})

(def BookSeries
  {:db/ident :schema/BookSeries,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A series of books. Included books can be indicated with the hasPart property.",
   :rdfs/label "BookSeries",
   :rdfs/subClassOf :schema/CreativeWorkSeries})

(def BookStore
  {:db/ident        :schema/BookStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A bookstore.",
   :rdfs/label      "BookStore",
   :rdfs/subClassOf :schema/Store})

(def BookmarkAction
  {:db/ident        :schema/BookmarkAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An agent bookmarks/flags/labels/tags/marks an object.",
   :rdfs/label      "BookmarkAction",
   :rdfs/subClassOf :schema/OrganizeAction})

(def BooleanClass
  {:db/ident     :schema/Boolean,
   :rdf/type     #{:schema/DataType :rdfs/Class},
   :rdfs/comment "Boolean: True or False.",
   :rdfs/label   "Boolean"})

(def BorrowAction
  {:db/ident :schema/BorrowAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of obtaining an object under an agreement to return it at a later date. Reciprocal of LendAction.\\n\\nRelated actions:\\n\\n* [[LendAction]]: Reciprocal of BorrowAction.",
   :rdfs/label "BorrowAction",
   :rdfs/subClassOf :schema/TransferAction})

(def BowlingAlley
  {:db/ident        :schema/BowlingAlley,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A bowling alley.",
   :rdfs/label      "BowlingAlley",
   :rdfs/subClassOf :schema/SportsActivityLocation})

(def BrainStructure
  {:db/ident :schema/BrainStructure,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any anatomical structure which pertains to the soft nervous tissue functioning as the coordinating center of sensation and intellectual and nervous activity.",
   :rdfs/label "BrainStructure",
   :rdfs/subClassOf :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Brand
  {:db/ident :schema/Brand,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A brand is a name used by an organization or business person for labeling a product, product group, or similar.",
   :rdfs/label "Brand",
   :rdfs/subClassOf :schema/Intangible,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def BreadcrumbList
  {:db/ident :schema/BreadcrumbList,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A BreadcrumbList is an ItemList consisting of a chain of linked Web pages, typically described using at least their URL and their name, and typically ending with the current page.\\n\\nThe [[position]] property is used to reconstruct the order of the items in a BreadcrumbList. The convention is that a breadcrumb list has an [[itemListOrder]] of [[ItemListOrderAscending]] (lower values listed first), and that the first items in this list correspond to the \"top\" or beginning of the breadcrumb trail, e.g. with a site or section homepage. The specific values of 'position' are not assigned meaning for a BreadcrumbList, but they should be integers, e.g. beginning with '1' for the first item in the list.\n      ",
   :rdfs/label "BreadcrumbList",
   :rdfs/subClassOf :schema/ItemList})

(def Brewery
  {:db/ident        :schema/Brewery,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Brewery.",
   :rdfs/label      "Brewery",
   :rdfs/subClassOf :schema/FoodEstablishment})

(def Bridge
  {:db/ident        :schema/Bridge,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A bridge.",
   :rdfs/label      "Bridge",
   :rdfs/subClassOf :schema/CivicStructure})

(def BroadcastChannel
  {:db/ident :schema/BroadcastChannel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A unique instance of a BroadcastService on a CableOrSatelliteService lineup.",
   :rdfs/label "BroadcastChannel",
   :rdfs/subClassOf :schema/Intangible})

(def BroadcastEvent
  {:db/ident        :schema/BroadcastEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An over the air or online broadcast event.",
   :rdfs/label      "BroadcastEvent",
   :rdfs/subClassOf :schema/PublicationEvent})

(def BroadcastFrequencySpecification
  {:db/ident :schema/BroadcastFrequencySpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The frequency in MHz and the modulation used for a particular BroadcastService.",
   :rdfs/label "BroadcastFrequencySpecification",
   :rdfs/subClassOf :schema/Intangible,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1004"}})

(def BroadcastRelease
  {:db/ident           :schema/BroadcastRelease,
   :rdf/type           :schema/MusicAlbumReleaseType,
   :rdfs/comment       "BroadcastRelease.",
   :rdfs/label         "BroadcastRelease",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def BroadcastService
  {:db/ident :schema/BroadcastService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A delivery service through which content is provided via broadcast over the air or online.",
   :rdfs/label "BroadcastService",
   :rdfs/subClassOf :schema/Service})

(def BrokerageAccount
  {:db/ident :schema/BrokerageAccount,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An account that allows an investor to deposit funds and place investment orders with a licensed broker or brokerage firm.",
   :rdfs/label "BrokerageAccount",
   :rdfs/subClassOf :schema/InvestmentOrDeposit,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def BuddhistTemple
  {:db/ident        :schema/BuddhistTemple,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A Buddhist temple.",
   :rdfs/label      "BuddhistTemple",
   :rdfs/subClassOf :schema/PlaceOfWorship})

(def BusOrCoach
  {:db/ident :schema/BusOrCoach,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A bus (also omnibus or autobus) is a road vehicle designed to carry passengers. Coaches are luxury busses, usually in service for long distance travel.",
   :rdfs/label "BusOrCoach",
   :rdfs/subClassOf :schema/Vehicle,
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"}})

(def BusReservation
  {:db/ident :schema/BusReservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservation for bus travel. \\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].",
   :rdfs/label "BusReservation",
   :rdfs/subClassOf :schema/Reservation})

(def BusStation
  {:db/ident        :schema/BusStation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A bus station.",
   :rdfs/label      "BusStation",
   :rdfs/subClassOf :schema/CivicStructure})

(def BusStop
  {:db/ident        :schema/BusStop,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A bus stop.",
   :rdfs/label      "BusStop",
   :rdfs/subClassOf :schema/CivicStructure})

(def BusTrip
  {:db/ident        :schema/BusTrip,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A trip on a commercial bus line.",
   :rdfs/label      "BusTrip",
   :rdfs/subClassOf :schema/Trip})

(def BusinessAudience
  {:db/ident :schema/BusinessAudience,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A set of characteristics belonging to businesses, e.g. who compose an item's target audience.",
   :rdfs/label "BusinessAudience",
   :rdfs/subClassOf :schema/Audience})

(def BusinessEntityType
  {:db/ident :schema/BusinessEntityType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A business entity type is a conceptual entity representing the legal form, the size, the main line of business, the position in the value chain, or any combination thereof, of an organization or business person.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#Business\\n* http://purl.org/goodrelations/v1#Enduser\\n* http://purl.org/goodrelations/v1#PublicInstitution\\n* http://purl.org/goodrelations/v1#Reseller\n\t  ",
   :rdfs/label "BusinessEntityType",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def BusinessEvent
  {:db/ident        :schema/BusinessEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Business event.",
   :rdfs/label      "BusinessEvent",
   :rdfs/subClassOf :schema/Event})

(def BusinessFunction
  {:db/ident :schema/BusinessFunction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The business function specifies the type of activity or access (i.e., the bundle of rights) offered by the organization or business person through the offer. Typical are sell, rental or lease, maintenance or repair, manufacture / produce, recycle / dispose, engineering / construction, or installation. Proprietary specifications of access rights are also instances of this class.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#ConstructionInstallation\\n* http://purl.org/goodrelations/v1#Dispose\\n* http://purl.org/goodrelations/v1#LeaseOut\\n* http://purl.org/goodrelations/v1#Maintain\\n* http://purl.org/goodrelations/v1#ProvideService\\n* http://purl.org/goodrelations/v1#Repair\\n* http://purl.org/goodrelations/v1#Sell\\n* http://purl.org/goodrelations/v1#Buy\n        ",
   :rdfs/label "BusinessFunction",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def BusinessSupport
  {:db/ident :schema/BusinessSupport,
   :rdf/type :schema/GovernmentBenefitsType,
   :rdfs/comment
   "BusinessSupport: this is a benefit for supporting businesses.",
   :rdfs/label "BusinessSupport",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def BuyAction
  {:db/ident :schema/BuyAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of giving money to a seller in exchange for goods or services rendered. An agent buys an object, product, or service from a seller for a price. Reciprocal of SellAction.",
   :rdfs/label "BuyAction",
   :rdfs/subClassOf :schema/TradeAction})

(def CDCPMDRecord
  {:db/ident :schema/CDCPMDRecord,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A CDCPMDRecord is a data structure representing a record in a CDC tabular data format\n      used for hospital data reporting. See [documentation](/docs/cdc-covid.html) for details, and the linked CDC materials for authoritative\n      definitions used as the source here.\n      ",
   :rdfs/label "CDCPMDRecord",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def CDFormat
  {:db/ident           :schema/CDFormat,
   :rdf/type           :schema/MusicReleaseFormatType,
   :rdfs/comment       "CDFormat.",
   :rdfs/label         "CDFormat",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def CT
  {:db/ident        :schema/CT,
   :rdf/type        :schema/MedicalImagingTechnique,
   :rdfs/comment    "X-ray computed tomography imaging.",
   :rdfs/label      "CT",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def CableOrSatelliteService
  {:db/ident :schema/CableOrSatelliteService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A service which provides access to media programming like TV or radio. Access may be via cable or satellite.",
   :rdfs/label "CableOrSatelliteService",
   :rdfs/subClassOf :schema/Service})

(def CafeOrCoffeeShop
  {:db/ident        :schema/CafeOrCoffeeShop,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A cafe or coffee shop.",
   :rdfs/label      "CafeOrCoffeeShop",
   :rdfs/subClassOf :schema/FoodEstablishment})

(def Campground
  {:db/ident :schema/Campground,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A camping site, campsite, or [[Campground]] is a place used for overnight stay in the outdoors, typically containing individual [[CampingPitch]] locations. \\n\\n\nIn British English a campsite is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites (source: Wikipedia, see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite)).\\n\\n\n\nSee also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).\n",
   :rdfs/label "Campground",
   :rdfs/subClassOf #{:schema/LodgingBusiness :schema/CivicStructure},
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def CampingPitch
  {:db/ident :schema/CampingPitch,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[CampingPitch]] is an individual place for overnight stay in the outdoors, typically being part of a larger camping site, or [[Campground]].\\n\\n\nIn British English a campsite, or campground, is an area, usually divided into a number of pitches, where people can camp overnight using tents or camper vans or caravans; this British English use of the word is synonymous with the American English expression campground. In American English the term campsite generally means an area where an individual, family, group, or military unit can pitch a tent or park a camper; a campground may contain many campsites.\n(Source: Wikipedia, see [https://en.wikipedia.org/wiki/Campsite](https://en.wikipedia.org/wiki/Campsite).)\\n\\n\nSee also the dedicated [document on the use of schema.org for marking up hotels and other forms of accommodations](/docs/hotels.html).\n",
   :rdfs/label "CampingPitch",
   :rdfs/subClassOf :schema/Accommodation,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def Canal
  {:db/ident        :schema/Canal,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A canal, like the Panama Canal.",
   :rdfs/label      "Canal",
   :rdfs/subClassOf :schema/BodyOfWater})

(def CancelAction
  {:db/ident :schema/CancelAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of asserting that a future event/action is no longer going to happen.\\n\\nRelated actions:\\n\\n* [[ConfirmAction]]: The antonym of CancelAction.",
   :rdfs/label "CancelAction",
   :rdfs/subClassOf :schema/PlanAction})

(def Car
  {:db/ident :schema/Car,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A car is a wheeled, self-powered motor vehicle used for transportation.",
   :rdfs/label "Car",
   :rdfs/subClassOf :schema/Vehicle,
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def CarUsageType
  {:db/ident :schema/CarUsageType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A value indicating a special usage of a car, e.g. commercial rental, driving school, or as a taxi.",
   :rdfs/label "CarUsageType",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"}})

(def Cardiovascular
  {:db/ident :schema/Cardiovascular,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to diagnosis and treatment of disorders of heart and vasculature.",
   :rdfs/label "Cardiovascular",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def CardiovascularExam
  {:db/ident :schema/CardiovascularExam,
   :rdf/type :schema/PhysicalExam,
   :rdfs/comment "Cardiovascular system assessment with clinical examination.",
   :rdfs/label "CardiovascularExam",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def CaseSeries
  {:db/ident :schema/CaseSeries,
   :rdf/type :schema/MedicalObservationalStudyDesign,
   :rdfs/comment
   "A case series (also known as a clinical series) is a medical research study that tracks patients with a known exposure given similar treatment or examines their medical records for exposure and outcome. A case series can be retrospective or prospective and usually involves a smaller number of patients than the more powerful case-control studies or randomized controlled trials. Case series may be consecutive or non-consecutive, depending on whether all cases presenting to the reporting authors over a period of time were included, or only a selection.",
   :rdfs/label "CaseSeries",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Casino
  {:db/ident        :schema/Casino,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A casino.",
   :rdfs/label      "Casino",
   :rdfs/subClassOf :schema/EntertainmentBusiness})

(def CassetteFormat
  {:db/ident           :schema/CassetteFormat,
   :rdf/type           :schema/MusicReleaseFormatType,
   :rdfs/comment       "CassetteFormat.",
   :rdfs/label         "CassetteFormat",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def CategoryCode
  {:db/ident        :schema/CategoryCode,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A Category Code.",
   :rdfs/label      "CategoryCode",
   :rdfs/subClassOf :schema/DefinedTerm,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/894"}})

(def CategoryCodeSet
  {:db/ident        :schema/CategoryCodeSet,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A set of Category Code values.",
   :rdfs/label      "CategoryCodeSet",
   :rdfs/subClassOf :schema/DefinedTermSet,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/894"}})

(def CatholicChurch
  {:db/ident        :schema/CatholicChurch,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A Catholic church.",
   :rdfs/label      "CatholicChurch",
   :rdfs/subClassOf :schema/Church})

(def CausesHealthAspect
  {:db/ident :schema/CausesHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Information about the causes and main actions that gave rise to the topic.",
   :rdfs/label "CausesHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def Cemetery
  {:db/ident        :schema/Cemetery,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A graveyard.",
   :rdfs/label      "Cemetery",
   :rdfs/subClassOf :schema/CivicStructure})

(def Chapter
  {:db/ident :schema/Chapter,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "One of the sections into which a book is divided. A chapter usually has a section number or a name.",
   :rdfs/label "Chapter",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"}})

(def CharitableIncorporatedOrganization
  {:db/ident :schema/CharitableIncorporatedOrganization,
   :rdf/type :schema/UKNonprofitType,
   :rdfs/comment
   "CharitableIncorporatedOrganization: Non-profit type referring to a Charitable Incorporated Organization (UK).",
   :rdfs/label "CharitableIncorporatedOrganization",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def CheckAction
  {:db/ident :schema/CheckAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An agent inspects, determines, investigates, inquires, or examines an object's accuracy, quality, condition, or state.",
   :rdfs/label "CheckAction",
   :rdfs/subClassOf :schema/FindAction})

(def CheckInAction
  {:db/ident :schema/CheckInAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of an agent communicating (service provider, social media, etc) their arrival by registering/confirming for a previously reserved service (e.g. flight check-in) or at a place (e.g. hotel), possibly resulting in a result (boarding pass, etc).\\n\\nRelated actions:\\n\\n* [[CheckOutAction]]: The antonym of CheckInAction.\\n* [[ArriveAction]]: Unlike ArriveAction, CheckInAction implies that the agent is informing/confirming the start of a previously reserved service.\\n* [[ConfirmAction]]: Unlike ConfirmAction, CheckInAction implies that the agent is informing/confirming the *start* of a previously reserved service rather than its validity/existence.",
   :rdfs/label "CheckInAction",
   :rdfs/subClassOf :schema/CommunicateAction})

(def CheckOutAction
  {:db/ident :schema/CheckOutAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of an agent communicating (service provider, social media, etc) their departure of a previously reserved service (e.g. flight check-in) or place (e.g. hotel).\\n\\nRelated actions:\\n\\n* [[CheckInAction]]: The antonym of CheckOutAction.\\n* [[DepartAction]]: Unlike DepartAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.\\n* [[CancelAction]]: Unlike CancelAction, CheckOutAction implies that the agent is informing/confirming the end of a previously reserved service.",
   :rdfs/label "CheckOutAction",
   :rdfs/subClassOf :schema/CommunicateAction})

(def CheckoutPage
  {:db/ident        :schema/CheckoutPage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Web page type: Checkout page.",
   :rdfs/label      "CheckoutPage",
   :rdfs/subClassOf :schema/WebPage})

(def ChemicalSubstance
  {:db/ident :schema/ChemicalSubstance,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A chemical substance is 'a portion of matter of constant composition, composed of molecular entities of the same type or of different types' (source: [ChEBI:59999](https://www.ebi.ac.uk/chebi/searchId.do?chebiId=59999)).",
   :rdfs/label "ChemicalSubstance",
   :rdfs/subClassOf :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source #{{:xsd/anyURI "http://bioschemas.org"}
                    {:xsd/anyURI
                     "https://www.ebi.ac.uk/chebi/searchId.do?chebiId=59999"}}})

(def ChildCare
  {:db/ident        :schema/ChildCare,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A Childcare center.",
   :rdfs/label      "ChildCare",
   :rdfs/subClassOf :schema/LocalBusiness})

(def ChildrensEvent
  {:db/ident        :schema/ChildrensEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Children's event.",
   :rdfs/label      "ChildrensEvent",
   :rdfs/subClassOf :schema/Event})

(def Chiropractic
  {:db/ident :schema/Chiropractic,
   :rdf/type :schema/MedicineSystem,
   :rdfs/comment
   "A system of medicine focused on the relationship between the body's structure, mainly the spine, and its functioning.",
   :rdfs/label "Chiropractic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ChooseAction
  {:db/ident :schema/ChooseAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of expressing a preference from a set of options or a large or unbounded set of choices/options.",
   :rdfs/label "ChooseAction",
   :rdfs/subClassOf :schema/AssessAction})

(def Church
  {:db/ident        :schema/Church,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A church.",
   :rdfs/label      "Church",
   :rdfs/subClassOf :schema/PlaceOfWorship})

(def City
  {:db/ident        :schema/City,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A city or town.",
   :rdfs/label      "City",
   :rdfs/subClassOf :schema/AdministrativeArea})

(def CityHall
  {:db/ident        :schema/CityHall,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A city hall.",
   :rdfs/label      "CityHall",
   :rdfs/subClassOf :schema/GovernmentBuilding})

(def CivicStructure
  {:db/ident        :schema/CivicStructure,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A public structure, such as a town hall or concert hall.",
   :rdfs/label      "CivicStructure",
   :rdfs/subClassOf :schema/Place})

(def Claim
  {:db/ident :schema/Claim,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[Claim]] in Schema.org represents a specific, factually-oriented claim that could be the [[itemReviewed]] in a [[ClaimReview]]. The content of a claim can be summarized with the [[text]] property. Variations on well known claims can have their common identity indicated via [[sameAs]] links, and summarized with a [[name]]. Ideally, a [[Claim]] description includes enough contextual information to minimize the risk of ambiguity or inclarity. In practice, many claims are better understood in the context in which they appear or the interpretations provided by claim reviews.\n\n  Beyond [[ClaimReview]], the Claim type can be associated with related creative works - for example a [[ScholarlyArticle]] or [[Question]] might be [[about]] some [[Claim]].\n\n  At this time, Schema.org does not define any types of relationship between claims. This is a natural area for future exploration.\n  ",
   :rdfs/label "Claim",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1828"}})

(def ClaimReview
  {:db/ident :schema/ClaimReview,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A fact-checking review of claims made (or reported) in some creative work (referenced via itemReviewed).",
   :rdfs/label "ClaimReview",
   :rdfs/subClassOf :schema/Review,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1061"}})

(def T
  {:db/ident :schema/Class,
   :owl/equivalentClass :rdfs/Class,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A class, also often called a 'Type'; equivalent to rdfs:Class.",
   :rdfs/label "Class",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://meta.schema.org"}})

(def CleaningFee
  {:db/ident :schema/CleaningFee,
   :rdf/type :schema/PriceComponentTypeEnumeration,
   :rdfs/comment
   "Represents the cleaning fee part of the total price for an offered product, for example a vacation rental.",
   :rdfs/label "CleaningFee",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def Clinician
  {:db/ident :schema/Clinician,
   :rdf/type :schema/MedicalAudienceType,
   :rdfs/comment
   "Medical clinicians, including practicing physicians and other medical professionals involved in clinical practice.",
   :rdfs/label "Clinician",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Clip
  {:db/ident :schema/Clip,
   :rdf/type :rdfs/Class,
   :rdfs/comment "A short TV or radio program or a segment/part of a program.",
   :rdfs/label "Clip",
   :rdfs/subClassOf :schema/CreativeWork})

(def ClothingStore
  {:db/ident        :schema/ClothingStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A clothing store.",
   :rdfs/label      "ClothingStore",
   :rdfs/subClassOf :schema/Store})

(def CoOp
  {:db/ident :schema/CoOp,
   :rdf/type :schema/GamePlayMode,
   :rdfs/comment
   "Play mode: CoOp. Co-operative games, where you play on the same team with friends.",
   :rdfs/label "CoOp"})

(def Code
  {:db/ident :schema/Code,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.",
   :rdfs/label "Code",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/supersededBy :schema/SoftwareSourceCode})

(def CohortStudy
  {:db/ident :schema/CohortStudy,
   :rdf/type :schema/MedicalObservationalStudyDesign,
   :rdfs/comment
   "Also known as a panel study. A cohort study is a form of longitudinal study used in medicine and social science. It is one type of study design and should be compared with a cross-sectional study.  A cohort is a group of people who share a common characteristic or experience within a defined period (e.g., are born, leave school, lose their job, are exposed to a drug or a vaccine, etc.). The comparison group may be the general population from which the cohort is drawn, or it may be another cohort of persons thought to have had little or no exposure to the substance under investigation, but otherwise similar. Alternatively, subgroups within the cohort may be compared with each other.",
   :rdfs/label "CohortStudy",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Collection
  {:db/ident        :schema/Collection,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A collection of items, e.g. creative works or products.",
   :rdfs/label      "Collection",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"}})

(def CollectionPage
  {:db/ident        :schema/CollectionPage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Web page type: Collection page.",
   :rdfs/label      "CollectionPage",
   :rdfs/subClassOf :schema/WebPage})

(def CollegeOrUniversity
  {:db/ident :schema/CollegeOrUniversity,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A college, university, or other third-level educational institution.",
   :rdfs/label "CollegeOrUniversity",
   :rdfs/subClassOf :schema/EducationalOrganization})

(def ComedyClub
  {:db/ident        :schema/ComedyClub,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A comedy club.",
   :rdfs/label      "ComedyClub",
   :rdfs/subClassOf :schema/EntertainmentBusiness})

(def ComedyEvent
  {:db/ident        :schema/ComedyEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Comedy event.",
   :rdfs/label      "ComedyEvent",
   :rdfs/subClassOf :schema/Event})

(def ComicCoverArt
  {:db/ident        :schema/ComicCoverArt,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The artwork on the cover of a comic.",
   :rdfs/label      "ComicCoverArt",
   :rdfs/subClassOf #{:schema/CoverArt :schema/ComicStory},
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"}})

(def ComicIssue
  {:db/ident :schema/ComicIssue,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Individual comic issues are serially published as\n    \tpart of a larger series. For the sake of consistency, even one-shot issues\n    \tbelong to a series comprised of a single issue. All comic issues can be\n    \tuniquely identified by: the combination of the name and volume number of the\n    \tseries to which the issue belongs; the issue number; and the variant\n    \tdescription of the issue (if any).",
   :rdfs/label "ComicIssue",
   :rdfs/subClassOf :schema/PublicationIssue,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"}})

(def ComicSeries
  {:db/ident :schema/ComicSeries,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A sequential publication of comic stories under a\n    \tunifying title, for example \"The Amazing Spider-Man\" or \"Groo the\n    \tWanderer\".",
   :rdfs/label "ComicSeries",
   :rdfs/subClassOf :schema/Periodical,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"}})

(def ComicStory
  {:db/ident :schema/ComicStory,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The term \"story\" is any indivisible, re-printable\n    \tunit of a comic, including the interior stories, covers, and backmatter. Most\n    \tcomics have at least two stories: a cover (ComicCoverArt) and an interior story.",
   :rdfs/label "ComicStory",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"}})

(def Comment
  {:db/ident :schema/Comment,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A comment on an item - for example, a comment on a blog post. The comment's content is expressed via the [[text]] property, and its topic via [[about]], properties shared with all CreativeWorks.",
   :rdfs/label "Comment",
   :rdfs/subClassOf :schema/CreativeWork})

(def CommentAction
  {:db/ident        :schema/CommentAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of generating a comment about a subject.",
   :rdfs/label      "CommentAction",
   :rdfs/subClassOf :schema/CommunicateAction})

(def CommentPermission
  {:db/ident     :schema/CommentPermission,
   :rdf/type     :schema/DigitalDocumentPermissionType,
   :rdfs/comment "Permission to add comments to the document.",
   :rdfs/label   "CommentPermission"})

(def CommunicateAction
  {:db/ident :schema/CommunicateAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of conveying information to another person via a communication medium (instrument) such as speech, email, or telephone conversation.",
   :rdfs/label "CommunicateAction",
   :rdfs/subClassOf :schema/InteractAction})

(def CommunityHealth
  {:db/ident :schema/CommunityHealth,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A field of public health focusing on improving health characteristics of a defined population in relation with their geographical or environment areas.",
   :rdfs/label "CommunityHealth",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def CompilationAlbum
  {:db/ident           :schema/CompilationAlbum,
   :rdf/type           :schema/MusicAlbumProductionType,
   :rdfs/comment       "CompilationAlbum.",
   :rdfs/label         "CompilationAlbum",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def CompleteDataFeed
  {:db/ident :schema/CompleteDataFeed,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[CompleteDataFeed]] is a [[DataFeed]] whose standard representation includes content for every item currently in the feed.\n\nThis is the equivalent of Atom's element as defined in Feed Paging and Archiving [RFC 5005](https://tools.ietf.org/html/rfc5005), for example (and as defined for Atom), when using data from a feed that represents a collection of items that varies over time (e.g. \"Top Twenty Records\") there is no need to have newer entries mixed in alongside older, obsolete entries. By marking this feed as a CompleteDataFeed, old entries can be safely discarded when the feed is refreshed, since we can assume the feed has provided descriptions for all current items.",
   :rdfs/label "CompleteDataFeed",
   :rdfs/subClassOf :schema/DataFeed,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1397"}})

(def Completed
  {:db/ident        :schema/Completed,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Completed.",
   :rdfs/label      "Completed",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def CompletedActionStatus
  {:db/ident     :schema/CompletedActionStatus,
   :rdf/type     :schema/ActionStatusType,
   :rdfs/comment "An action that has already taken place.",
   :rdfs/label   "CompletedActionStatus"})

(def CompoundPriceSpecification
  {:db/ident :schema/CompoundPriceSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A compound price specification is one that bundles multiple prices that all apply in combination for different dimensions of consumption. Use the name property of the attached unit price specification for indicating the dimension of a price component (e.g. \"electricity\" or \"final cleaning\").",
   :rdfs/label "CompoundPriceSpecification",
   :rdfs/subClassOf :schema/PriceSpecification,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def ComputerLanguage
  {:db/ident :schema/ComputerLanguage,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "This type covers computer programming languages such as Scheme and Lisp, as well as other language-like computer representations. Natural languages are best represented with the [[Language]] type.",
   :rdfs/label "ComputerLanguage",
   :rdfs/subClassOf :schema/Intangible})

(def ComputerStore
  {:db/ident        :schema/ComputerStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A computer store.",
   :rdfs/label      "ComputerStore",
   :rdfs/subClassOf :schema/Store})

(def ConfirmAction
  {:db/ident :schema/ConfirmAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of notifying someone that a future event/action is going to happen as expected.\\n\\nRelated actions:\\n\\n* [[CancelAction]]: The antonym of ConfirmAction.",
   :rdfs/label "ConfirmAction",
   :rdfs/subClassOf :schema/InformAction})

(def Consortium
  {:db/ident :schema/Consortium,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A Consortium is a membership [[Organization]] whose members are typically Organizations.",
   :rdfs/label "Consortium",
   :rdfs/subClassOf :schema/Organization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1559"}})

(def ConstraintNode
  {:db/ident :schema/ConstraintNode,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The ConstraintNode type is provided to support usecases in which a node in a structured data graph is described with properties which appear to describe a single entity, but are being used in a situation where they serve a more abstract purpose. A [[ConstraintNode]] can be described using [[constraintProperty]] and [[numConstraints]]. These constraint properties can serve a \n    variety of purposes, and their values may sometimes be understood to indicate sets of possible values rather than single, exact and specific values.",
   :rdfs/label "ConstraintNode",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2564"}})

(def ConsumeAction
  {:db/ident        :schema/ConsumeAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of ingesting information/resources/food.",
   :rdfs/label      "ConsumeAction",
   :rdfs/subClassOf :schema/Action})

(def ContactPage
  {:db/ident        :schema/ContactPage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Web page type: Contact page.",
   :rdfs/label      "ContactPage",
   :rdfs/subClassOf :schema/WebPage})

(def ContactPoint
  {:db/ident :schema/ContactPoint,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A contact point&#x2014;for example, a Customer Complaints department.",
   :rdfs/label "ContactPoint",
   :rdfs/subClassOf :schema/StructuredValue})

(def ContactPointOption
  {:db/ident        :schema/ContactPointOption,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Enumerated options related to a ContactPoint.",
   :rdfs/label      "ContactPointOption",
   :rdfs/subClassOf :schema/Enumeration})

(def ContagiousnessHealthAspect
  {:db/ident :schema/ContagiousnessHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Content about contagion mechanisms and contagiousness information over the topic.",
   :rdfs/label "ContagiousnessHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def Continent
  {:db/ident        :schema/Continent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "One of the continents (for example, Europe or Africa).",
   :rdfs/label      "Continent",
   :rdfs/subClassOf :schema/Landform})

(def ControlAction
  {:db/ident        :schema/ControlAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An agent controls a device or application.",
   :rdfs/label      "ControlAction",
   :rdfs/subClassOf :schema/Action})

(def ConvenienceStore
  {:db/ident        :schema/ConvenienceStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A convenience store.",
   :rdfs/label      "ConvenienceStore",
   :rdfs/subClassOf :schema/Store})

(def Conversation
  {:db/ident :schema/Conversation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "One or more messages between organizations or people on a particular topic. Individual messages can be linked to the conversation with isPartOf or hasPart properties.",
   :rdfs/label "Conversation",
   :rdfs/subClassOf :schema/CreativeWork})

(def CookAction
  {:db/ident        :schema/CookAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of producing/preparing food.",
   :rdfs/label      "CookAction",
   :rdfs/subClassOf :schema/CreateAction})

(def Corporation
  {:db/ident           :schema/Corporation,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "Organization: A business corporation.",
   :rdfs/label         "Corporation",
   :rdfs/subClassOf    :schema/Organization,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/rNews"}})

(def CorrectionComment
  {:db/ident        :schema/CorrectionComment,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A [[comment]] that corrects [[CreativeWork]].",
   :rdfs/label      "CorrectionComment",
   :rdfs/subClassOf :schema/Comment,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1950"}})

(def Country
  {:db/ident        :schema/Country,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A country.",
   :rdfs/label      "Country",
   :rdfs/subClassOf :schema/AdministrativeArea})

(def Course
  {:db/ident :schema/Course,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A description of an educational course which may be offered as distinct instances which take place at different times or take place at different locations, or be offered through different media or modes of study. An educational course is a sequence of one or more educational events and/or creative works which aims to build knowledge, competence or ability of learners.",
   :rdfs/label "Course",
   :rdfs/subClassOf #{:schema/LearningResource :schema/CreativeWork}})

(def CourseInstance
  {:db/ident :schema/CourseInstance,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An instance of a [[Course]] which is distinct from other instances because it is offered at a different time or location or through different media or modes of study or to a specific section of students.",
   :rdfs/label "CourseInstance",
   :rdfs/subClassOf :schema/Event})

(def Courthouse
  {:db/ident        :schema/Courthouse,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A courthouse.",
   :rdfs/label      "Courthouse",
   :rdfs/subClassOf :schema/GovernmentBuilding})

(def CoverArt
  {:db/ident        :schema/CoverArt,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The artwork on the outer surface of a CreativeWork.",
   :rdfs/label      "CoverArt",
   :rdfs/subClassOf :schema/VisualArtwork,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"}})

(def CovidTestingFacility
  {:db/ident :schema/CovidTestingFacility,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A CovidTestingFacility is a [[MedicalClinic]] where testing for the COVID-19 Coronavirus\n      disease is available. If the facility is being made available from an established [[Pharmacy]], [[Hotel]], or other\n      non-medical organization, multiple types can be listed. This makes it easier to re-use existing schema.org information\n      about that place, e.g. contact info, address, opening hours. Note that in an emergency, such information may not always be reliable.\n      ",
   :rdfs/label "CovidTestingFacility",
   :rdfs/subClassOf :schema/MedicalClinic,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def CreateAction
  {:db/ident :schema/CreateAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of deliberately creating/producing/generating/building a result out of the agent.",
   :rdfs/label "CreateAction",
   :rdfs/subClassOf :schema/Action})

(def CreativeWork
  {:db/ident :schema/CreativeWork,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The most generic kind of creative work, including books, movies, photographs, software programs, etc.",
   :rdfs/label "CreativeWork",
   :rdfs/subClassOf :schema/Thing,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/rNews"}})

(def CreativeWorkSeason
  {:db/ident        :schema/CreativeWorkSeason,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A media season, e.g. TV, radio, video game etc.",
   :rdfs/label      "CreativeWorkSeason",
   :rdfs/subClassOf :schema/CreativeWork})

(def CreativeWorkSeries
  {:db/ident :schema/CreativeWorkSeries,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A CreativeWorkSeries in schema.org is a group of related items, typically but not necessarily of the same kind. CreativeWorkSeries are usually organized into some order, often chronological. Unlike [[ItemList]] which is a general purpose data structure for lists of things, the emphasis with CreativeWorkSeries is on published materials (written e.g. books and periodicals, or media such as TV, radio and games).\\n\\nSpecific subtypes are available for describing [[TVSeries]], [[RadioSeries]], [[MovieSeries]], [[BookSeries]], [[Periodical]] and [[VideoGameSeries]]. In each case, the [[hasPart]] / [[isPartOf]] properties can be used to relate the CreativeWorkSeries to its parts. The general CreativeWorkSeries type serves largely just to organize these more specific and practical subtypes.\\n\\nIt is common for properties applicable to an item from the series to be usefully applied to the containing group. Schema.org attempts to anticipate some of these cases, but publishers should be free to apply properties of the series parts to the series as a whole wherever they seem appropriate.\n\t  ",
   :rdfs/label "CreativeWorkSeries",
   :rdfs/subClassOf #{:schema/Series :schema/CreativeWork}})

(def CreditCard
  {:db/ident :schema/CreditCard,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A card payment method of a particular brand or name.  Used to mark up a particular payment method and/or the financial product/service that supplies the card account.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#AmericanExpress\\n* http://purl.org/goodrelations/v1#DinersClub\\n* http://purl.org/goodrelations/v1#Discover\\n* http://purl.org/goodrelations/v1#JCB\\n* http://purl.org/goodrelations/v1#MasterCard\\n* http://purl.org/goodrelations/v1#VISA\n       ",
   :rdfs/label "CreditCard",
   :rdfs/subClassOf #{:schema/PaymentCard :schema/LoanOrCredit},
   :schema/contributor #{{:xsd/anyURI
                          "http://schema.org/docs/collab/GoodRelationsClass"}
                         {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}}})

(def Crematorium
  {:db/ident        :schema/Crematorium,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A crematorium.",
   :rdfs/label      "Crematorium",
   :rdfs/subClassOf :schema/CivicStructure})

(def CriticReview
  {:db/ident :schema/CriticReview,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[CriticReview]] is a more specialized form of Review written or published by a source that is recognized for its reviewing activities. These can include online columns, travel and food guides, TV and radio shows, blogs and other independent Web sites. [[CriticReview]]s are typically more in-depth and professionally written. For simpler, casually written user/visitor/viewer/customer reviews, it is more appropriate to use the [[UserReview]] type. Review aggregator sites such as Metacritic already separate out the site's user reviews from selected critic reviews that originate from third-party sources.",
   :rdfs/label "CriticReview",
   :rdfs/subClassOf :schema/Review,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1589"}})

(def CrossSectional
  {:db/ident :schema/CrossSectional,
   :rdf/type :schema/MedicalObservationalStudyDesign,
   :rdfs/comment
   "Studies carried out on pre-existing data (usually from 'snapshot' surveys), such as that collected by the Census Bureau. Sometimes called Prevalence Studies.",
   :rdfs/label "CrossSectional",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def CssSelectorType
  {:db/ident        :schema/CssSelectorType,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Text representing a CSS selector.",
   :rdfs/label      "CssSelectorType",
   :rdfs/subClassOf :schema/Text,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1672"}})

(def CurrencyConversionService
  {:db/ident :schema/CurrencyConversionService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A service to convert funds from one currency to another currency.",
   :rdfs/label "CurrencyConversionService",
   :rdfs/subClassOf :schema/FinancialProduct,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}})

(def DDxElement
  {:db/ident :schema/DDxElement,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An alternative, closely-related condition typically considered later in the differential diagnosis process along with the signs that are used to distinguish it.",
   :rdfs/label "DDxElement",
   :rdfs/subClassOf :schema/MedicalIntangible,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DJMixAlbum
  {:db/ident           :schema/DJMixAlbum,
   :rdf/type           :schema/MusicAlbumProductionType,
   :rdfs/comment       "DJMixAlbum.",
   :rdfs/label         "DJMixAlbum",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def DVDFormat
  {:db/ident           :schema/DVDFormat,
   :rdf/type           :schema/MusicReleaseFormatType,
   :rdfs/comment       "DVDFormat.",
   :rdfs/label         "DVDFormat",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def DamagedCondition
  {:db/ident     :schema/DamagedCondition,
   :rdf/type     :schema/OfferItemCondition,
   :rdfs/comment "Indicates that the item is damaged.",
   :rdfs/label   "DamagedCondition"})

(def DanceEvent
  {:db/ident        :schema/DanceEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: A social dance.",
   :rdfs/label      "DanceEvent",
   :rdfs/subClassOf :schema/Event})

(def DanceGroup
  {:db/ident :schema/DanceGroup,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A dance group&#x2014;for example, the Alvin Ailey Dance Theater or Riverdance.",
   :rdfs/label "DanceGroup",
   :rdfs/subClassOf :schema/PerformingGroup})

(def DangerousGoodConsideration
  {:db/ident :schema/DangerousGoodConsideration,
   :rdf/type :schema/AdultOrientedEnumeration,
   :rdfs/comment
   "The item is dangerous and requires careful handling and/or special training of the user. See also the [UN Model Classification](https://unece.org/DAM/trans/danger/publi/unrec/rev17/English/02EREv17_Part2.pdf) defining the 9 classes of dangerous goods such as explosives, gases, flammables, and more.",
   :rdfs/label "DangerousGoodConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def DataCatalog
  {:db/ident            :schema/DataCatalog,
   :owl/equivalentClass :dcat/Catalog,
   :rdf/type            :rdfs/Class,
   :rdfs/comment        "A collection of datasets.",
   :rdfs/label          "DataCatalog",
   :rdfs/subClassOf     :schema/CreativeWork,
   :schema/contributor  {:xsd/anyURI
                         "http://schema.org/docs/collab/DatasetClass"}})

(def DataDownload
  {:db/ident            :schema/DataDownload,
   :owl/equivalentClass :dcat/Distribution,
   :rdf/type            :rdfs/Class,
   :rdfs/comment        "All or part of a [[Dataset]] in downloadable form. ",
   :rdfs/label          "DataDownload",
   :rdfs/subClassOf     :schema/MediaObject,
   :schema/contributor  {:xsd/anyURI
                         "http://schema.org/docs/collab/DatasetClass"}})

(def DataFeed
  {:db/ident :schema/DataFeed,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A single feed providing structured information about one or more entities or topics.",
   :rdfs/label "DataFeed",
   :rdfs/subClassOf :schema/Dataset})

(def DataFeedItem
  {:db/ident        :schema/DataFeedItem,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A single item within a larger data feed.",
   :rdfs/label      "DataFeedItem",
   :rdfs/subClassOf :schema/Intangible})

(def DataType
  {:db/ident        :schema/DataType,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The basic data types such as Integers, Strings, etc.",
   :rdfs/label      "DataType",
   :rdfs/subClassOf :rdfs/Class})

(def Dataset
  {:db/ident :schema/Dataset,
   :owl/equivalentClass #{:dcat/Dataset :dcmitype/Dataset :void/Dataset},
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A body of structured information describing some topic(s) of interest.",
   :rdfs/label "Dataset",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/DatasetClass"}})

(def Date
  {:db/ident :schema/Date,
   :rdf/type #{:schema/DataType :rdfs/Class},
   :rdfs/comment
   "A date value in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).",
   :rdfs/label "Date"})

(def DateTime
  {:db/ident :schema/DateTime,
   :rdf/type #{:schema/DataType :rdfs/Class},
   :rdfs/comment
   "A combination of date and time of day in the form [-]CCYY-MM-DDThh:mm:ss[Z|(+|-)hh:mm] (see Chapter 5.4 of ISO 8601).",
   :rdfs/label "DateTime"})

(def DatedMoneySpecification
  {:db/ident :schema/DatedMoneySpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A DatedMoneySpecification represents monetary values with optional start and end dates. For example, this could represent an employee's salary over a specific period of time. __Note:__ This type has been superseded by [[MonetaryAmount]], use of that type is recommended.",
   :rdfs/label "DatedMoneySpecification",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/supersededBy :schema/MonetaryAmount})

(def DayOfWeek
  {:db/ident :schema/DayOfWeek,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The day of the week, e.g. used to specify to which day the opening hours of an OpeningHoursSpecification refer.\n\nOriginally, URLs from [GoodRelations](http://purl.org/goodrelations/v1) were used (for [[Monday]], [[Tuesday]], [[Wednesday]], [[Thursday]], [[Friday]], [[Saturday]], [[Sunday]] plus a special entry for [[PublicHolidays]]); these have now been integrated directly into schema.org.\n      ",
   :rdfs/label "DayOfWeek",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def DaySpa
  {:db/ident        :schema/DaySpa,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A day spa.",
   :rdfs/label      "DaySpa",
   :rdfs/subClassOf :schema/HealthAndBeautyBusiness})

(def DeactivateAction
  {:db/ident :schema/DeactivateAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of stopping or deactivating a device or application (e.g. stopping a timer or turning off a flashlight).",
   :rdfs/label "DeactivateAction",
   :rdfs/subClassOf :schema/ControlAction})

(def DecontextualizedContent
  {:db/ident :schema/DecontextualizedContent,
   :rdf/type :schema/MediaManipulationRatingEnumeration,
   :rdfs/comment
   "Content coded 'missing context' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'missing context': Presenting unaltered video in an inaccurate manner that misrepresents the footage. For example, using incorrect dates or locations, altering the transcript or sharing brief clips from a longer video to mislead viewers. (A video rated 'original' can also be missing context.)\n\nFor an [[ImageObject]] to be 'missing context': Presenting unaltered images in an inaccurate manner to misrepresent the image and mislead the viewer. For example, a common tactic is using an unaltered image but saying it came from a different time or place. (An image rated 'original' can also be missing context.)\n\nFor an [[ImageObject]] with embedded text to be 'missing context': An unaltered image presented in an inaccurate manner to misrepresent the image and mislead the viewer. For example, a common tactic is using an unaltered image but saying it came from a different time or place. (An 'original' image with inaccurate text would generally fall in this category.)\n\nFor an [[AudioObject]] to be 'missing context': Unaltered audio presented in an inaccurate manner that misrepresents it. For example, using incorrect dates or locations, or sharing brief clips from a longer recording to mislead viewers. (Audio rated “original” can also be missing context.)\n",
   :rdfs/label "DecontextualizedContent",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def DefenceEstablishment
  {:db/ident        :schema/DefenceEstablishment,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A defence establishment, such as an army or navy base.",
   :rdfs/label      "DefenceEstablishment",
   :rdfs/subClassOf :schema/GovernmentBuilding})

(def DefinedRegion
  {:db/ident :schema/DefinedRegion,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A DefinedRegion is a geographic area defined by potentially arbitrary (rather than political, administrative or natural geographical) criteria. Properties are provided for defining a region by reference to sets of postal codes.\n\nExamples: a delivery destination when shopping. Region where regional pricing is configured.\n\nRequirement 1:\nCountry: US\nStates: \"NY\", \"CA\"\n\nRequirement 2:\nCountry: US\nPostalCode Set: { [94000-94585], [97000, 97999], [13000, 13599]}\n{ [12345, 12345], [78945, 78945], }\nRegion = state, canton, prefecture, autonomous community...\n",
   :rdfs/label "DefinedRegion",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def DefinedTerm
  {:db/ident :schema/DefinedTerm,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A word, name, acronym, phrase, etc. with a formal definition. Often used in the context of category or subject classification, glossaries or dictionaries, product or creative work types, etc. Use the name property for the term being defined, use termCode if the term has an alpha-numeric code allocated, use description to provide the definition of the term.",
   :rdfs/label "DefinedTerm",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/894"}})

(def DefinedTermSet
  {:db/ident :schema/DefinedTermSet,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A set of defined terms, for example a set of categories or a classification scheme, a glossary, dictionary or enumeration.",
   :rdfs/label "DefinedTermSet",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/894"}})

(def DefinitiveLegalValue
  {:db/ident :schema/DefinitiveLegalValue,
   :rdf/type :schema/LegalValueLevel,
   :rdfs/comment
   "Indicates a document for which the text is conclusively what the law says and is legally binding. (E.g. the digitally signed version of an Official Journal.)\n  Something \"Definitive\" is considered to be also [[AuthoritativeLegalValue]].",
   :rdfs/label "DefinitiveLegalValue",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch
   {:xsd/anyURI "http://data.europa.eu/eli/ontology#LegalValue-definitive"}})

(def DeleteAction
  {:db/ident :schema/DeleteAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of editing a recipient by removing one of its objects.",
   :rdfs/label "DeleteAction",
   :rdfs/subClassOf :schema/UpdateAction})

(def DeliveryChargeSpecification
  {:db/ident :schema/DeliveryChargeSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The price for the delivery of an offer using a particular delivery method.",
   :rdfs/label "DeliveryChargeSpecification",
   :rdfs/subClassOf :schema/PriceSpecification,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def DeliveryEvent
  {:db/ident        :schema/DeliveryEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An event involving the delivery of an item.",
   :rdfs/label      "DeliveryEvent",
   :rdfs/subClassOf :schema/Event})

(def DeliveryMethod
  {:db/ident :schema/DeliveryMethod,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A delivery method is a standardized procedure for transferring the product or service to the destination of fulfillment chosen by the customer. Delivery methods are characterized by the means of transportation used, and by the organization or group that is the contracting party for the sending organization or person.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#DeliveryModeDirectDownload\\n* http://purl.org/goodrelations/v1#DeliveryModeFreight\\n* http://purl.org/goodrelations/v1#DeliveryModeMail\\n* http://purl.org/goodrelations/v1#DeliveryModeOwnFleet\\n* http://purl.org/goodrelations/v1#DeliveryModePickUp\\n* http://purl.org/goodrelations/v1#DHL\\n* http://purl.org/goodrelations/v1#FederalExpress\\n* http://purl.org/goodrelations/v1#UPS\n        ",
   :rdfs/label "DeliveryMethod",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def DeliveryTimeSettings
  {:db/ident :schema/DeliveryTimeSettings,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A DeliveryTimeSettings represents re-usable pieces of shipping information, relating to timing. It is designed for publication on an URL that may be referenced via the [[shippingSettingsLink]] property of an [[OfferShippingDetails]]. Several occurrences can be published, distinguished (and identified/referenced) by their different values for [[transitTimeLabel]].",
   :rdfs/label "DeliveryTimeSettings",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def Demand
  {:db/ident :schema/Demand,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A demand entity represents the public, not necessarily binding, not necessarily exclusive, announcement by an organization or person to seek a certain type of goods or services. For describing demand using this type, the very same properties used for Offer apply.",
   :rdfs/label "Demand",
   :rdfs/subClassOf :schema/Intangible,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def DemoAlbum
  {:db/ident           :schema/DemoAlbum,
   :rdf/type           :schema/MusicAlbumProductionType,
   :rdfs/comment       "DemoAlbum.",
   :rdfs/label         "DemoAlbum",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def DemoGameAvailability
  {:db/ident :schema/DemoGameAvailability,
   :rdf/type :schema/GameAvailabilityEnumeration,
   :rdfs/comment
   "Indicates demo game availability, i.e. a somehow limited demonstration of the full game.",
   :rdfs/label "DemoGameAvailability",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3058"}})

(def Dentist
  {:db/ident        :schema/Dentist,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A dentist.",
   :rdfs/label      "Dentist",
   :rdfs/subClassOf #{:schema/MedicalBusiness :schema/LocalBusiness
                      :schema/MedicalOrganization}})

(def Dentistry
  {:db/ident        :schema/Dentistry,
   :rdf/type        :schema/MedicalSpecialty,
   :rdfs/comment    "A branch of medicine that is involved in the dental care.",
   :rdfs/label      "Dentistry",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DepartAction
  {:db/ident :schema/DepartAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of  departing from a place. An agent departs from a fromLocation for a destination, optionally with participants.",
   :rdfs/label "DepartAction",
   :rdfs/subClassOf :schema/MoveAction})

(def DepartmentStore
  {:db/ident        :schema/DepartmentStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A department store.",
   :rdfs/label      "DepartmentStore",
   :rdfs/subClassOf :schema/Store})

(def DepositAccount
  {:db/ident :schema/DepositAccount,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A type of Bank Account with a main purpose of depositing funds to gain interest or other benefits.",
   :rdfs/label "DepositAccount",
   :rdfs/subClassOf #{:schema/BankAccount :schema/InvestmentOrDeposit},
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}})

(def Dermatologic
  {:db/ident            :schema/Dermatologic,
   :rdf/type            :schema/MedicalSpecialty,
   :rdfs/comment        "Something relating to or practicing dermatology.",
   :rdfs/label          "Dermatologic",
   :schema/isPartOf     {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/supersededBy :schema/Dermatology})

(def Dermatology
  {:db/ident :schema/Dermatology,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to diagnosis and treatment of disorders of skin.",
   :rdfs/label "Dermatology",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DesktopWebPlatform
  {:db/ident :schema/DesktopWebPlatform,
   :rdf/type :schema/DigitalPlatformEnumeration,
   :rdfs/comment
   "Represents the broad notion of 'desktop' browsers as a Web Platform.",
   :rdfs/label "DesktopWebPlatform",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3057"}})

(def DiabeticDiet
  {:db/ident     :schema/DiabeticDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet appropriate for people with diabetes.",
   :rdfs/label   "DiabeticDiet"})

(def Diagnostic
  {:db/ident        :schema/Diagnostic,
   :rdf/type        :schema/MedicalDevicePurpose,
   :rdfs/comment    "A medical device used for diagnostic purposes.",
   :rdfs/label      "Diagnostic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DiagnosticLab
  {:db/ident :schema/DiagnosticLab,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A medical laboratory that offers on-site or off-site diagnostic services.",
   :rdfs/label "DiagnosticLab",
   :rdfs/subClassOf :schema/MedicalOrganization,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DiagnosticProcedure
  {:db/ident :schema/DiagnosticProcedure,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A medical procedure intended primarily for diagnostic, as opposed to therapeutic, purposes.",
   :rdfs/label "DiagnosticProcedure",
   :rdfs/subClassOf :schema/MedicalProcedure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Diet
  {:db/ident :schema/Diet,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A strategy of regulating the intake of food to achieve or maintain a specific health-related goal.",
   :rdfs/label "Diet",
   :rdfs/subClassOf #{:schema/LifestyleModification :schema/CreativeWork},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DietNutrition
  {:db/ident        :schema/DietNutrition,
   :rdf/type        :schema/MedicalSpecialty,
   :rdfs/comment    "Dietetics and nutrition as a medical specialty.",
   :rdfs/label      "DietNutrition",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DietarySupplement
  {:db/ident :schema/DietarySupplement,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A product taken by mouth that contains a dietary ingredient intended to supplement the diet. Dietary ingredients may include vitamins, minerals, herbs or other botanicals, amino acids, and substances such as enzymes, organ tissues, glandulars and metabolites.",
   :rdfs/label "DietarySupplement",
   :rdfs/subClassOf #{:schema/Product :schema/Substance},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DigitalAudioTapeFormat
  {:db/ident           :schema/DigitalAudioTapeFormat,
   :rdf/type           :schema/MusicReleaseFormatType,
   :rdfs/comment       "DigitalAudioTapeFormat.",
   :rdfs/label         "DigitalAudioTapeFormat",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def DigitalDocument
  {:db/ident        :schema/DigitalDocument,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An electronic file or document.",
   :rdfs/label      "DigitalDocument",
   :rdfs/subClassOf :schema/CreativeWork})

(def DigitalDocumentPermission
  {:db/ident :schema/DigitalDocumentPermission,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A permission for a particular person or group to access a particular file.",
   :rdfs/label "DigitalDocumentPermission",
   :rdfs/subClassOf :schema/Intangible})

(def DigitalDocumentPermissionType
  {:db/ident :schema/DigitalDocumentPermissionType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A type of permission which can be granted for accessing a digital document.",
   :rdfs/label "DigitalDocumentPermissionType",
   :rdfs/subClassOf :schema/Enumeration})

(def DigitalFormat
  {:db/ident           :schema/DigitalFormat,
   :rdf/type           :schema/MusicReleaseFormatType,
   :rdfs/comment       "DigitalFormat.",
   :rdfs/label         "DigitalFormat",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def DigitalPlatformEnumeration
  {:db/ident :schema/DigitalPlatformEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates some common technology platforms, for use with properties such as [[actionPlatform]]. It is not supposed to be comprehensive - when a suitable code is not enumerated here, textual or URL values can be used instead. These codes are at a fairly high level and do not deal with versioning and other nuance. Additional codes can be suggested [in github](https://github.com/schemaorg/schemaorg/issues/3057). ",
   :rdfs/label "DigitalPlatformEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3057"}})

(def DisabilitySupport
  {:db/ident :schema/DisabilitySupport,
   :rdf/type :schema/GovernmentBenefitsType,
   :rdfs/comment "DisabilitySupport: this is a benefit for disability support.",
   :rdfs/label "DisabilitySupport",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def DisagreeAction
  {:db/ident :schema/DisagreeAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of expressing a difference of opinion with the object. An agent disagrees to/about an object (a proposition, topic or theme) with participants.",
   :rdfs/label "DisagreeAction",
   :rdfs/subClassOf :schema/ReactAction})

(def Discontinued
  {:db/ident     :schema/Discontinued,
   :rdf/type     :schema/ItemAvailability,
   :rdfs/comment "Indicates that the item has been discontinued.",
   :rdfs/label   "Discontinued"})

(def DiscoverAction
  {:db/ident        :schema/DiscoverAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of discovering/finding an object.",
   :rdfs/label      "DiscoverAction",
   :rdfs/subClassOf :schema/FindAction})

(def DiscussionForumPosting
  {:db/ident        :schema/DiscussionForumPosting,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A posting to a discussion forum.",
   :rdfs/label      "DiscussionForumPosting",
   :rdfs/subClassOf :schema/SocialMediaPosting})

(def DislikeAction
  {:db/ident :schema/DislikeAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of expressing a negative sentiment about the object. An agent dislikes an object (a proposition, topic or theme) with participants.",
   :rdfs/label "DislikeAction",
   :rdfs/subClassOf :schema/ReactAction})

(def Distance
  {:db/ident :schema/Distance,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Properties that take Distances as values are of the form '&lt;Number&gt; &lt;Length unit of measure&gt;'. E.g., '7 ft'.",
   :rdfs/label "Distance",
   :rdfs/subClassOf :schema/Quantity})

(def DistanceFee
  {:db/ident :schema/DistanceFee,
   :rdf/type :schema/PriceComponentTypeEnumeration,
   :rdfs/comment
   "Represents the distance fee (e.g., price per km or mile) part of the total price for an offered product, for example a car rental.",
   :rdfs/label "DistanceFee",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def Distillery
  {:db/ident        :schema/Distillery,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A distillery.",
   :rdfs/label      "Distillery",
   :rdfs/subClassOf :schema/FoodEstablishment,
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/743"}})

(def DonateAction
  {:db/ident :schema/DonateAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of providing goods, services, or money without compensation, often for philanthropic reasons.",
   :rdfs/label "DonateAction",
   :rdfs/subClassOf :schema/TradeAction})

(def DoseSchedule
  {:db/ident        :schema/DoseSchedule,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A specific dosing schedule for a drug or supplement.",
   :rdfs/label      "DoseSchedule",
   :rdfs/subClassOf :schema/MedicalIntangible,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DoubleBlindedTrial
  {:db/ident :schema/DoubleBlindedTrial,
   :rdf/type :schema/MedicalTrialDesign,
   :rdfs/comment
   "A trial design in which neither the researcher nor the patient knows the details of the treatment the patient was randomly assigned to.",
   :rdfs/label "DoubleBlindedTrial",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DownloadAction
  {:db/ident        :schema/DownloadAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of downloading an object.",
   :rdfs/label      "DownloadAction",
   :rdfs/subClassOf :schema/TransferAction})

(def Downpayment
  {:db/ident :schema/Downpayment,
   :rdf/type :schema/PriceComponentTypeEnumeration,
   :rdfs/comment
   "Represents the downpayment (up-front payment) price component of the total price for an offered product that has additional installment payments.",
   :rdfs/label "Downpayment",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def DrawAction
  {:db/ident :schema/DrawAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of producing a visual/graphical representation of an object, typically with a pen/pencil and paper as instruments.",
   :rdfs/label "DrawAction",
   :rdfs/subClassOf :schema/CreateAction})

(def Drawing
  {:db/ident :schema/Drawing,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A picture or diagram made with a pencil, pen, or crayon rather than paint.",
   :rdfs/label "Drawing",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1448"}})

(def DrinkAction
  {:db/ident        :schema/DrinkAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of swallowing liquids.",
   :rdfs/label      "DrinkAction",
   :rdfs/subClassOf :schema/ConsumeAction})

(def DriveWheelConfigurationValue
  {:db/ident :schema/DriveWheelConfigurationValue,
   :rdf/type :rdfs/Class,
   :rdfs/comment "A value indicating which roadwheels will receive torque.",
   :rdfs/label "DriveWheelConfigurationValue",
   :rdfs/subClassOf :schema/QualitativeValue,
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def DrivingSchoolVehicleUsage
  {:db/ident :schema/DrivingSchoolVehicleUsage,
   :rdf/type :schema/CarUsageType,
   :rdfs/comment "Indicates the usage of the vehicle for driving school.",
   :rdfs/label "DrivingSchoolVehicleUsage",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"}})

(def Drug
  {:db/ident :schema/Drug,
   :owl/equivalentClass
   {:xsd/anyURI "http://purl.bioontology.org/ontology/SNOMEDCT/410942007"},
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A chemical or biologic substance, used as a medical therapy, that has a physiological effect on an organism. Here the term drug is used interchangeably with the term medicine although clinical knowledge makes a clear difference between them.",
   :rdfs/label "Drug",
   :rdfs/subClassOf #{:schema/Product :schema/Substance},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DrugClass
  {:db/ident :schema/DrugClass,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A class of medical drugs, e.g., statins. Classes can represent general pharmacological class, common mechanisms of action, common physiological effects, etc.",
   :rdfs/label "DrugClass",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DrugCost
  {:db/ident :schema/DrugCost,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The cost per unit of a medical drug. Note that this type is not meant to represent the price in an offer of a drug for sale; see the Offer type for that. This type will typically be used to tag wholesale or average retail cost of a drug, or maximum reimbursable cost. Costs of medical drugs vary widely depending on how and where they are paid for, so while this type captures some of the variables, costs should be used with caution by consumers of this schema's markup.",
   :rdfs/label "DrugCost",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DrugCostCategory
  {:db/ident        :schema/DrugCostCategory,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Enumerated categories of medical drug costs.",
   :rdfs/label      "DrugCostCategory",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DrugLegalStatus
  {:db/ident        :schema/DrugLegalStatus,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The legal availability status of a medical drug.",
   :rdfs/label      "DrugLegalStatus",
   :rdfs/subClassOf :schema/MedicalIntangible,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DrugPregnancyCategory
  {:db/ident :schema/DrugPregnancyCategory,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Categories that represent an assessment of the risk of fetal injury due to a drug or pharmaceutical used as directed by the mother during pregnancy.",
   :rdfs/label "DrugPregnancyCategory",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DrugPrescriptionStatus
  {:db/ident :schema/DrugPrescriptionStatus,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Indicates whether this drug is available by prescription or over-the-counter.",
   :rdfs/label "DrugPrescriptionStatus",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DrugStrength
  {:db/ident :schema/DrugStrength,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A specific strength in which a medical drug is available in a specific country.",
   :rdfs/label "DrugStrength",
   :rdfs/subClassOf :schema/MedicalIntangible,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def DryCleaningOrLaundry
  {:db/ident        :schema/DryCleaningOrLaundry,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A dry-cleaning business.",
   :rdfs/label      "DryCleaningOrLaundry",
   :rdfs/subClassOf :schema/LocalBusiness})

(def Duration
  {:db/ident :schema/Duration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Quantity: Duration (use [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601)).",
   :rdfs/label "Duration",
   :rdfs/subClassOf :schema/Quantity})

(def EBook
  {:db/ident     :schema/EBook,
   :rdf/type     :schema/BookFormatType,
   :rdfs/comment "Book format: Ebook.",
   :rdfs/label   "EBook"})

(def EPRelease
  {:db/ident           :schema/EPRelease,
   :rdf/type           :schema/MusicAlbumReleaseType,
   :rdfs/comment       "EPRelease.",
   :rdfs/label         "EPRelease",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def EUEnergyEfficiencyCategoryA
  {:db/ident :schema/EUEnergyEfficiencyCategoryA,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class A as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryA",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyCategoryA1Plus
  {:db/ident :schema/EUEnergyEfficiencyCategoryA1Plus,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class A+ as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryA1Plus",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyCategoryA2Plus
  {:db/ident :schema/EUEnergyEfficiencyCategoryA2Plus,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class A++ as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryA2Plus",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyCategoryA3Plus
  {:db/ident :schema/EUEnergyEfficiencyCategoryA3Plus,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class A+++ as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryA3Plus",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyCategoryB
  {:db/ident :schema/EUEnergyEfficiencyCategoryB,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class B as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryB",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyCategoryC
  {:db/ident :schema/EUEnergyEfficiencyCategoryC,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class C as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryC",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyCategoryD
  {:db/ident :schema/EUEnergyEfficiencyCategoryD,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class D as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryD",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyCategoryE
  {:db/ident :schema/EUEnergyEfficiencyCategoryE,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class E as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryE",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyCategoryF
  {:db/ident :schema/EUEnergyEfficiencyCategoryF,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class F as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryF",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyCategoryG
  {:db/ident :schema/EUEnergyEfficiencyCategoryG,
   :rdf/type :schema/EUEnergyEfficiencyEnumeration,
   :rdfs/comment
   "Represents EU Energy Efficiency Class G as defined in EU energy labeling regulations.",
   :rdfs/label "EUEnergyEfficiencyCategoryG",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EUEnergyEfficiencyEnumeration
  {:db/ident :schema/EUEnergyEfficiencyEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates the EU energy efficiency classes A-G as well as A+, A++, and A+++ as defined in EU directive 2017/1369.",
   :rdfs/label "EUEnergyEfficiencyEnumeration",
   :rdfs/subClassOf :schema/EnergyEfficiencyEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def Ear
  {:db/ident        :schema/Ear,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Ear function assessment with clinical examination.",
   :rdfs/label      "Ear",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def EatAction
  {:db/ident        :schema/EatAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of swallowing solid objects.",
   :rdfs/label      "EatAction",
   :rdfs/subClassOf :schema/ConsumeAction})

(def EditedOrCroppedContent
  {:db/ident :schema/EditedOrCroppedContent,
   :rdf/type :schema/MediaManipulationRatingEnumeration,
   :rdfs/comment
   "Content coded 'edited or cropped content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'edited or cropped content': The video has been edited or rearranged. This category applies to time edits, including editing multiple videos together to alter the story being told or editing out large portions from a video.\n\nFor an [[ImageObject]] to be 'edited or cropped content': Presenting a part of an image from a larger whole to mislead the viewer.\n\nFor an [[ImageObject]] with embedded text to be 'edited or cropped content': Presenting a part of an image from a larger whole to mislead the viewer.\n\nFor an [[AudioObject]] to be 'edited or cropped content': The audio has been edited or rearranged. This category applies to time edits, including editing multiple audio clips together to alter the story being told or editing out large portions from the recording.\n",
   :rdfs/label "EditedOrCroppedContent",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def EducationEvent
  {:db/ident        :schema/EducationEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Education event.",
   :rdfs/label      "EducationEvent",
   :rdfs/subClassOf :schema/Event})

(def EducationalAudience
  {:db/ident           :schema/EducationalAudience,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "An EducationalAudience.",
   :rdfs/label         "EducationalAudience",
   :rdfs/subClassOf    :schema/Audience,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/LRMIClass"}})

(def EducationalOccupationalCredential
  {:db/ident :schema/EducationalOccupationalCredential,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An educational or occupational credential. A diploma, academic degree, certification, qualification, badge, etc., that may be awarded to a person or other entity that meets the requirements defined by the credentialer.",
   :rdfs/label "EducationalOccupationalCredential",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1779"}})

(def EducationalOccupationalProgram
  {:db/ident :schema/EducationalOccupationalProgram,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A program offered by an institution which determines the learning progress to achieve an outcome, usually a credential like a degree or certificate. This would define a discrete set of opportunities (e.g., job, courses) that together constitute a program with a clear start, end, set of requirements, and transition to a new occupational opportunity (e.g., a job), or sometimes a higher educational opportunity (e.g., an advanced degree).",
   :rdfs/label "EducationalOccupationalProgram",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2289"}})

(def EducationalOrganization
  {:db/ident        :schema/EducationalOrganization,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An educational organization.",
   :rdfs/label      "EducationalOrganization",
   :rdfs/subClassOf #{:schema/CivicStructure :schema/Organization}})

(def EffectivenessHealthAspect
  {:db/ident :schema/EffectivenessHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Content about the effectiveness-related aspects of a health topic.",
   :rdfs/label "EffectivenessHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2799"}})

(def Electrician
  {:db/ident        :schema/Electrician,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An electrician.",
   :rdfs/label      "Electrician",
   :rdfs/subClassOf :schema/HomeAndConstructionBusiness})

(def ElectronicsStore
  {:db/ident        :schema/ElectronicsStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An electronics store.",
   :rdfs/label      "ElectronicsStore",
   :rdfs/subClassOf :schema/Store})

(def ElementarySchool
  {:db/ident        :schema/ElementarySchool,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An elementary school.",
   :rdfs/label      "ElementarySchool",
   :rdfs/subClassOf :schema/EducationalOrganization})

(def EmailMessage
  {:db/ident        :schema/EmailMessage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An email message.",
   :rdfs/label      "EmailMessage",
   :rdfs/subClassOf :schema/Message})

(def Embassy
  {:db/ident        :schema/Embassy,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An embassy.",
   :rdfs/label      "Embassy",
   :rdfs/subClassOf :schema/GovernmentBuilding})

(def Emergency
  {:db/ident :schema/Emergency,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that deals with the evaluation and initial treatment of medical conditions caused by trauma or sudden illness.",
   :rdfs/label "Emergency",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def EmergencyService
  {:db/ident        :schema/EmergencyService,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An emergency service, such as a fire station or ER.",
   :rdfs/label      "EmergencyService",
   :rdfs/subClassOf :schema/LocalBusiness})

(def EmployeeRole
  {:db/ident :schema/EmployeeRole,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A subclass of OrganizationRole used to describe employee relationships.",
   :rdfs/label "EmployeeRole",
   :rdfs/subClassOf :schema/OrganizationRole})

(def EmployerAggregateRating
  {:db/ident :schema/EmployerAggregateRating,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An aggregate rating of an Organization related to its role as an employer.",
   :rdfs/label "EmployerAggregateRating",
   :rdfs/subClassOf :schema/AggregateRating,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1689"}})

(def EmployerReview
  {:db/ident :schema/EmployerReview,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An [[EmployerReview]] is a review of an [[Organization]] regarding its role as an employer, written by a current or former employee of that organization.",
   :rdfs/label "EmployerReview",
   :rdfs/subClassOf :schema/Review,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1589"}})

(def EmploymentAgency
  {:db/ident        :schema/EmploymentAgency,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An employment agency.",
   :rdfs/label      "EmploymentAgency",
   :rdfs/subClassOf :schema/LocalBusiness})

(def Endocrine
  {:db/ident :schema/Endocrine,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to diagnosis and treatment of disorders of endocrine glands and their secretions.",
   :rdfs/label "Endocrine",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def EndorseAction
  {:db/ident :schema/EndorseAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An agent approves/certifies/likes/supports/sanctions an object.",
   :rdfs/label "EndorseAction",
   :rdfs/subClassOf :schema/ReactAction})

(def EndorsementRating
  {:db/ident :schema/EndorsementRating,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An EndorsementRating is a rating that expresses some level of endorsement, for example inclusion in a \"critic's pick\" blog, a\n\"Like\" or \"+1\" on a social network. It can be considered the [[result]] of an [[EndorseAction]] in which the [[object]] of the action is rated positively by\nsome [[agent]]. As is common elsewhere in schema.org, it is sometimes more useful to describe the results of such an action without explicitly describing the [[Action]].\n\nAn [[EndorsementRating]] may be part of a numeric scale or organized system, but this is not required: having an explicit type for indicating a positive,\nendorsement rating is particularly useful in the absence of numeric scales as it helps consumers understand that the rating is broadly positive.\n",
   :rdfs/label "EndorsementRating",
   :rdfs/subClassOf :schema/Rating,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1293"}})

(def Energy
  {:db/ident :schema/Energy,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Properties that take Energy as values are of the form '&lt;Number&gt; &lt;Energy unit of measure&gt;'.",
   :rdfs/label "Energy",
   :rdfs/subClassOf :schema/Quantity})

(def EnergyConsumptionDetails
  {:db/ident :schema/EnergyConsumptionDetails,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "EnergyConsumptionDetails represents information related to the energy efficiency of a product that consumes energy. The information that can be provided is based on international regulations such as for example [EU directive 2017/1369](https://eur-lex.europa.eu/eli/reg/2017/1369/oj) for energy labeling and the [Energy labeling rule](https://www.ftc.gov/enforcement/rules/rulemaking-regulatory-reform-proceedings/energy-water-use-labeling-consumer) under the Energy Policy and Conservation Act (EPCA) in the US.",
   :rdfs/label "EnergyConsumptionDetails",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EnergyEfficiencyEnumeration
  {:db/ident :schema/EnergyEfficiencyEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates energy efficiency levels (also known as \"classes\" or \"ratings\") and certifications that are part of several international energy efficiency standards.",
   :rdfs/label "EnergyEfficiencyEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EnergyStarCertified
  {:db/ident        :schema/EnergyStarCertified,
   :rdf/type        :schema/EnergyStarEnergyEfficiencyEnumeration,
   :rdfs/comment    "Represents EnergyStar certification.",
   :rdfs/label      "EnergyStarCertified",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EnergyStarEnergyEfficiencyEnumeration
  {:db/ident :schema/EnergyStarEnergyEfficiencyEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment "Used to indicate whether a product is EnergyStar certified.",
   :rdfs/label "EnergyStarEnergyEfficiencyEnumeration",
   :rdfs/subClassOf :schema/EnergyEfficiencyEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def EngineSpecification
  {:db/ident :schema/EngineSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Information about the engine of the vehicle. A vehicle can have multiple engines represented by multiple engine specification entities.",
   :rdfs/label "EngineSpecification",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def EnrollingByInvitation
  {:db/ident        :schema/EnrollingByInvitation,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Enrolling participants by invitation only.",
   :rdfs/label      "EnrollingByInvitation",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def EntertainmentBusiness
  {:db/ident        :schema/EntertainmentBusiness,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A business providing entertainment.",
   :rdfs/label      "EntertainmentBusiness",
   :rdfs/subClassOf :schema/LocalBusiness})

(def EntryPoint
  {:db/ident           :schema/EntryPoint,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "An entry point, within some Web-based protocol.",
   :rdfs/label         "EntryPoint",
   :rdfs/subClassOf    :schema/Intangible,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/ActionCollabClass"}})

(def Enumeration
  {:db/ident :schema/Enumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Lists or enumerations—for example, a list of cuisines or music genres, etc.",
   :rdfs/label "Enumeration",
   :rdfs/subClassOf :schema/Intangible})

(def Episode
  {:db/ident :schema/Episode,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A media episode (e.g. TV, radio, video game) which can be part of a series or season.",
   :rdfs/label "Episode",
   :rdfs/subClassOf :schema/CreativeWork})

(def Event
  {:db/ident :schema/Event,
   :owl/equivalentClass :dcmitype/Event,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An event happening at a certain time and location, such as a concert, lecture, or festival. Ticketing information may be added via the [[offers]] property. Repeated events may be structured as separate Event objects.",
   :rdfs/label "Event",
   :rdfs/subClassOf :schema/Thing})

(def EventAttendanceModeEnumeration
  {:db/ident :schema/EventAttendanceModeEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An EventAttendanceModeEnumeration value is one of potentially several modes of organising an event, relating to whether it is online or offline.",
   :rdfs/label "EventAttendanceModeEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1842"}})

(def EventCancelled
  {:db/ident :schema/EventCancelled,
   :rdf/type :schema/EventStatusType,
   :rdfs/comment
   "The event has been cancelled. If the event has multiple startDate values, all are assumed to be cancelled. Either startDate or previousStartDate may be used to specify the event's cancelled date(s).",
   :rdfs/label "EventCancelled"})

(def EventMovedOnline
  {:db/ident :schema/EventMovedOnline,
   :rdf/type :schema/EventStatusType,
   :rdfs/comment
   "Indicates that the event was changed to allow online participation. See [[eventAttendanceMode]] for specifics of whether it is now fully or partially online.",
   :rdfs/label "EventMovedOnline"})

(def EventPostponed
  {:db/ident :schema/EventPostponed,
   :rdf/type :schema/EventStatusType,
   :rdfs/comment
   "The event has been postponed and no new date has been set. The event's previousStartDate should be set.",
   :rdfs/label "EventPostponed"})

(def EventRescheduled
  {:db/ident :schema/EventRescheduled,
   :rdf/type :schema/EventStatusType,
   :rdfs/comment
   "The event has been rescheduled. The event's previousStartDate should be set to the old date and the startDate should be set to the event's new date. (If the event has been rescheduled multiple times, the previousStartDate property may be repeated.)",
   :rdfs/label "EventRescheduled"})

(def EventReservation
  {:db/ident :schema/EventReservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservation for an event like a concert, sporting event, or lecture.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].",
   :rdfs/label "EventReservation",
   :rdfs/subClassOf :schema/Reservation})

(def EventScheduled
  {:db/ident :schema/EventScheduled,
   :rdf/type :schema/EventStatusType,
   :rdfs/comment
   "The event is taking place or has taken place on the startDate as scheduled. Use of this value is optional, as it is assumed by default.",
   :rdfs/label "EventScheduled"})

(def EventSeries
  {:db/ident :schema/EventSeries,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A series of [[Event]]s. Included events can relate with the series using the [[superEvent]] property.\n\nAn EventSeries is a collection of events that share some unifying characteristic. For example, \"The Olympic Games\" is a series, which\nis repeated regularly. The \"2012 London Olympics\" can be presented both as an [[Event]] in the series \"Olympic Games\", and as an\n[[EventSeries]] that included a number of sporting competitions as Events.\n\nThe nature of the association between the events in an [[EventSeries]] can vary, but typical examples could\ninclude a thematic event series (e.g. topical meetups or classes), or a series of regular events that share a location, attendee group and/or organizers.\n\nEventSeries has been defined as a kind of Event to make it easy for publishers to use it in an Event context without\nworrying about which kinds of series are really event-like enough to call an Event. In general an EventSeries\nmay seem more Event-like when the period of time is compact and when aspects such as location are fixed, but\nit may also sometimes prove useful to describe a longer-term series as an Event.\n   ",
   :rdfs/label "EventSeries",
   :rdfs/subClassOf #{:schema/Series :schema/Event},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/447"}})

(def EventStatusType
  {:db/ident :schema/EventStatusType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "EventStatusType is an enumeration type whose instances represent several states that an Event may be in.",
   :rdfs/label "EventStatusType",
   :rdfs/subClassOf :schema/StatusEnumeration})

(def EventVenue
  {:db/ident        :schema/EventVenue,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An event venue.",
   :rdfs/label      "EventVenue",
   :rdfs/subClassOf :schema/CivicStructure})

(def EvidenceLevelA
  {:db/ident :schema/EvidenceLevelA,
   :rdf/type :schema/MedicalEvidenceLevel,
   :rdfs/comment
   "Data derived from multiple randomized clinical trials or meta-analyses.",
   :rdfs/label "EvidenceLevelA",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def EvidenceLevelB
  {:db/ident :schema/EvidenceLevelB,
   :rdf/type :schema/MedicalEvidenceLevel,
   :rdfs/comment
   "Data derived from a single randomized trial, or nonrandomized studies.",
   :rdfs/label "EvidenceLevelB",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def EvidenceLevelC
  {:db/ident :schema/EvidenceLevelC,
   :rdf/type :schema/MedicalEvidenceLevel,
   :rdfs/comment
   "Only consensus opinion of experts, case studies, or standard-of-care.",
   :rdfs/label "EvidenceLevelC",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ExampleMeasurementMethodEnum
  {:db/ident :schema/ExampleMeasurementMethodEnum,
   :rdf/type :schema/MeasurementMethodEnum,
   :rdfs/comment
   "An example [[MeasurementMethodEnum]] (to remove when real enums are added).",
   :rdfs/label "ExampleMeasurementMethodEnum",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2564"}})

(def ExchangeRateSpecification
  {:db/ident           :schema/ExchangeRateSpecification,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "A structured value representing exchange rate.",
   :rdfs/label         "ExchangeRateSpecification",
   :rdfs/subClassOf    :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/isPartOf    {:xsd/anyURI "http://pending.schema.org"},
   :schema/source      {:xsd/anyURI
                        "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def ExchangeRefund
  {:db/ident :schema/ExchangeRefund,
   :rdf/type :schema/RefundTypeEnumeration,
   :rdfs/comment
   "Specifies that a refund can be done as an exchange for the same product.",
   :rdfs/label "ExchangeRefund",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def ExerciseAction
  {:db/ident :schema/ExerciseAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of participating in exertive activity for the purposes of improving health and fitness.",
   :rdfs/label "ExerciseAction",
   :rdfs/subClassOf :schema/PlayAction})

(def ExerciseGym
  {:db/ident        :schema/ExerciseGym,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A gym.",
   :rdfs/label      "ExerciseGym",
   :rdfs/subClassOf :schema/SportsActivityLocation})

(def ExercisePlan
  {:db/ident :schema/ExercisePlan,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Fitness-related activity designed for a specific health-related purpose, including defined exercise routines as well as activity prescribed by a clinician.",
   :rdfs/label "ExercisePlan",
   :rdfs/subClassOf #{:schema/CreativeWork :schema/PhysicalActivity},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ExhibitionEvent
  {:db/ident :schema/ExhibitionEvent,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Event type: Exhibition event, e.g. at a museum, library, archive, tradeshow, ...",
   :rdfs/label "ExhibitionEvent",
   :rdfs/subClassOf :schema/Event})

(def Eye
  {:db/ident :schema/Eye,
   :rdf/type :schema/PhysicalExam,
   :rdfs/comment
   "Eye or ophthalmological function assessment with clinical examination.",
   :rdfs/label "Eye",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def FAQPage
  {:db/ident :schema/FAQPage,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[FAQPage]] is a [[WebPage]] presenting one or more \"[Frequently asked questions](https://en.wikipedia.org/wiki/FAQ)\" (see also [[QAPage]]).",
   :rdfs/label "FAQPage",
   :rdfs/subClassOf :schema/WebPage,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1723"}})

(def FDAcategoryA
  {:db/ident :schema/FDAcategoryA,
   :rdf/type :schema/DrugPregnancyCategory,
   :rdfs/comment
   "A designation by the US FDA signifying that adequate and well-controlled studies have failed to demonstrate a risk to the fetus in the first trimester of pregnancy (and there is no evidence of risk in later trimesters).",
   :rdfs/label "FDAcategoryA",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def FDAcategoryB
  {:db/ident :schema/FDAcategoryB,
   :rdf/type :schema/DrugPregnancyCategory,
   :rdfs/comment
   "A designation by the US FDA signifying that animal reproduction studies have failed to demonstrate a risk to the fetus and there are no adequate and well-controlled studies in pregnant women.",
   :rdfs/label "FDAcategoryB",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def FDAcategoryC
  {:db/ident :schema/FDAcategoryC,
   :rdf/type :schema/DrugPregnancyCategory,
   :rdfs/comment
   "A designation by the US FDA signifying that animal reproduction studies have shown an adverse effect on the fetus and there are no adequate and well-controlled studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.",
   :rdfs/label "FDAcategoryC",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def FDAcategoryD
  {:db/ident :schema/FDAcategoryD,
   :rdf/type :schema/DrugPregnancyCategory,
   :rdfs/comment
   "A designation by the US FDA signifying that there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience or studies in humans, but potential benefits may warrant use of the drug in pregnant women despite potential risks.",
   :rdfs/label "FDAcategoryD",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def FDAcategoryX
  {:db/ident :schema/FDAcategoryX,
   :rdf/type :schema/DrugPregnancyCategory,
   :rdfs/comment
   "A designation by the US FDA signifying that studies in animals or humans have demonstrated fetal abnormalities and/or there is positive evidence of human fetal risk based on adverse reaction data from investigational or marketing experience, and the risks involved in use of the drug in pregnant women clearly outweigh potential benefits.",
   :rdfs/label "FDAcategoryX",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def FDAnotEvaluated
  {:db/ident :schema/FDAnotEvaluated,
   :rdf/type :schema/DrugPregnancyCategory,
   :rdfs/comment
   "A designation that the drug in question has not been assigned a pregnancy category designation by the US FDA.",
   :rdfs/label "FDAnotEvaluated",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def FMRadioChannel
  {:db/ident        :schema/FMRadioChannel,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A radio channel that uses FM.",
   :rdfs/label      "FMRadioChannel",
   :rdfs/subClassOf :schema/RadioChannel,
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1004"}})

(def FailedActionStatus
  {:db/ident :schema/FailedActionStatus,
   :rdf/type :schema/ActionStatusType,
   :rdfs/comment
   "An action that failed to complete. The action's error property and the HTTP return code contain more information about the failure.",
   :rdfs/label "FailedActionStatus"})

(def False
  {:db/ident     :schema/False,
   :rdf/type     :schema/Boolean,
   :rdfs/comment "The boolean value false.",
   :rdfs/label   "False"})

(def FastFoodRestaurant
  {:db/ident        :schema/FastFoodRestaurant,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A fast-food restaurant.",
   :rdfs/label      "FastFoodRestaurant",
   :rdfs/subClassOf :schema/FoodEstablishment})

(def Female
  {:db/ident     :schema/Female,
   :rdf/type     :schema/GenderType,
   :rdfs/comment "The female gender.",
   :rdfs/label   "Female"})

(def Festival
  {:db/ident        :schema/Festival,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Festival.",
   :rdfs/label      "Festival",
   :rdfs/subClassOf :schema/Event})

(def FilmAction
  {:db/ident :schema/FilmAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of capturing sound and moving images on film, video, or digitally.",
   :rdfs/label "FilmAction",
   :rdfs/subClassOf :schema/CreateAction})

(def FinancialProduct
  {:db/ident :schema/FinancialProduct,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A product provided to consumers and businesses by financial institutions such as banks, insurance companies, brokerage firms, consumer finance companies, and investment companies which comprise the financial services industry.",
   :rdfs/label "FinancialProduct",
   :rdfs/subClassOf :schema/Service,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}})

(def FinancialService
  {:db/ident        :schema/FinancialService,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Financial services business.",
   :rdfs/label      "FinancialService",
   :rdfs/subClassOf :schema/LocalBusiness})

(def FindAction
  {:db/ident :schema/FindAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of finding an object.\\n\\nRelated actions:\\n\\n* [[SearchAction]]: FindAction is generally lead by a SearchAction, but not necessarily.",
   :rdfs/label "FindAction",
   :rdfs/subClassOf :schema/Action})

(def FireStation
  {:db/ident        :schema/FireStation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A fire station. With firemen.",
   :rdfs/label      "FireStation",
   :rdfs/subClassOf #{:schema/EmergencyService :schema/CivicStructure}})

(def Flexibility
  {:db/ident :schema/Flexibility,
   :rdf/type :schema/PhysicalActivityCategory,
   :rdfs/comment
   "Physical activity that is engaged in to improve joint and muscle flexibility.",
   :rdfs/label "Flexibility",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Flight
  {:db/ident        :schema/Flight,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An airline flight.",
   :rdfs/label      "Flight",
   :rdfs/subClassOf :schema/Trip})

(def FlightReservation
  {:db/ident :schema/FlightReservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservation for air travel.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].",
   :rdfs/label "FlightReservation",
   :rdfs/subClassOf :schema/Reservation})

(def FloatClass
  {:db/ident        :schema/Float,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Data type: Floating number.",
   :rdfs/label      "Float",
   :rdfs/subClassOf :schema/Number})

(def FloorPlan
  {:db/ident :schema/FloorPlan,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A FloorPlan is an explicit representation of a collection of similar accommodations, allowing the provision of common information (room counts, sizes, layout diagrams) and offers for rental or sale. In typical use, some [[ApartmentComplex]] has an [[accommodationFloorPlan]] which is a [[FloorPlan]].  A FloorPlan is always in the context of a particular place, either a larger [[ApartmentComplex]] or a single [[Apartment]]. The visual/spatial aspects of a floor plan (i.e. room layout, [see wikipedia](https://en.wikipedia.org/wiki/Floor_plan)) can be indicated using [[image]]. ",
   :rdfs/label "FloorPlan",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def Florist
  {:db/ident        :schema/Florist,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A florist.",
   :rdfs/label      "Florist",
   :rdfs/subClassOf :schema/Store})

(def FollowAction
  {:db/ident :schema/FollowAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates polled from.\\n\\nRelated actions:\\n\\n* [[BefriendAction]]: Unlike BefriendAction, FollowAction implies that the connection is *not* necessarily reciprocal.\\n* [[SubscribeAction]]: Unlike SubscribeAction, FollowAction implies that the follower acts as an active agent constantly/actively polling for updates.\\n* [[RegisterAction]]: Unlike RegisterAction, FollowAction implies that the agent is interested in continuing receiving updates from the object.\\n* [[JoinAction]]: Unlike JoinAction, FollowAction implies that the agent is interested in getting updates from the object.\\n* [[TrackAction]]: Unlike TrackAction, FollowAction refers to the polling of updates of all aspects of animate objects rather than the location of inanimate objects (e.g. you track a package, but you don't follow it).",
   :rdfs/label "FollowAction",
   :rdfs/subClassOf :schema/InteractAction})

(def FoodEstablishment
  {:db/ident        :schema/FoodEstablishment,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A food-related business.",
   :rdfs/label      "FoodEstablishment",
   :rdfs/subClassOf :schema/LocalBusiness})

(def FoodEstablishmentReservation
  {:db/ident :schema/FoodEstablishmentReservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservation to dine at a food-related business.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.",
   :rdfs/label "FoodEstablishmentReservation",
   :rdfs/subClassOf :schema/Reservation})

(def FoodEvent
  {:db/ident        :schema/FoodEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Food event.",
   :rdfs/label      "FoodEvent",
   :rdfs/subClassOf :schema/Event})

(def FoodService
  {:db/ident :schema/FoodService,
   :rdf/type :rdfs/Class,
   :rdfs/comment "A food service, like breakfast, lunch, or dinner.",
   :rdfs/label "FoodService",
   :rdfs/subClassOf :schema/Service,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def FourWheelDriveConfiguration
  {:db/ident :schema/FourWheelDriveConfiguration,
   :rdf/type :schema/DriveWheelConfigurationValue,
   :rdfs/comment
   "Four-wheel drive is a transmission layout where the engine primarily drives two wheels with a part-time four-wheel drive capability.",
   :rdfs/label "FourWheelDriveConfiguration",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def FreeReturn
  {:db/ident :schema/FreeReturn,
   :rdf/type :schema/ReturnFeesEnumeration,
   :rdfs/comment
   "Specifies that product returns are free of charge for the customer.",
   :rdfs/label "FreeReturn",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def Friday
  {:db/ident      :schema/Friday,
   :rdf/type      :schema/DayOfWeek,
   :rdfs/comment  "The day of the week between Thursday and Saturday.",
   :rdfs/label    "Friday",
   :schema/sameAs {:xsd/anyURI "http://www.wikidata.org/entity/Q130"}})

(def FrontWheelDriveConfiguration
  {:db/ident :schema/FrontWheelDriveConfiguration,
   :rdf/type :schema/DriveWheelConfigurationValue,
   :rdfs/comment
   "Front-wheel drive is a transmission layout where the engine drives the front wheels.",
   :rdfs/label "FrontWheelDriveConfiguration",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def FullGameAvailability
  {:db/ident        :schema/FullGameAvailability,
   :rdf/type        :schema/GameAvailabilityEnumeration,
   :rdfs/comment    "Indicates full game availability.",
   :rdfs/label      "FullGameAvailability",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/3058"}})

(def FullRefund
  {:db/ident :schema/FullRefund,
   :rdf/type :schema/RefundTypeEnumeration,
   :rdfs/comment
   "Specifies that a refund can be done in the full amount the customer paid for the product.",
   :rdfs/label "FullRefund",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def FundingAgency
  {:db/ident :schema/FundingAgency,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A FundingAgency is an organization that implements one or more [[FundingScheme]]s and manages\n    the granting process (via [[Grant]]s, typically [[MonetaryGrant]]s).\n    A funding agency is not always required for grant funding, e.g. philanthropic giving, corporate sponsorship etc.\n    \nExamples of funding agencies include ERC, REA, NIH, Bill and Melinda Gates Foundation, ...\n    ",
   :rdfs/label "FundingAgency",
   :rdfs/subClassOf :schema/Project,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/383"}
     {:xsd/anyURI "http://schema.org/docs/collab/FundInfoCollab"}}})

(def FundingScheme
  {:db/ident :schema/FundingScheme,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A FundingScheme combines organizational, project and policy aspects of grant-based funding\n    that sets guidelines, principles and mechanisms to support other kinds of projects and activities.\n    Funding is typically organized via [[Grant]] funding. Examples of funding schemes: Swiss Priority Programmes (SPPs); EU Framework 7 (FP7); Horizon 2020; the NIH-R01 Grant Program; Wellcome institutional strategic support fund. For large scale public sector funding, the management and administration of grant awards is often handled by other, dedicated, organizations - [[FundingAgency]]s such as ERC, REA, ...",
   :rdfs/label "FundingScheme",
   :rdfs/subClassOf :schema/Organization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/383"}
     {:xsd/anyURI "http://schema.org/docs/collab/FundInfoCollab"}}})

(def Fungus
  {:db/ident        :schema/Fungus,
   :rdf/type        :schema/InfectiousAgentClass,
   :rdfs/comment    "Pathogenic fungus.",
   :rdfs/label      "Fungus",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def FurnitureStore
  {:db/ident        :schema/FurnitureStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A furniture store.",
   :rdfs/label      "FurnitureStore",
   :rdfs/subClassOf :schema/Store})

(def Game
  {:db/ident :schema/Game,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The Game type represents things which are games. These are typically rule-governed recreational activities, e.g. role-playing games in which players assume the role of characters in a fictional setting.",
   :rdfs/label "Game",
   :rdfs/subClassOf :schema/CreativeWork})

(def GameAvailabilityEnumeration
  {:db/ident :schema/GameAvailabilityEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "For a [[VideoGame]], such as used with a [[PlayGameAction]], an enumeration of the kind of game availability offered. ",
   :rdfs/label "GameAvailabilityEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3058"}})

(def GamePlayMode
  {:db/ident :schema/GamePlayMode,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Indicates whether this game is multi-player, co-op or single-player.",
   :rdfs/label "GamePlayMode",
   :rdfs/subClassOf :schema/Enumeration})

(def GameServer
  {:db/ident :schema/GameServer,
   :rdf/type :rdfs/Class,
   :rdfs/comment "Server that provides game interaction in a multiplayer game.",
   :rdfs/label "GameServer",
   :rdfs/subClassOf :schema/Intangible})

(def GameServerStatus
  {:db/ident        :schema/GameServerStatus,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Status of a game server.",
   :rdfs/label      "GameServerStatus",
   :rdfs/subClassOf :schema/StatusEnumeration})

(def GardenStore
  {:db/ident        :schema/GardenStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A garden store.",
   :rdfs/label      "GardenStore",
   :rdfs/subClassOf :schema/Store})

(def GasStation
  {:db/ident        :schema/GasStation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A gas station.",
   :rdfs/label      "GasStation",
   :rdfs/subClassOf :schema/AutomotiveBusiness})

(def Gastroenterologic
  {:db/ident :schema/Gastroenterologic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to diagnosis and treatment of disorders of digestive system.",
   :rdfs/label "Gastroenterologic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def GatedResidenceCommunity
  {:db/ident        :schema/GatedResidenceCommunity,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Residence type: Gated community.",
   :rdfs/label      "GatedResidenceCommunity",
   :rdfs/subClassOf :schema/Residence})

(def GenderType
  {:db/ident        :schema/GenderType,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An enumeration of genders.",
   :rdfs/label      "GenderType",
   :rdfs/subClassOf :schema/Enumeration})

(def Gene
  {:db/ident :schema/Gene,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A discrete unit of inheritance which affects one or more biological traits (Source: [https://en.wikipedia.org/wiki/Gene](https://en.wikipedia.org/wiki/Gene)). Examples include FOXP2 (Forkhead box protein P2), SCARNA21 (small Cajal body-specific RNA 21), A- (agouti genotype).",
   :rdfs/label "Gene",
   :rdfs/subClassOf :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI "http://bioschemas.org"}})

(def GeneralContractor
  {:db/ident        :schema/GeneralContractor,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A general contractor.",
   :rdfs/label      "GeneralContractor",
   :rdfs/subClassOf :schema/HomeAndConstructionBusiness})

(def GenericWebPlatform
  {:db/ident :schema/GenericWebPlatform,
   :rdf/type :schema/DigitalPlatformEnumeration,
   :rdfs/comment
   "Represents the generic notion of the Web Platform. More specific codes include [[MobileWebPlatform]] and [[DesktopWebPlatform]], as an incomplete list. ",
   :rdfs/label "GenericWebPlatform",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3057"}})

(def Genetic
  {:db/ident :schema/Genetic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to hereditary transmission and the variation of inherited characteristics and disorders.",
   :rdfs/label "Genetic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Genitourinary
  {:db/ident :schema/Genitourinary,
   :rdf/type :schema/PhysicalExam,
   :rdfs/comment
   "Genitourinary system function assessment with clinical examination.",
   :rdfs/label "Genitourinary",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def GeoCircle
  {:db/ident :schema/GeoCircle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A GeoCircle is a GeoShape representing a circular geographic area. As it is a GeoShape\n          it provides the simple textual property 'circle', but also allows the combination of postalCode alongside geoRadius.\n          The center of the circle can be indicated via the 'geoMidpoint' property, or more approximately using 'address', 'postalCode'.\n       ",
   :rdfs/label "GeoCircle",
   :rdfs/subClassOf :schema/GeoShape})

(def GeoCoordinates
  {:db/ident        :schema/GeoCoordinates,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The geographic coordinates of a place or event.",
   :rdfs/label      "GeoCoordinates",
   :rdfs/subClassOf :schema/StructuredValue})

(def GeoShape
  {:db/ident :schema/GeoShape,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The geographic shape of a place. A GeoShape can be described using several properties whose values are based on latitude/longitude pairs. Either whitespace or commas can be used to separate latitude and longitude; whitespace should be used when writing a list of several such points.",
   :rdfs/label "GeoShape",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/rNews"}})

(def GeospatialGeometry
  {:db/ident :schema/GeospatialGeometry,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "(Eventually to be defined as) a supertype of GeoShape designed to accommodate definitions from Geo-Spatial best practices.",
   :rdfs/label "GeospatialGeometry",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1375"}})

(def Geriatric
  {:db/ident :schema/Geriatric,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that is concerned with the diagnosis and treatment of diseases, debilities and provision of care to the aged.",
   :rdfs/label "Geriatric",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def GettingAccessHealthAspect
  {:db/ident :schema/GettingAccessHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Content that discusses practical and policy aspects for getting access to specific kinds of healthcare (e.g. distribution mechanisms for vaccines).",
   :rdfs/label "GettingAccessHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2799"}})

(def GiveAction
  {:db/ident :schema/GiveAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of transferring ownership of an object to a destination. Reciprocal of TakeAction.\\n\\nRelated actions:\\n\\n* [[TakeAction]]: Reciprocal of GiveAction.\\n* [[SendAction]]: Unlike SendAction, GiveAction implies that ownership is being transferred (e.g. I may send my laptop to you, but that doesn't mean I'm giving it to you).",
   :rdfs/label "GiveAction",
   :rdfs/subClassOf :schema/TransferAction})

(def GlutenFreeDiet
  {:db/ident     :schema/GlutenFreeDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet exclusive of gluten.",
   :rdfs/label   "GlutenFreeDiet"})

(def GolfCourse
  {:db/ident        :schema/GolfCourse,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A golf course.",
   :rdfs/label      "GolfCourse",
   :rdfs/subClassOf :schema/SportsActivityLocation})

(def GovernmentBenefitsType
  {:db/ident :schema/GovernmentBenefitsType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "GovernmentBenefitsType enumerates several kinds of government benefits to support the COVID-19 situation. Note that this structure may not capture all benefits offered.",
   :rdfs/label "GovernmentBenefitsType",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def GovernmentBuilding
  {:db/ident        :schema/GovernmentBuilding,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A government building.",
   :rdfs/label      "GovernmentBuilding",
   :rdfs/subClassOf :schema/CivicStructure})

(def GovernmentOffice
  {:db/ident :schema/GovernmentOffice,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A government office&#x2014;for example, an IRS or DMV office.",
   :rdfs/label "GovernmentOffice",
   :rdfs/subClassOf :schema/LocalBusiness})

(def GovernmentOrganization
  {:db/ident        :schema/GovernmentOrganization,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A governmental organization or agency.",
   :rdfs/label      "GovernmentOrganization",
   :rdfs/subClassOf :schema/Organization})

(def GovernmentPermit
  {:db/ident        :schema/GovernmentPermit,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A permit issued by a government agency.",
   :rdfs/label      "GovernmentPermit",
   :rdfs/subClassOf :schema/Permit})

(def GovernmentService
  {:db/ident :schema/GovernmentService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A service provided by a government organization, e.g. food stamps, veterans benefits, etc.",
   :rdfs/label "GovernmentService",
   :rdfs/subClassOf :schema/Service})

(def Grant
  {:db/ident :schema/Grant,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A grant, typically financial or otherwise quantifiable, of resources. Typically a [[funder]] sponsors some [[MonetaryAmount]] to an [[Organization]] or [[Person]],\n    sometimes not necessarily via a dedicated or long-lived [[Project]], resulting in one or more outputs, or [[fundedItem]]s. For financial sponsorship, indicate the [[funder]] of a [[MonetaryGrant]]. For non-financial support, indicate [[sponsor]] of [[Grant]]s of resources (e.g. office space).\n\nGrants support  activities directed towards some agreed collective goals, often but not always organized as [[Project]]s. Long-lived projects are sometimes sponsored by a variety of grants over time, but it is also common for a project to be associated with a single grant.\n\nThe amount of a [[Grant]] is represented using [[amount]] as a [[MonetaryAmount]].\n    ",
   :rdfs/label "Grant",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/383"}
     {:xsd/anyURI "http://schema.org/docs/collab/FundInfoCollab"}}})

(def GraphicNovel
  {:db/ident :schema/GraphicNovel,
   :rdf/type :schema/BookFormatType,
   :rdfs/comment
   "Book format: GraphicNovel. May represent a bound collection of ComicIssue instances.",
   :rdfs/label "GraphicNovel",
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"}})

(def GroceryStore
  {:db/ident        :schema/GroceryStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A grocery store.",
   :rdfs/label      "GroceryStore",
   :rdfs/subClassOf :schema/Store})

(def GroupBoardingPolicy
  {:db/ident :schema/GroupBoardingPolicy,
   :rdf/type :schema/BoardingPolicyType,
   :rdfs/comment
   "The airline boards by groups based on check-in time, priority, etc.",
   :rdfs/label "GroupBoardingPolicy"})

(def Guide
  {:db/ident :schema/Guide,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "[[Guide]] is a page or article that recommends specific products or services, or aspects of a thing for a user to consider. A [[Guide]] may represent a Buying Guide and detail aspects of products or services for a user to consider. A [[Guide]] may represent a Product Guide and recommend specific products or services. A [[Guide]] may represent a Ranked List and recommend specific products or services with ranking.",
   :rdfs/label "Guide",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2405"}})

(def Gynecologic
  {:db/ident :schema/Gynecologic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to the health care of women, particularly in the diagnosis and treatment of disorders affecting the female reproductive system.",
   :rdfs/label "Gynecologic",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def HVACBusiness
  {:db/ident :schema/HVACBusiness,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A business that provides Heating, Ventilation and Air Conditioning services.",
   :rdfs/label "HVACBusiness",
   :rdfs/subClassOf :schema/HomeAndConstructionBusiness})

(def Hackathon
  {:db/ident :schema/Hackathon,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [hackathon](https://en.wikipedia.org/wiki/Hackathon) event.",
   :rdfs/label "Hackathon",
   :rdfs/subClassOf :schema/Event,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2526"}})

(def HairSalon
  {:db/ident        :schema/HairSalon,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A hair salon.",
   :rdfs/label      "HairSalon",
   :rdfs/subClassOf :schema/HealthAndBeautyBusiness})

(def HalalDiet
  {:db/ident     :schema/HalalDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet conforming to Islamic dietary practices.",
   :rdfs/label   "HalalDiet"})

(def Hardcover
  {:db/ident     :schema/Hardcover,
   :rdf/type     :schema/BookFormatType,
   :rdfs/comment "Book format: Hardcover.",
   :rdfs/label   "Hardcover"})

(def HardwareStore
  {:db/ident        :schema/HardwareStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A hardware store.",
   :rdfs/label      "HardwareStore",
   :rdfs/subClassOf :schema/Store})

(def Head
  {:db/ident        :schema/Head,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Head assessment with clinical examination.",
   :rdfs/label      "Head",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def HealthAndBeautyBusiness
  {:db/ident        :schema/HealthAndBeautyBusiness,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Health and beauty.",
   :rdfs/label      "HealthAndBeautyBusiness",
   :rdfs/subClassOf :schema/LocalBusiness})

(def HealthAspectEnumeration
  {:db/ident :schema/HealthAspectEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "HealthAspectEnumeration enumerates several aspects of health content online, each of which might be described using [[hasHealthAspect]] and [[HealthTopicContent]].",
   :rdfs/label "HealthAspectEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def HealthCare
  {:db/ident        :schema/HealthCare,
   :rdf/type        :schema/GovernmentBenefitsType,
   :rdfs/comment    "HealthCare: this is a benefit for health care.",
   :rdfs/label      "HealthCare",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def HealthClub
  {:db/ident        :schema/HealthClub,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A health club.",
   :rdfs/label      "HealthClub",
   :rdfs/subClassOf #{:schema/HealthAndBeautyBusiness
                      :schema/SportsActivityLocation}})

(def HealthInsurancePlan
  {:db/ident :schema/HealthInsurancePlan,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A US-style health insurance plan, including PPOs, EPOs, and HMOs.",
   :rdfs/label "HealthInsurancePlan",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def HealthPlanCostSharingSpecification
  {:db/ident :schema/HealthPlanCostSharingSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A description of costs to the patient under a given network or formulary.",
   :rdfs/label "HealthPlanCostSharingSpecification",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def HealthPlanFormulary
  {:db/ident :schema/HealthPlanFormulary,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "For a given health insurance plan, the specification for costs and coverage of prescription drugs.",
   :rdfs/label "HealthPlanFormulary",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def HealthPlanNetwork
  {:db/ident        :schema/HealthPlanNetwork,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A US-style health insurance plan network.",
   :rdfs/label      "HealthPlanNetwork",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def HealthTopicContent
  {:db/ident :schema/HealthTopicContent,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "[[HealthTopicContent]] is [[WebContent]] that is about some aspect of a health topic, e.g. a condition, its symptoms or treatments. Such content may be comprised of several parts or sections and use different types of media. Multiple instances of [[WebContent]] (and hence [[HealthTopicContent]]) can be related using [[hasPart]] / [[isPartOf]] where there is some kind of content hierarchy, and their content described with [[about]] and [[mentions]] e.g. building upon the existing [[MedicalCondition]] vocabulary.\n  ",
   :rdfs/label "HealthTopicContent",
   :rdfs/subClassOf :schema/WebContent,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def HealthcareConsideration
  {:db/ident :schema/HealthcareConsideration,
   :rdf/type :schema/AdultOrientedEnumeration,
   :rdfs/comment
   "Item is a pharmaceutical (e.g., a prescription or OTC drug) or a restricted medical device.",
   :rdfs/label "HealthcareConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def HearingImpairedSupported
  {:db/ident     :schema/HearingImpairedSupported,
   :rdf/type     :schema/ContactPointOption,
   :rdfs/comment "Uses devices to support users with hearing impairments.",
   :rdfs/label   "HearingImpairedSupported"})

(def Hematologic
  {:db/ident :schema/Hematologic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to diagnosis and treatment of disorders of blood and blood producing organs.",
   :rdfs/label "Hematologic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def HighSchool
  {:db/ident        :schema/HighSchool,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A high school.",
   :rdfs/label      "HighSchool",
   :rdfs/subClassOf :schema/EducationalOrganization})

(def HinduDiet
  {:db/ident :schema/HinduDiet,
   :rdf/type :schema/RestrictedDiet,
   :rdfs/comment
   "A diet conforming to Hindu dietary practices, in particular, beef-free.",
   :rdfs/label "HinduDiet"})

(def HinduTemple
  {:db/ident        :schema/HinduTemple,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A Hindu temple.",
   :rdfs/label      "HinduTemple",
   :rdfs/subClassOf :schema/PlaceOfWorship})

(def HobbyShop
  {:db/ident :schema/HobbyShop,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A store that sells materials useful or necessary for various hobbies.",
   :rdfs/label "HobbyShop",
   :rdfs/subClassOf :schema/Store})

(def HomeAndConstructionBusiness
  {:db/ident :schema/HomeAndConstructionBusiness,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A construction business.\\n\\nA HomeAndConstructionBusiness is a [[LocalBusiness]] that provides services around homes and buildings.\\n\\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\\(s).",
   :rdfs/label "HomeAndConstructionBusiness",
   :rdfs/subClassOf :schema/LocalBusiness})

(def HomeGoodsStore
  {:db/ident        :schema/HomeGoodsStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A home goods store.",
   :rdfs/label      "HomeGoodsStore",
   :rdfs/subClassOf :schema/Store})

(def Homeopathic
  {:db/ident :schema/Homeopathic,
   :rdf/type :schema/MedicineSystem,
   :rdfs/comment
   "A system of medicine based on the principle that a disease can be cured by a substance that produces similar symptoms in healthy people.",
   :rdfs/label "Homeopathic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Hospital
  {:db/ident        :schema/Hospital,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A hospital.",
   :rdfs/label      "Hospital",
   :rdfs/subClassOf #{:schema/EmergencyService :schema/MedicalOrganization
                      :schema/CivicStructure}})

(def Hostel
  {:db/ident :schema/Hostel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A hostel - cheap accommodation, often in shared dormitories.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n",
   :rdfs/label "Hostel",
   :rdfs/subClassOf :schema/LodgingBusiness})

(def Hotel
  {:db/ident :schema/Hotel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A hotel is an establishment that provides lodging paid on a short-term basis (source: Wikipedia, the free encyclopedia, see http://en.wikipedia.org/wiki/Hotel).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n",
   :rdfs/label "Hotel",
   :rdfs/subClassOf :schema/LodgingBusiness,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def HotelRoom
  {:db/ident :schema/HotelRoom,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A hotel room is a single room in a hotel.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n",
   :rdfs/label "HotelRoom",
   :rdfs/subClassOf :schema/Room,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def House
  {:db/ident :schema/House,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A house is a building or structure that has the ability to be occupied for habitation by humans or other creatures (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/House\">http://en.wikipedia.org/wiki/House</a>).",
   :rdfs/label "House",
   :rdfs/subClassOf :schema/Accommodation,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def HousePainter
  {:db/ident        :schema/HousePainter,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A house painting service.",
   :rdfs/label      "HousePainter",
   :rdfs/subClassOf :schema/HomeAndConstructionBusiness})

(def HowItWorksHealthAspect
  {:db/ident :schema/HowItWorksHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Content that discusses and explains how a particular health-related topic works, e.g. in terms of mechanisms and underlying science.",
   :rdfs/label "HowItWorksHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2799"}})

(def HowOrWhereHealthAspect
  {:db/ident :schema/HowOrWhereHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Information about how or where to find a topic. Also may contain location data that can be used for where to look for help if the topic is observed.",
   :rdfs/label "HowOrWhereHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def HowTo
  {:db/ident :schema/HowTo,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Instructions that explain how to achieve a result by performing a sequence of steps.",
   :rdfs/label "HowTo",
   :rdfs/subClassOf :schema/CreativeWork})

(def HowToDirection
  {:db/ident :schema/HowToDirection,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A direction indicating a single action to do in the instructions for how to achieve a result.",
   :rdfs/label "HowToDirection",
   :rdfs/subClassOf #{:schema/ListItem :schema/CreativeWork}})

(def HowToItem
  {:db/ident :schema/HowToItem,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An item used as either a tool or supply when performing the instructions for how to achieve a result.",
   :rdfs/label "HowToItem",
   :rdfs/subClassOf :schema/ListItem})

(def HowToSection
  {:db/ident :schema/HowToSection,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A sub-grouping of steps in the instructions for how to achieve a result (e.g. steps for making a pie crust within a pie recipe).",
   :rdfs/label "HowToSection",
   :rdfs/subClassOf #{:schema/ItemList :schema/ListItem :schema/CreativeWork}})

(def HowToStep
  {:db/ident :schema/HowToStep,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A step in the instructions for how to achieve a result. It is an ordered list with HowToDirection and/or HowToTip items.",
   :rdfs/label "HowToStep",
   :rdfs/subClassOf #{:schema/ItemList :schema/ListItem :schema/CreativeWork}})

(def HowToSupply
  {:db/ident :schema/HowToSupply,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A supply consumed when performing the instructions for how to achieve a result.",
   :rdfs/label "HowToSupply",
   :rdfs/subClassOf :schema/HowToItem})

(def HowToTip
  {:db/ident :schema/HowToTip,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An explanation in the instructions for how to achieve a result. It provides supplementary information about a technique, supply, author's preference, etc. It can explain what could be done, or what should not be done, but doesn't specify what should be done (see HowToDirection).",
   :rdfs/label "HowToTip",
   :rdfs/subClassOf #{:schema/ListItem :schema/CreativeWork}})

(def HowToTool
  {:db/ident :schema/HowToTool,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A tool used (but not consumed) when performing instructions for how to achieve a result.",
   :rdfs/label "HowToTool",
   :rdfs/subClassOf :schema/HowToItem})

(def HyperToc
  {:db/ident :schema/HyperToc,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A HyperToc represents a hypertext table of contents for complex media objects, such as [[VideoObject]], [[AudioObject]]. Items in the table of contents are indicated using the [[tocEntry]] property, and typed [[HyperTocEntry]]. For cases where the same larger work is split into multiple files, [[associatedMedia]] can be used on individual [[HyperTocEntry]] items.",
   :rdfs/label "HyperToc",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2766"}})

(def HyperTocEntry
  {:db/ident :schema/HyperTocEntry,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A HyperToEntry is an item within a [[HyperToc]], which represents a hypertext table of contents for complex media objects, such as [[VideoObject]], [[AudioObject]]. The media object itself is indicated using [[associatedMedia]]. Each section of interest within that content can be described with a [[HyperTocEntry]], with associated [[startOffset]] and [[endOffset]]. When several entries are all from the same file, [[associatedMedia]] is used on the overarching [[HyperTocEntry]]; if the content has been split into multiple files, they can be referenced using [[associatedMedia]] on each [[HyperTocEntry]].",
   :rdfs/label "HyperTocEntry",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2766"}})

(def IOSPlatform
  {:db/ident :schema/IOSPlatform,
   :rdf/type :schema/DigitalPlatformEnumeration,
   :rdfs/comment "Represents the broad notion of iOS-based operating systems.",
   :rdfs/label "IOSPlatform",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3057"}})

(def IceCreamShop
  {:db/ident        :schema/IceCreamShop,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An ice cream shop.",
   :rdfs/label      "IceCreamShop",
   :rdfs/subClassOf :schema/FoodEstablishment})

(def IgnoreAction
  {:db/ident :schema/IgnoreAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of intentionally disregarding the object. An agent ignores an object.",
   :rdfs/label "IgnoreAction",
   :rdfs/subClassOf :schema/AssessAction})

(def ImageGallery
  {:db/ident        :schema/ImageGallery,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Web page type: Image gallery page.",
   :rdfs/label      "ImageGallery",
   :rdfs/subClassOf :schema/MediaGallery})

(def ImageObject
  {:db/ident            :schema/ImageObject,
   :owl/equivalentClass :dcmitype/Image,
   :rdf/type            :rdfs/Class,
   :rdfs/comment        "An image file.",
   :rdfs/label          "ImageObject",
   :rdfs/subClassOf     :schema/MediaObject})

(def ImageObjectSnapshot
  {:db/ident :schema/ImageObjectSnapshot,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A specific and exact (byte-for-byte) version of an [[ImageObject]]. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata (e.g. XMP, EXIF) the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.",
   :rdfs/label "ImageObjectSnapshot",
   :rdfs/subClassOf :schema/ImageObject,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def ImagingTest
  {:db/ident :schema/ImagingTest,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any medical imaging modality typically used for diagnostic purposes.",
   :rdfs/label "ImagingTest",
   :rdfs/subClassOf :schema/MedicalTest,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def InForce
  {:db/ident           :schema/InForce,
   :rdf/type           :schema/LegalForceStatus,
   :rdfs/comment       "Indicates that a legislation is in force.",
   :rdfs/label         "InForce",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf    {:xsd/anyURI "http://pending.schema.org"},
   :schema/source      {:xsd/anyURI
                        "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch    {:xsd/anyURI
                        "http://data.europa.eu/eli/ontology#InForce-inForce"}})

(def InStock
  {:db/ident     :schema/InStock,
   :rdf/type     :schema/ItemAvailability,
   :rdfs/comment "Indicates that the item is in stock.",
   :rdfs/label   "InStock"})

(def InStoreOnly
  {:db/ident :schema/InStoreOnly,
   :rdf/type :schema/ItemAvailability,
   :rdfs/comment
   "Indicates that the item is available only at physical locations.",
   :rdfs/label "InStoreOnly"})

(def IndividualProduct
  {:db/ident :schema/IndividualProduct,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A single, identifiable product instance (e.g. a laptop with a particular serial number).",
   :rdfs/label "IndividualProduct",
   :rdfs/subClassOf :schema/Product,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def Infectious
  {:db/ident :schema/Infectious,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "Something in medical science that pertains to infectious diseases, i.e. caused by bacterial, viral, fungal or parasitic infections.",
   :rdfs/label "Infectious",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def InfectiousAgentClass
  {:db/ident :schema/InfectiousAgentClass,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Classes of agents or pathogens that transmit infectious diseases. Enumerated type.",
   :rdfs/label "InfectiousAgentClass",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def InfectiousDisease
  {:db/ident :schema/InfectiousDisease,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An infectious disease is a clinically evident human disease resulting from the presence of pathogenic microbial agents, like pathogenic viruses, pathogenic bacteria, fungi, protozoa, multicellular parasites, and prions. To be considered an infectious disease, such pathogens are known to be able to cause this disease.",
   :rdfs/label "InfectiousDisease",
   :rdfs/subClassOf :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def InformAction
  {:db/ident :schema/InformAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of notifying someone of information pertinent to them, with no expectation of a response.",
   :rdfs/label "InformAction",
   :rdfs/subClassOf :schema/CommunicateAction})

(def IngredientsHealthAspect
  {:db/ident :schema/IngredientsHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Content discussing ingredients-related aspects of a health topic.",
   :rdfs/label "IngredientsHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2799"}})

(def InsertAction
  {:db/ident :schema/InsertAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of adding at a specific location in an ordered collection.",
   :rdfs/label "InsertAction",
   :rdfs/subClassOf :schema/AddAction})

(def InstallAction
  {:db/ident        :schema/InstallAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of installing an application.",
   :rdfs/label      "InstallAction",
   :rdfs/subClassOf :schema/ConsumeAction})

(def Installment
  {:db/ident :schema/Installment,
   :rdf/type :schema/PriceComponentTypeEnumeration,
   :rdfs/comment
   "Represents the installment pricing component of the total price for an offered product.",
   :rdfs/label "Installment",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def InsuranceAgency
  {:db/ident        :schema/InsuranceAgency,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An Insurance agency.",
   :rdfs/label      "InsuranceAgency",
   :rdfs/subClassOf :schema/FinancialService})

(def Intangible
  {:db/ident :schema/Intangible,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A utility class that serves as the umbrella for a number of 'intangible' things such as quantities, structured values, etc.",
   :rdfs/label "Intangible",
   :rdfs/subClassOf :schema/Thing})

(def IntegerClass
  {:db/ident        :schema/Integer,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Data type: Integer.",
   :rdfs/label      "Integer",
   :rdfs/subClassOf :schema/Number})

(def InteractAction
  {:db/ident :schema/InteractAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment "The act of interacting with another person or organization.",
   :rdfs/label "InteractAction",
   :rdfs/subClassOf :schema/Action})

(def InteractionCounter
  {:db/ident :schema/InteractionCounter,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A summary of how users have interacted with this CreativeWork. In most cases, authors will use a subtype to specify the specific type of interaction.",
   :rdfs/label "InteractionCounter",
   :rdfs/subClassOf :schema/StructuredValue})

(def InternationalTrial
  {:db/ident        :schema/InternationalTrial,
   :rdf/type        :schema/MedicalTrialDesign,
   :rdfs/comment    "An international trial.",
   :rdfs/label      "InternationalTrial",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def InternetCafe
  {:db/ident        :schema/InternetCafe,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An internet cafe.",
   :rdfs/label      "InternetCafe",
   :rdfs/subClassOf :schema/LocalBusiness})

(def InvestmentFund
  {:db/ident :schema/InvestmentFund,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A company or fund that gathers capital from a number of investors to create a pool of money that is then re-invested into stocks, bonds and other assets.",
   :rdfs/label "InvestmentFund",
   :rdfs/subClassOf :schema/InvestmentOrDeposit,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def InvestmentOrDeposit
  {:db/ident :schema/InvestmentOrDeposit,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A type of financial product that typically requires the client to transfer funds to a financial service in return for potential beneficial financial return.",
   :rdfs/label "InvestmentOrDeposit",
   :rdfs/subClassOf :schema/FinancialProduct,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}})

(def InviteAction
  {:db/ident :schema/InviteAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of asking someone to attend an event. Reciprocal of RsvpAction.",
   :rdfs/label "InviteAction",
   :rdfs/subClassOf :schema/CommunicateAction})

(def Invoice
  {:db/ident :schema/Invoice,
   :rdf/type :rdfs/Class,
   :rdfs/comment "A statement of the money due for goods or services; a bill.",
   :rdfs/label "Invoice",
   :rdfs/subClassOf :schema/Intangible})

(def InvoicePrice
  {:db/ident        :schema/InvoicePrice,
   :rdf/type        :schema/PriceTypeEnumeration,
   :rdfs/comment    "Represents the invoice price of an offered product.",
   :rdfs/label      "InvoicePrice",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2712"}})

(def ItemAvailability
  {:db/ident        :schema/ItemAvailability,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A list of possible product availability options.",
   :rdfs/label      "ItemAvailability",
   :rdfs/subClassOf :schema/Enumeration})

(def ItemList
  {:db/ident :schema/ItemList,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A list of items of any sort&#x2014;for example, Top 10 Movies About Weathermen, or Top 100 Party Songs. Not to be confused with HTML lists, which are often used only for formatting.",
   :rdfs/label "ItemList",
   :rdfs/subClassOf :schema/Intangible})

(def ItemListOrderAscending
  {:db/ident     :schema/ItemListOrderAscending,
   :rdf/type     :schema/ItemListOrderType,
   :rdfs/comment "An ItemList ordered with lower values listed first.",
   :rdfs/label   "ItemListOrderAscending"})

(def ItemListOrderDescending
  {:db/ident     :schema/ItemListOrderDescending,
   :rdf/type     :schema/ItemListOrderType,
   :rdfs/comment "An ItemList ordered with higher values listed first.",
   :rdfs/label   "ItemListOrderDescending"})

(def ItemListOrderType
  {:db/ident :schema/ItemListOrderType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerated for values for itemListOrder for indicating how an ordered ItemList is organized.",
   :rdfs/label "ItemListOrderType",
   :rdfs/subClassOf :schema/Enumeration})

(def ItemListUnordered
  {:db/ident     :schema/ItemListUnordered,
   :rdf/type     :schema/ItemListOrderType,
   :rdfs/comment "An ItemList ordered with no explicit order.",
   :rdfs/label   "ItemListUnordered"})

(def ItemPage
  {:db/ident :schema/ItemPage,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A page devoted to a single item, such as a particular product or hotel.",
   :rdfs/label "ItemPage",
   :rdfs/subClassOf :schema/WebPage})

(def JewelryStore
  {:db/ident        :schema/JewelryStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A jewelry store.",
   :rdfs/label      "JewelryStore",
   :rdfs/subClassOf :schema/Store})

(def JobPosting
  {:db/ident :schema/JobPosting,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A listing that describes a job opening in a certain organization.",
   :rdfs/label "JobPosting",
   :rdfs/subClassOf :schema/Intangible})

(def JoinAction
  {:db/ident :schema/JoinAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An agent joins an event/group with participants/friends at a location.\\n\\nRelated actions:\\n\\n* [[RegisterAction]]: Unlike RegisterAction, JoinAction refers to joining a group/team of people.\\n* [[SubscribeAction]]: Unlike SubscribeAction, JoinAction does not imply that you'll be receiving updates.\\n* [[FollowAction]]: Unlike FollowAction, JoinAction does not imply that you'll be polling for updates.",
   :rdfs/label "JoinAction",
   :rdfs/subClassOf :schema/InteractAction})

(def Joint
  {:db/ident :schema/Joint,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The anatomical location at which two or more bones make contact.",
   :rdfs/label "Joint",
   :rdfs/subClassOf :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def KosherDiet
  {:db/ident     :schema/KosherDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet conforming to Jewish dietary practices.",
   :rdfs/label   "KosherDiet"})

(def LaboratoryScience
  {:db/ident :schema/LaboratoryScience,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A medical science pertaining to chemical, hematological, immunologic, microscopic, or bacteriological diagnostic analyses or research.",
   :rdfs/label "LaboratoryScience",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def LakeBodyOfWater
  {:db/ident        :schema/LakeBodyOfWater,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A lake (for example, Lake Pontrachain).",
   :rdfs/label      "LakeBodyOfWater",
   :rdfs/subClassOf :schema/BodyOfWater})

(def Landform
  {:db/ident :schema/Landform,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A landform or physical feature.  Landform elements include mountains, plains, lakes, rivers, seascape and oceanic waterbody interface features such as bays, peninsulas, seas and so forth, including sub-aqueous terrain features such as submersed mountain ranges, volcanoes, and the great ocean basins.",
   :rdfs/label "Landform",
   :rdfs/subClassOf :schema/Place})

(def LandmarksOrHistoricalBuildings
  {:db/ident        :schema/LandmarksOrHistoricalBuildings,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An historical landmark or building.",
   :rdfs/label      "LandmarksOrHistoricalBuildings",
   :rdfs/subClassOf :schema/Place})

(def Language
  {:db/ident :schema/Language,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Natural languages such as Spanish, Tamil, Hindi, English, etc. Formal language code tags expressed in [BCP 47](https://en.wikipedia.org/wiki/IETF_language_tag) can be used via the [[alternateName]] property. The Language type previously also covered programming languages such as Scheme and Lisp, which are now best represented using [[ComputerLanguage]].",
   :rdfs/label "Language",
   :rdfs/subClassOf :schema/Intangible})

(def LaserDiscFormat
  {:db/ident           :schema/LaserDiscFormat,
   :rdf/type           :schema/MusicReleaseFormatType,
   :rdfs/comment       "LaserDiscFormat.",
   :rdfs/label         "LaserDiscFormat",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def LearningResource
  {:db/ident :schema/LearningResource,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The LearningResource type can be used to indicate [[CreativeWork]]s (whether physical or digital) that have a particular and explicit orientation towards learning, education, skill acquisition, and other educational purposes.\n\n[[LearningResource]] is expected to be used as an addition to a primary type such as [[Book]], [[VideoObject]], [[Product]] etc.\n\n[[EducationEvent]] serves a similar purpose for event-like things (e.g. a [[Trip]]). A [[LearningResource]] may be created as a result of an [[EducationEvent]], for example by recording one.",
   :rdfs/label "LearningResource",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1401"}})

(def LeaveAction
  {:db/ident :schema/LeaveAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An agent leaves an event / group with participants/friends at a location.\\n\\nRelated actions:\\n\\n* [[JoinAction]]: The antonym of LeaveAction.\\n* [[UnRegisterAction]]: Unlike UnRegisterAction, LeaveAction implies leaving a group/team of people rather than a service.",
   :rdfs/label "LeaveAction",
   :rdfs/subClassOf :schema/InteractAction})

(def LeftHandDriving
  {:db/ident :schema/LeftHandDriving,
   :rdf/type :schema/SteeringPositionValue,
   :rdfs/comment
   "The steering position is on the left side of the vehicle (viewed from the main direction of driving).",
   :rdfs/label "LeftHandDriving",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def LegalForceStatus
  {:db/ident :schema/LegalForceStatus,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A list of possible statuses for the legal force of a legislation.",
   :rdfs/label "LegalForceStatus",
   :rdfs/subClassOf :schema/StatusEnumeration,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI "http://data.europa.eu/eli/ontology#InForce"}})

(def LegalService
  {:db/ident :schema/LegalService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A LegalService is a business that provides legally-oriented services, advice and representation, e.g. law firms.\\n\\nAs a [[LocalBusiness]] it can be described as a [[provider]] of one or more [[Service]]\\(s).",
   :rdfs/label "LegalService",
   :rdfs/subClassOf :schema/LocalBusiness})

(def LegalValueLevel
  {:db/ident :schema/LegalValueLevel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A list of possible levels for the legal validity of a legislation.",
   :rdfs/label "LegalValueLevel",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/closeMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#LegalValue"}})

(def Legislation
  {:db/ident :schema/Legislation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A legal document such as an act, decree, bill, etc. (enforceable or not) or a component of a legal act (like an article).",
   :rdfs/label "Legislation",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/closeMatch
   #{{:xsd/anyURI "http://data.europa.eu/eli/ontology#LegalRecontributor"}
     {:xsd/anyURI "http://data.europa.eu/eli/ontology#LegalExpression"}}})

(def LegislationObject
  {:db/ident :schema/LegislationObject,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A specific object or file containing a Legislation. Note that the same Legislation can be published in multiple files. For example, a digitally signed PDF, a plain PDF and an HTML version.",
   :rdfs/label "LegislationObject",
   :rdfs/subClassOf #{:schema/MediaObject :schema/Legislation},
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/closeMatch {:xsd/anyURI "http://data.europa.eu/eli/ontology#Format"}})

(def LegislativeBuilding
  {:db/ident :schema/LegislativeBuilding,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A legislative building&#x2014;for example, the state capitol.",
   :rdfs/label "LegislativeBuilding",
   :rdfs/subClassOf :schema/GovernmentBuilding})

(def LeisureTimeActivity
  {:db/ident :schema/LeisureTimeActivity,
   :rdf/type :schema/PhysicalActivityCategory,
   :rdfs/comment
   "Any physical activity engaged in for recreational purposes. Examples may include ballroom dancing, roller skating, canoeing, fishing, etc.",
   :rdfs/label "LeisureTimeActivity",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def LendAction
  {:db/ident :schema/LendAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of providing an object under an agreement that it will be returned at a later date. Reciprocal of BorrowAction.\\n\\nRelated actions:\\n\\n* [[BorrowAction]]: Reciprocal of LendAction.",
   :rdfs/label "LendAction",
   :rdfs/subClassOf :schema/TransferAction})

(def Library
  {:db/ident        :schema/Library,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A library.",
   :rdfs/label      "Library",
   :rdfs/subClassOf :schema/LocalBusiness})

(def LibrarySystem
  {:db/ident :schema/LibrarySystem,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[LibrarySystem]] is a collaborative system amongst several libraries.",
   :rdfs/label "LibrarySystem",
   :rdfs/subClassOf :schema/Organization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1495"}})

(def LifestyleModification
  {:db/ident :schema/LifestyleModification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A process of care involving exercise, changes to diet, fitness routines, and other lifestyle changes aimed at improving a health condition.",
   :rdfs/label "LifestyleModification",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Ligament
  {:db/ident :schema/Ligament,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A short band of tough, flexible, fibrous connective tissue that functions to connect multiple bones, cartilages, and structurally support joints.",
   :rdfs/label "Ligament",
   :rdfs/subClassOf :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def LikeAction
  {:db/ident :schema/LikeAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of expressing a positive sentiment about the object. An agent likes an object (a proposition, topic or theme) with participants.",
   :rdfs/label "LikeAction",
   :rdfs/subClassOf :schema/ReactAction})

(def LimitedAvailability
  {:db/ident     :schema/LimitedAvailability,
   :rdf/type     :schema/ItemAvailability,
   :rdfs/comment "Indicates that the item has limited availability.",
   :rdfs/label   "LimitedAvailability"})

(def LimitedByGuaranteeCharity
  {:db/ident :schema/LimitedByGuaranteeCharity,
   :rdf/type :schema/UKNonprofitType,
   :rdfs/comment
   "LimitedByGuaranteeCharity: Non-profit type referring to a charitable company that is limited by guarantee (UK).",
   :rdfs/label "LimitedByGuaranteeCharity",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def LinkRole
  {:db/ident :schema/LinkRole,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A Role that represents a Web link, e.g. as expressed via the 'url' property. Its linkRelationship property can indicate URL-based and plain textual link types, e.g. those in IANA link registry or others such as 'amphtml'. This structure provides a placeholder where details from HTML's link element can be represented outside of HTML, e.g. in JSON-LD feeds.",
   :rdfs/label "LinkRole",
   :rdfs/subClassOf :schema/Role,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1045"}})

(def LiquorStore
  {:db/ident :schema/LiquorStore,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A shop that sells alcoholic drinks such as wine, beer, whisky and other spirits.",
   :rdfs/label "LiquorStore",
   :rdfs/subClassOf :schema/Store})

(def ListItem
  {:db/ident :schema/ListItem,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An list item, e.g. a step in a checklist or how-to description.",
   :rdfs/label "ListItem",
   :rdfs/subClassOf :schema/Intangible})

(def ListPrice
  {:db/ident :schema/ListPrice,
   :rdf/type :schema/PriceTypeEnumeration,
   :rdfs/comment
   "Represents the list price (the price a product is actually advertised for) of an offered product.",
   :rdfs/label "ListPrice",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2712"}})

(def ListenAction
  {:db/ident        :schema/ListenAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of consuming audio content.",
   :rdfs/label      "ListenAction",
   :rdfs/subClassOf :schema/ConsumeAction})

(def LiteraryEvent
  {:db/ident        :schema/LiteraryEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Literary event.",
   :rdfs/label      "LiteraryEvent",
   :rdfs/subClassOf :schema/Event})

(def LiveAlbum
  {:db/ident           :schema/LiveAlbum,
   :rdf/type           :schema/MusicAlbumProductionType,
   :rdfs/comment       "LiveAlbum.",
   :rdfs/label         "LiveAlbum",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def LiveBlogPosting
  {:db/ident :schema/LiveBlogPosting,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[LiveBlogPosting]] is a [[BlogPosting]] intended to provide a rolling textual coverage of an ongoing event through continuous updates.",
   :rdfs/label "LiveBlogPosting",
   :rdfs/subClassOf :schema/BlogPosting})

(def LivingWithHealthAspect
  {:db/ident        :schema/LivingWithHealthAspect,
   :rdf/type        :schema/HealthAspectEnumeration,
   :rdfs/comment    "Information about coping or life related to the topic.",
   :rdfs/label      "LivingWithHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def LoanOrCredit
  {:db/ident :schema/LoanOrCredit,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A financial product for the loaning of an amount of money, or line of credit, under agreed terms and charges.",
   :rdfs/label "LoanOrCredit",
   :rdfs/subClassOf :schema/FinancialProduct,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}})

(def LocalBusiness
  {:db/ident :schema/LocalBusiness,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A particular physical business or branch of an organization. Examples of LocalBusiness include a restaurant, a particular branch of a restaurant chain, a branch of a bank, a medical practice, a club, a bowling alley, etc.",
   :rdfs/label "LocalBusiness",
   :rdfs/subClassOf #{:schema/Place :schema/Organization},
   :skos/closeMatch {:xsd/anyURI
                     "http://www.w3.org/ns/regorg#RegisteredOrganization"}})

(def LocationFeatureSpecification
  {:db/ident :schema/LocationFeatureSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Specifies a location feature by providing a structured value representing a feature of an accommodation as a property-value pair of varying degrees of formality.",
   :rdfs/label "LocationFeatureSpecification",
   :rdfs/subClassOf :schema/PropertyValue,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def LockerDelivery
  {:db/ident :schema/LockerDelivery,
   :rdf/type :schema/DeliveryMethod,
   :rdfs/comment
   "A DeliveryMethod in which an item is made available via locker.",
   :rdfs/label "LockerDelivery"})

(def Locksmith
  {:db/ident        :schema/Locksmith,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A locksmith.",
   :rdfs/label      "Locksmith",
   :rdfs/subClassOf :schema/HomeAndConstructionBusiness})

(def LodgingBusiness
  {:db/ident        :schema/LodgingBusiness,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A lodging business, such as a motel, hotel, or inn.",
   :rdfs/label      "LodgingBusiness",
   :rdfs/subClassOf :schema/LocalBusiness})

(def LodgingReservation
  {:db/ident :schema/LodgingReservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservation for lodging at a hotel, motel, inn, etc.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.",
   :rdfs/label "LodgingReservation",
   :rdfs/subClassOf :schema/Reservation})

(def Longitudinal
  {:db/ident :schema/Longitudinal,
   :rdf/type :schema/MedicalObservationalStudyDesign,
   :rdfs/comment
   "Unlike cross-sectional studies, longitudinal studies track the same people, and therefore the differences observed in those people are less likely to be the result of cultural differences across generations. Longitudinal studies are also used in medicine to uncover predictors of certain diseases.",
   :rdfs/label "Longitudinal",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def LoseAction
  {:db/ident        :schema/LoseAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of being defeated in a competitive activity.",
   :rdfs/label      "LoseAction",
   :rdfs/subClassOf :schema/AchieveAction})

(def LowCalorieDiet
  {:db/ident     :schema/LowCalorieDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet focused on reduced calorie intake.",
   :rdfs/label   "LowCalorieDiet"})

(def LowFatDiet
  {:db/ident     :schema/LowFatDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet focused on reduced fat and cholesterol intake.",
   :rdfs/label   "LowFatDiet"})

(def LowLactoseDiet
  {:db/ident     :schema/LowLactoseDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet appropriate for people with lactose intolerance.",
   :rdfs/label   "LowLactoseDiet"})

(def LowSaltDiet
  {:db/ident     :schema/LowSaltDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet focused on reduced sodium intake.",
   :rdfs/label   "LowSaltDiet"})

(def Lung
  {:db/ident        :schema/Lung,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Lung and respiratory system clinical examination.",
   :rdfs/label      "Lung",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def LymphaticVessel
  {:db/ident :schema/LymphaticVessel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A type of blood vessel that specifically carries lymph fluid unidirectionally toward the heart.",
   :rdfs/label "LymphaticVessel",
   :rdfs/subClassOf :schema/Vessel,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MRI
  {:db/ident        :schema/MRI,
   :rdf/type        :schema/MedicalImagingTechnique,
   :rdfs/comment    "Magnetic resonance imaging.",
   :rdfs/label      "MRI",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MSRP
  {:db/ident :schema/MSRP,
   :rdf/type :schema/PriceTypeEnumeration,
   :rdfs/comment
   "Represents the manufacturer suggested retail price (\"MSRP\") of an offered product.",
   :rdfs/label "MSRP",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2712"}})

(def Male
  {:db/ident     :schema/Male,
   :rdf/type     :schema/GenderType,
   :rdfs/comment "The male gender.",
   :rdfs/label   "Male"})

(def Manuscript
  {:db/ident :schema/Manuscript,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A book, document, or piece of music written by hand rather than typed or printed.",
   :rdfs/label "Manuscript",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1448"}})

(def Map
  {:db/ident        :schema/Map,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A map.",
   :rdfs/label      "Map",
   :rdfs/subClassOf :schema/CreativeWork})

(def MapCategoryType
  {:db/ident        :schema/MapCategoryType,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An enumeration of several kinds of Map.",
   :rdfs/label      "MapCategoryType",
   :rdfs/subClassOf :schema/Enumeration})

(def MarryAction
  {:db/ident        :schema/MarryAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of marrying a person.",
   :rdfs/label      "MarryAction",
   :rdfs/subClassOf :schema/InteractAction})

(def Mass
  {:db/ident :schema/Mass,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Properties that take Mass as values are of the form '&lt;Number&gt; &lt;Mass unit of measure&gt;'. E.g., '7 kg'.",
   :rdfs/label "Mass",
   :rdfs/subClassOf :schema/Quantity})

(def MathSolver
  {:db/ident :schema/MathSolver,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A math solver which is capable of solving a subset of mathematical problems.",
   :rdfs/label "MathSolver",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2740"}})

(def MaximumDoseSchedule
  {:db/ident :schema/MaximumDoseSchedule,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The maximum dosing schedule considered safe for a drug or supplement as recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.",
   :rdfs/label "MaximumDoseSchedule",
   :rdfs/subClassOf :schema/DoseSchedule,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MayTreatHealthAspect
  {:db/ident        :schema/MayTreatHealthAspect,
   :rdf/type        :schema/HealthAspectEnumeration,
   :rdfs/comment    "Related topics may be treated by a Topic.",
   :rdfs/label      "MayTreatHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def MeasurementMethodEnum
  {:db/ident        :schema/MeasurementMethodEnum,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Enumeration(s) for use with [[measurementMethod]].",
   :rdfs/label      "MeasurementMethodEnum",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2564"}})

(def MeasurementTypeEnumeration
  {:db/ident :schema/MeasurementTypeEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumeration of common measurement types (or dimensions), for example \"chest\" for a person, \"inseam\" for pants, \"gauge\" for screws, or \"wheel\" for bicycles.",
   :rdfs/label "MeasurementTypeEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def MediaGallery
  {:db/ident :schema/MediaGallery,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Web page type: Media gallery page. A mixed-media page that can contain media such as images, videos, and other multimedia.",
   :rdfs/label "MediaGallery",
   :rdfs/subClassOf :schema/CollectionPage})

(def MediaManipulationRatingEnumeration
  {:db/ident :schema/MediaManipulationRatingEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   " Codes for use with the [[mediaAuthenticityCategory]] property, indicating the authenticity of a media object (in the context of how it was published or shared). In general these codes are not mutually exclusive, although some combinations (such as 'original' versus 'transformed', 'edited' and 'staged') would be contradictory if applied in the same [[MediaReview]]. Note that the application of these codes is with regard to a piece of media shared or published in a particular context.",
   :rdfs/label "MediaManipulationRatingEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def MediaObject
  {:db/ident :schema/MediaObject,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A media object, such as an image, video, audio, or text object embedded in a web page or a downloadable dataset i.e. DataDownload. Note that a creative work may have many media objects associated with it on the same web page. For example, a page about a single song (MusicRecording) may have a music video (VideoObject), and a high and low bandwidth audio stream (2 AudioObject's).",
   :rdfs/label "MediaObject",
   :rdfs/subClassOf :schema/CreativeWork})

(def MediaReview
  {:db/ident :schema/MediaReview,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[MediaReview]] is a more specialized form of Review dedicated to the evaluation of media content online, typically in the context of fact-checking and misinformation.\n    For more general reviews of media in the broader sense, use [[UserReview]], [[CriticReview]] or other [[Review]] types. This definition is\n    a work in progress. While the [[MediaManipulationRatingEnumeration]] list reflects significant community review amongst fact-checkers and others working\n    to combat misinformation, the specific structures for representing media objects, their versions and publication context, are still evolving. Similarly, best practices for the relationship between [[MediaReview]] and [[ClaimReview]] markup have not yet been finalized.",
   :rdfs/label "MediaReview",
   :rdfs/subClassOf :schema/Review,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def MediaReviewItem
  {:db/ident :schema/MediaReviewItem,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Represents an item or group of closely related items treated as a unit for the sake of evaluation in a [[MediaReview]]. Authorship etc. apply to the items rather than to the curation/grouping or reviewing party.",
   :rdfs/label "MediaReviewItem",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def MediaSubscription
  {:db/ident :schema/MediaSubscription,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A subscription which allows a user to access media including audio, video, books, etc.",
   :rdfs/label "MediaSubscription",
   :rdfs/subClassOf :schema/Intangible,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1741"}})

(def MedicalAudience
  {:db/ident        :schema/MedicalAudience,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Target audiences for medical web pages.",
   :rdfs/label      "MedicalAudience",
   :rdfs/subClassOf #{:schema/Audience :schema/PeopleAudience},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalAudienceType
  {:db/ident :schema/MedicalAudienceType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Target audiences types for medical web pages. Enumerated type.",
   :rdfs/label "MedicalAudienceType",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalBusiness
  {:db/ident :schema/MedicalBusiness,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A particular physical or virtual business of an organization for medical purposes. Examples of MedicalBusiness include different businesses run by health professionals.",
   :rdfs/label "MedicalBusiness",
   :rdfs/subClassOf :schema/LocalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalCause
  {:db/ident :schema/MedicalCause,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The causative agent(s) that are responsible for the pathophysiologic process that eventually results in a medical condition, symptom or sign. In this schema, unless otherwise specified this is meant to be the proximate cause of the medical condition, symptom or sign. The proximate cause is defined as the causative agent that most directly results in the medical condition, symptom or sign. For example, the HIV virus could be considered a cause of AIDS. Or in a diagnostic context, if a patient fell and sustained a hip fracture and two days later sustained a pulmonary embolism which eventuated in a cardiac arrest, the cause of the cardiac arrest (the proximate cause) would be the pulmonary embolism and not the fall. Medical causes can include cardiovascular, chemical, dermatologic, endocrine, environmental, gastroenterologic, genetic, hematologic, gynecologic, iatrogenic, infectious, musculoskeletal, neurologic, nutritional, obstetric, oncologic, otolaryngologic, pharmacologic, psychiatric, pulmonary, renal, rheumatologic, toxic, traumatic, or urologic causes; medical conditions can be causes as well.",
   :rdfs/label "MedicalCause",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalClinic
  {:db/ident :schema/MedicalClinic,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A facility, often associated with a hospital or medical school, that is devoted to the specific diagnosis and/or healthcare. Previously limited to outpatients but with evolution it may be open to inpatients as well.",
   :rdfs/label "MedicalClinic",
   :rdfs/subClassOf #{:schema/MedicalBusiness :schema/MedicalOrganization},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalCode
  {:db/ident        :schema/MedicalCode,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A code for a medical entity.",
   :rdfs/label      "MedicalCode",
   :rdfs/subClassOf #{:schema/CategoryCode :schema/MedicalIntangible},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalCondition
  {:db/ident :schema/MedicalCondition,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any condition of the human body that affects the normal functioning of a person, whether physically or mentally. Includes diseases, injuries, disabilities, disorders, syndromes, etc.",
   :rdfs/label "MedicalCondition",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalConditionStage
  {:db/ident        :schema/MedicalConditionStage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A stage of a medical condition, such as 'Stage IIIa'.",
   :rdfs/label      "MedicalConditionStage",
   :rdfs/subClassOf :schema/MedicalIntangible,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalContraindication
  {:db/ident :schema/MedicalContraindication,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A condition or factor that serves as a reason to withhold a certain medical therapy. Contraindications can be absolute (there are no reasonable circumstances for undertaking a course of action) or relative (the patient is at higher risk of complications, but these risks may be outweighed by other considerations or mitigated by other measures).",
   :rdfs/label "MedicalContraindication",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalDevice
  {:db/ident :schema/MedicalDevice,
   :owl/equivalentClass
   {:xsd/anyURI "http://purl.bioontology.org/ontology/SNOMEDCT/63653004"},
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any object used in a medical capacity, such as to diagnose or treat a patient.",
   :rdfs/label "MedicalDevice",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalDevicePurpose
  {:db/ident :schema/MedicalDevicePurpose,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Categories of medical devices, organized by the purpose or intended use of the device.",
   :rdfs/label "MedicalDevicePurpose",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalEntity
  {:db/ident :schema/MedicalEntity,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The most generic type of entity related to health and the practice of medicine.",
   :rdfs/label "MedicalEntity",
   :rdfs/subClassOf :schema/Thing,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalEnumeration
  {:db/ident :schema/MedicalEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerations related to health and the practice of medicine: A concept that is used to attribute a quality to another concept, as a qualifier, a collection of items or a listing of all of the elements of a set in medicine practice.",
   :rdfs/label "MedicalEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalEvidenceLevel
  {:db/ident :schema/MedicalEvidenceLevel,
   :rdf/type :rdfs/Class,
   :rdfs/comment "Level of evidence for a medical guideline. Enumerated type.",
   :rdfs/label "MedicalEvidenceLevel",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalGuideline
  {:db/ident :schema/MedicalGuideline,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any recommendation made by a standard society (e.g. ACC/AHA) or consensus statement that denotes how to diagnose and treat a particular condition. Note: this type should be used to tag the actual guideline recommendation; if the guideline recommendation occurs in a larger scholarly article, use MedicalScholarlyArticle to tag the overall article, not this type. Note also: the organization making the recommendation should be captured in the recognizingAuthority base property of MedicalEntity.",
   :rdfs/label "MedicalGuideline",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalGuidelineContraindication
  {:db/ident :schema/MedicalGuidelineContraindication,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A guideline contraindication that designates a process as harmful and where quality of the data supporting the contraindication is sound.",
   :rdfs/label "MedicalGuidelineContraindication",
   :rdfs/subClassOf :schema/MedicalGuideline,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalGuidelineRecommendation
  {:db/ident :schema/MedicalGuidelineRecommendation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A guideline recommendation that is regarded as efficacious and where quality of the data supporting the recommendation is sound.",
   :rdfs/label "MedicalGuidelineRecommendation",
   :rdfs/subClassOf :schema/MedicalGuideline,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalImagingTechnique
  {:db/ident :schema/MedicalImagingTechnique,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any medical imaging modality typically used for diagnostic purposes. Enumerated type.",
   :rdfs/label "MedicalImagingTechnique",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalIndication
  {:db/ident :schema/MedicalIndication,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A condition or factor that indicates use of a medical therapy, including signs, symptoms, risk factors, anatomical states, etc.",
   :rdfs/label "MedicalIndication",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalIntangible
  {:db/ident :schema/MedicalIntangible,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A utility class that serves as the umbrella for a number of 'intangible' things in the medical space.",
   :rdfs/label "MedicalIntangible",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalObservationalStudy
  {:db/ident :schema/MedicalObservationalStudy,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An observational study is a type of medical study that attempts to infer the possible effect of a treatment through observation of a cohort of subjects over a period of time. In an observational study, the assignment of subjects into treatment groups versus control groups is outside the control of the investigator. This is in contrast with controlled studies, such as the randomized controlled trials represented by MedicalTrial, where each subject is randomly assigned to a treatment group or a control group before the start of the treatment.",
   :rdfs/label "MedicalObservationalStudy",
   :rdfs/subClassOf :schema/MedicalStudy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalObservationalStudyDesign
  {:db/ident :schema/MedicalObservationalStudyDesign,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Design models for observational medical studies. Enumerated type.",
   :rdfs/label "MedicalObservationalStudyDesign",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalOrganization
  {:db/ident :schema/MedicalOrganization,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A medical organization (physical or not), such as hospital, institution or clinic.",
   :rdfs/label "MedicalOrganization",
   :rdfs/subClassOf :schema/Organization})

(def MedicalProcedure
  {:db/ident :schema/MedicalProcedure,
   :owl/equivalentClass
   {:xsd/anyURI "http://purl.bioontology.org/ontology/SNOMEDCT/50731006"},
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A process of care used in either a diagnostic, therapeutic, preventive or palliative capacity that relies on invasive (surgical), non-invasive, or other techniques.",
   :rdfs/label "MedicalProcedure",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalProcedureType
  {:db/ident :schema/MedicalProcedureType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An enumeration that describes different types of medical procedures.",
   :rdfs/label "MedicalProcedureType",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalResearcher
  {:db/ident        :schema/MedicalResearcher,
   :rdf/type        :schema/MedicalAudienceType,
   :rdfs/comment    "Medical researchers.",
   :rdfs/label      "MedicalResearcher",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalRiskCalculator
  {:db/ident :schema/MedicalRiskCalculator,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A complex mathematical calculation requiring an online calculator, used to assess prognosis. Note: use the url property of Thing to record any URLs for online calculators.",
   :rdfs/label "MedicalRiskCalculator",
   :rdfs/subClassOf :schema/MedicalRiskEstimator,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalRiskEstimator
  {:db/ident :schema/MedicalRiskEstimator,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any rule set or interactive tool for estimating the risk of developing a complication or condition.",
   :rdfs/label "MedicalRiskEstimator",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalRiskFactor
  {:db/ident :schema/MedicalRiskFactor,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A risk factor is anything that increases a person's likelihood of developing or contracting a disease, medical condition, or complication.",
   :rdfs/label "MedicalRiskFactor",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalRiskScore
  {:db/ident :schema/MedicalRiskScore,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A simple system that adds up the number of risk factors to yield a score that is associated with prognosis, e.g. CHAD score, TIMI risk score.",
   :rdfs/label "MedicalRiskScore",
   :rdfs/subClassOf :schema/MedicalRiskEstimator,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalScholarlyArticle
  {:db/ident        :schema/MedicalScholarlyArticle,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A scholarly article in the medical domain.",
   :rdfs/label      "MedicalScholarlyArticle",
   :rdfs/subClassOf :schema/ScholarlyArticle,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalSign
  {:db/ident :schema/MedicalSign,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any physical manifestation of a person's medical condition discoverable by objective diagnostic tests or physical examination.",
   :rdfs/label "MedicalSign",
   :rdfs/subClassOf :schema/MedicalSignOrSymptom,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalSignOrSymptom
  {:db/ident :schema/MedicalSignOrSymptom,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any feature associated or not with a medical condition. In medicine a symptom is generally subjective while a sign is objective.",
   :rdfs/label "MedicalSignOrSymptom",
   :rdfs/subClassOf :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalSpecialty
  {:db/ident :schema/MedicalSpecialty,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any specific branch of medical science or practice. Medical specialities include clinical specialties that pertain to particular organ systems and their respective disease states, as well as allied health specialties. Enumerated type.",
   :rdfs/label "MedicalSpecialty",
   :rdfs/subClassOf #{:schema/MedicalEnumeration :schema/Specialty},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalStudy
  {:db/ident :schema/MedicalStudy,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A medical study is an umbrella type covering all kinds of research studies relating to human medicine or health, including observational studies and interventional trials and registries, randomized, controlled or not. When the specific type of study is known, use one of the extensions of this type, such as MedicalTrial or MedicalObservationalStudy. Also, note that this type should be used to mark up data that describes the study itself; to tag an article that publishes the results of a study, use MedicalScholarlyArticle. Note: use the code property of MedicalEntity to store study IDs, e.g. clinicaltrials.gov ID.",
   :rdfs/label "MedicalStudy",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalStudyStatus
  {:db/ident        :schema/MedicalStudyStatus,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The status of a medical study. Enumerated type.",
   :rdfs/label      "MedicalStudyStatus",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalSymptom
  {:db/ident :schema/MedicalSymptom,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any complaint sensed and expressed by the patient (therefore defined as subjective)  like stomachache, lower-back pain, or fatigue.",
   :rdfs/label "MedicalSymptom",
   :rdfs/subClassOf :schema/MedicalSignOrSymptom,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalTest
  {:db/ident :schema/MedicalTest,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any medical test, typically performed for diagnostic purposes.",
   :rdfs/label "MedicalTest",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalTestPanel
  {:db/ident        :schema/MedicalTestPanel,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Any collection of tests commonly ordered together.",
   :rdfs/label      "MedicalTestPanel",
   :rdfs/subClassOf :schema/MedicalTest,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalTherapy
  {:db/ident :schema/MedicalTherapy,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any medical intervention designed to prevent, treat, and cure human diseases and medical conditions, including both curative and palliative therapies. Medical therapies are typically processes of care relying upon pharmacotherapy, behavioral therapy, supportive therapy (with fluid or nutrition for example), or detoxification (e.g. hemodialysis) aimed at improving or preventing a health condition.",
   :rdfs/label "MedicalTherapy",
   :rdfs/subClassOf :schema/TherapeuticProcedure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalTrial
  {:db/ident :schema/MedicalTrial,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A medical trial is a type of medical study that uses a scientific process to compare the safety and efficacy of medical therapies or medical procedures. In general, medical trials are controlled and subjects are allocated at random to the different treatment and/or control groups.",
   :rdfs/label "MedicalTrial",
   :rdfs/subClassOf :schema/MedicalStudy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalTrialDesign
  {:db/ident           :schema/MedicalTrialDesign,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "Design models for medical trials. Enumerated type.",
   :rdfs/label         "MedicalTrialDesign",
   :rdfs/subClassOf    :schema/MedicalEnumeration,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/WikiDoc"},
   :schema/isPartOf    {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicalWebPage
  {:db/ident        :schema/MedicalWebPage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A web page that provides medical information.",
   :rdfs/label      "MedicalWebPage",
   :rdfs/subClassOf :schema/WebPage,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MedicineSystem
  {:db/ident        :schema/MedicineSystem,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Systems of medical practice.",
   :rdfs/label      "MedicineSystem",
   :rdfs/subClassOf :schema/MedicalEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MeetingRoom
  {:db/ident :schema/MeetingRoom,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A meeting room, conference room, or conference hall is a room provided for singular events such as business conferences and meetings (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Conference_hall\">http://en.wikipedia.org/wiki/Conference_hall</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n",
   :rdfs/label "MeetingRoom",
   :rdfs/subClassOf :schema/Room,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def MensClothingStore
  {:db/ident        :schema/MensClothingStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A men's clothing store.",
   :rdfs/label      "MensClothingStore",
   :rdfs/subClassOf :schema/Store})

(def Menu
  {:db/ident :schema/Menu,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A structured representation of food or drink items available from a FoodEstablishment.",
   :rdfs/label "Menu",
   :rdfs/subClassOf :schema/CreativeWork})

(def MenuItem
  {:db/ident        :schema/MenuItem,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A food or drink item listed in a menu or menu section.",
   :rdfs/label      "MenuItem",
   :rdfs/subClassOf :schema/Intangible})

(def MenuSection
  {:db/ident :schema/MenuSection,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A sub-grouping of food or drink items in a menu. E.g. courses (such as 'Dinner', 'Breakfast', etc.), specific type of dishes (such as 'Meat', 'Vegan', 'Drinks', etc.), or some other classification made by the menu provider.",
   :rdfs/label "MenuSection",
   :rdfs/subClassOf :schema/CreativeWork})

(def MerchantReturnEnumeration
  {:db/ident        :schema/MerchantReturnEnumeration,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Enumerates several kinds of product return policies.",
   :rdfs/label      "MerchantReturnEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def MerchantReturnFiniteReturnWindow
  {:db/ident :schema/MerchantReturnFiniteReturnWindow,
   :rdf/type :schema/MerchantReturnEnumeration,
   :rdfs/comment "Specifies that there is a finite window for product returns.",
   :rdfs/label "MerchantReturnFiniteReturnWindow",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def MerchantReturnNotPermitted
  {:db/ident        :schema/MerchantReturnNotPermitted,
   :rdf/type        :schema/MerchantReturnEnumeration,
   :rdfs/comment    "Specifies that product returns are not permitted.",
   :rdfs/label      "MerchantReturnNotPermitted",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def MerchantReturnPolicy
  {:db/ident :schema/MerchantReturnPolicy,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A MerchantReturnPolicy provides information about product return policies associated with an [[Organization]], [[Product]], or [[Offer]].",
   :rdfs/label "MerchantReturnPolicy",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def MerchantReturnPolicySeasonalOverride
  {:db/ident :schema/MerchantReturnPolicySeasonalOverride,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A seasonal override of a return policy, for example used for holidays.",
   :rdfs/label "MerchantReturnPolicySeasonalOverride",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def MerchantReturnUnlimitedWindow
  {:db/ident :schema/MerchantReturnUnlimitedWindow,
   :rdf/type :schema/MerchantReturnEnumeration,
   :rdfs/comment
   "Specifies that there is an unlimited window for product returns.",
   :rdfs/label "MerchantReturnUnlimitedWindow",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def MerchantReturnUnspecified
  {:db/ident        :schema/MerchantReturnUnspecified,
   :rdf/type        :schema/MerchantReturnEnumeration,
   :rdfs/comment    "Specifies that a product return policy is not provided.",
   :rdfs/label      "MerchantReturnUnspecified",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def Message
  {:db/ident :schema/Message,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A single message from a sender to one or more organizations or people.",
   :rdfs/label "Message",
   :rdfs/subClassOf :schema/CreativeWork})

(def MiddleSchool
  {:db/ident :schema/MiddleSchool,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A middle school (typically for children aged around 11-14, although this varies somewhat).",
   :rdfs/label "MiddleSchool",
   :rdfs/subClassOf :schema/EducationalOrganization})

(def Midwifery
  {:db/ident :schema/Midwifery,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A nurse-like health profession that deals with pregnancy, childbirth, and the postpartum period (including care of the newborn), besides sexual and reproductive health of women throughout their lives.",
   :rdfs/label "Midwifery",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MinimumAdvertisedPrice
  {:db/ident :schema/MinimumAdvertisedPrice,
   :rdf/type :schema/PriceTypeEnumeration,
   :rdfs/comment
   "Represents the minimum advertised price (\"MAP\") (as dictated by the manufacturer) of an offered product.",
   :rdfs/label "MinimumAdvertisedPrice",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2712"}})

(def MisconceptionsHealthAspect
  {:db/ident :schema/MisconceptionsHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Content about common misconceptions and myths that are related to a topic.",
   :rdfs/label "MisconceptionsHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def MixedEventAttendanceMode
  {:db/ident :schema/MixedEventAttendanceMode,
   :rdf/type :schema/EventAttendanceModeEnumeration,
   :rdfs/comment
   "MixedEventAttendanceMode - an event that is conducted as a combination of both offline and online modes.",
   :rdfs/label "MixedEventAttendanceMode",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1842"}})

(def MixtapeAlbum
  {:db/ident           :schema/MixtapeAlbum,
   :rdf/type           :schema/MusicAlbumProductionType,
   :rdfs/comment       "MixtapeAlbum.",
   :rdfs/label         "MixtapeAlbum",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def MobileApplication
  {:db/ident :schema/MobileApplication,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A software application designed specifically to work well on a mobile device such as a telephone.",
   :rdfs/label "MobileApplication",
   :rdfs/subClassOf :schema/SoftwareApplication})

(def MobilePhoneStore
  {:db/ident        :schema/MobilePhoneStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A store that sells mobile phones and related accessories.",
   :rdfs/label      "MobilePhoneStore",
   :rdfs/subClassOf :schema/Store})

(def MobileWebPlatform
  {:db/ident :schema/MobileWebPlatform,
   :rdf/type :schema/DigitalPlatformEnumeration,
   :rdfs/comment
   "Represents the broad notion of 'mobile' browsers as a Web Platform.",
   :rdfs/label "MobileWebPlatform",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3057"}})

(def MolecularEntity
  {:db/ident :schema/MolecularEntity,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any constitutionally or isotopically distinct atom, molecule, ion, ion pair, radical, radical ion, complex, conformer etc., identifiable as a separately distinguishable entity.",
   :rdfs/label "MolecularEntity",
   :rdfs/subClassOf :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI "http://bioschemas.org"}})

(def Monday
  {:db/ident      :schema/Monday,
   :rdf/type      :schema/DayOfWeek,
   :rdfs/comment  "The day of the week between Sunday and Tuesday.",
   :rdfs/label    "Monday",
   :schema/sameAs {:xsd/anyURI "http://www.wikidata.org/entity/Q105"}})

(def MonetaryAmount
  {:db/ident :schema/MonetaryAmount,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A monetary value or range. This type can be used to describe an amount of money such as $50 USD, or a range as in describing a bank account being suitable for a balance between £1,000 and £1,000,000 GBP, or the value of a salary, etc. It is recommended to use [[PriceSpecification]] Types to describe the price of an Offer, Invoice, etc.",
   :rdfs/label "MonetaryAmount",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}})

(def MonetaryAmountDistribution
  {:db/ident        :schema/MonetaryAmountDistribution,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A statistical distribution of monetary amounts.",
   :rdfs/label      "MonetaryAmountDistribution",
   :rdfs/subClassOf :schema/QuantitativeValueDistribution,
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def MonetaryGrant
  {:db/ident        :schema/MonetaryGrant,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A monetary grant.",
   :rdfs/label      "MonetaryGrant",
   :rdfs/subClassOf :schema/Grant,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   #{{:xsd/anyURI
                       "https://github.com/schemaorg/schemaorg/issues/383"}
                      {:xsd/anyURI
                       "http://schema.org/docs/collab/FundInfoCollab"}}})

(def MoneyTransfer
  {:db/ident :schema/MoneyTransfer,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of transferring money from one place to another place. This may occur electronically or physically.",
   :rdfs/label "MoneyTransfer",
   :rdfs/subClassOf :schema/TransferAction,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def MortgageLoan
  {:db/ident :schema/MortgageLoan,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A loan in which property or real estate is used as collateral. (A loan securitized against some real estate.)",
   :rdfs/label "MortgageLoan",
   :rdfs/subClassOf :schema/LoanOrCredit,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def Mosque
  {:db/ident        :schema/Mosque,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A mosque.",
   :rdfs/label      "Mosque",
   :rdfs/subClassOf :schema/PlaceOfWorship})

(def Motel
  {:db/ident :schema/Motel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A motel.\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n",
   :rdfs/label "Motel",
   :rdfs/subClassOf :schema/LodgingBusiness})

(def Motorcycle
  {:db/ident :schema/Motorcycle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A motorcycle or motorbike is a single-track, two-wheeled motor vehicle.",
   :rdfs/label "Motorcycle",
   :rdfs/subClassOf :schema/Vehicle,
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"}})

(def MotorcycleDealer
  {:db/ident        :schema/MotorcycleDealer,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A motorcycle dealer.",
   :rdfs/label      "MotorcycleDealer",
   :rdfs/subClassOf :schema/AutomotiveBusiness})

(def MotorcycleRepair
  {:db/ident        :schema/MotorcycleRepair,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A motorcycle repair shop.",
   :rdfs/label      "MotorcycleRepair",
   :rdfs/subClassOf :schema/AutomotiveBusiness})

(def MotorizedBicycle
  {:db/ident :schema/MotorizedBicycle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A motorized bicycle is a bicycle with an attached motor used to power the vehicle, or to assist with pedaling.",
   :rdfs/label "MotorizedBicycle",
   :rdfs/subClassOf :schema/Vehicle,
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"}})

(def Mountain
  {:db/ident        :schema/Mountain,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A mountain, like Mount Whitney or Mount Everest.",
   :rdfs/label      "Mountain",
   :rdfs/subClassOf :schema/Landform})

(def MoveAction
  {:db/ident :schema/MoveAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of an agent relocating to a place.\\n\\nRelated actions:\\n\\n* [[TransferAction]]: Unlike TransferAction, the subject of the move is a living Person or Organization rather than an inanimate object.",
   :rdfs/label "MoveAction",
   :rdfs/subClassOf :schema/Action})

(def Movie
  {:db/ident        :schema/Movie,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A movie.",
   :rdfs/label      "Movie",
   :rdfs/subClassOf :schema/CreativeWork})

(def MovieClip
  {:db/ident        :schema/MovieClip,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A short segment/part of a movie.",
   :rdfs/label      "MovieClip",
   :rdfs/subClassOf :schema/Clip})

(def MovieRentalStore
  {:db/ident        :schema/MovieRentalStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A movie rental store.",
   :rdfs/label      "MovieRentalStore",
   :rdfs/subClassOf :schema/Store})

(def MovieSeries
  {:db/ident :schema/MovieSeries,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A series of movies. Included movies can be indicated with the hasPart property.",
   :rdfs/label "MovieSeries",
   :rdfs/subClassOf :schema/CreativeWorkSeries})

(def MovieTheater
  {:db/ident        :schema/MovieTheater,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A movie theater.",
   :rdfs/label      "MovieTheater",
   :rdfs/subClassOf #{:schema/EntertainmentBusiness :schema/CivicStructure}})

(def MovingCompany
  {:db/ident        :schema/MovingCompany,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A moving company.",
   :rdfs/label      "MovingCompany",
   :rdfs/subClassOf :schema/HomeAndConstructionBusiness})

(def MultiCenterTrial
  {:db/ident        :schema/MultiCenterTrial,
   :rdf/type        :schema/MedicalTrialDesign,
   :rdfs/comment    "A trial that takes place at multiple centers.",
   :rdfs/label      "MultiCenterTrial",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MultiPlayer
  {:db/ident :schema/MultiPlayer,
   :rdf/type :schema/GamePlayMode,
   :rdfs/comment
   "Play mode: MultiPlayer. Requiring or allowing multiple human players to play simultaneously.",
   :rdfs/label "MultiPlayer"})

(def MulticellularParasite
  {:db/ident        :schema/MulticellularParasite,
   :rdf/type        :schema/InfectiousAgentClass,
   :rdfs/comment    "Multicellular parasite that causes an infection.",
   :rdfs/label      "MulticellularParasite",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Muscle
  {:db/ident :schema/Muscle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A muscle is an anatomical structure consisting of a contractile form of tissue that animals use to effect movement.",
   :rdfs/label "Muscle",
   :rdfs/subClassOf :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Musculoskeletal
  {:db/ident :schema/Musculoskeletal,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to diagnosis and treatment of disorders of muscles, ligaments and skeletal system.",
   :rdfs/label "Musculoskeletal",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def MusculoskeletalExam
  {:db/ident        :schema/MusculoskeletalExam,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Musculoskeletal system clinical examination.",
   :rdfs/label      "MusculoskeletalExam",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Museum
  {:db/ident        :schema/Museum,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A museum.",
   :rdfs/label      "Museum",
   :rdfs/subClassOf :schema/CivicStructure})

(def MusicAlbum
  {:db/ident        :schema/MusicAlbum,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A collection of music tracks.",
   :rdfs/label      "MusicAlbum",
   :rdfs/subClassOf :schema/MusicPlaylist})

(def MusicAlbumProductionType
  {:db/ident :schema/MusicAlbumProductionType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Classification of the album by its type of content: soundtrack, live album, studio album, etc.",
   :rdfs/label "MusicAlbumProductionType",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def MusicAlbumReleaseType
  {:db/ident :schema/MusicAlbumReleaseType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The kind of release which this album is: single, EP or album.",
   :rdfs/label "MusicAlbumReleaseType",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def MusicComposition
  {:db/ident           :schema/MusicComposition,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "A musical composition.",
   :rdfs/label         "MusicComposition",
   :rdfs/subClassOf    :schema/CreativeWork,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def MusicEvent
  {:db/ident        :schema/MusicEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Music event.",
   :rdfs/label      "MusicEvent",
   :rdfs/subClassOf :schema/Event})

(def MusicGroup
  {:db/ident :schema/MusicGroup,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A musical group, such as a band, an orchestra, or a choir. Can also be a solo musician.",
   :rdfs/label "MusicGroup",
   :rdfs/subClassOf :schema/PerformingGroup})

(def MusicPlaylist
  {:db/ident        :schema/MusicPlaylist,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A collection of music tracks in playlist form.",
   :rdfs/label      "MusicPlaylist",
   :rdfs/subClassOf :schema/CreativeWork})

(def MusicRecording
  {:db/ident        :schema/MusicRecording,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A music recording (track), usually a single song.",
   :rdfs/label      "MusicRecording",
   :rdfs/subClassOf :schema/CreativeWork})

(def MusicRelease
  {:db/ident           :schema/MusicRelease,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "A MusicRelease is a specific release of a music album.",
   :rdfs/label         "MusicRelease",
   :rdfs/subClassOf    :schema/MusicPlaylist,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def MusicReleaseFormatType
  {:db/ident :schema/MusicReleaseFormatType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Format of this release (the type of recording media used, i.e. compact disc, digital media, LP, etc.).",
   :rdfs/label "MusicReleaseFormatType",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def MusicStore
  {:db/ident        :schema/MusicStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A music store.",
   :rdfs/label      "MusicStore",
   :rdfs/subClassOf :schema/Store})

(def MusicVenue
  {:db/ident        :schema/MusicVenue,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A music venue.",
   :rdfs/label      "MusicVenue",
   :rdfs/subClassOf :schema/CivicStructure})

(def MusicVideoObject
  {:db/ident        :schema/MusicVideoObject,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A music video file.",
   :rdfs/label      "MusicVideoObject",
   :rdfs/subClassOf :schema/MediaObject})

(def NGO
  {:db/ident        :schema/NGO,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Organization: Non-governmental Organization.",
   :rdfs/label      "NGO",
   :rdfs/subClassOf :schema/Organization})

(def NLNonprofitType
  {:db/ident :schema/NLNonprofitType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "NLNonprofitType: Non-profit organization type originating from the Netherlands.",
   :rdfs/label "NLNonprofitType",
   :rdfs/subClassOf :schema/NonprofitType,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def NailSalon
  {:db/ident        :schema/NailSalon,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A nail salon.",
   :rdfs/label      "NailSalon",
   :rdfs/subClassOf :schema/HealthAndBeautyBusiness})

(def NarcoticConsideration
  {:db/ident :schema/NarcoticConsideration,
   :rdf/type :schema/AdultOrientedEnumeration,
   :rdfs/comment
   "Item is a narcotic as defined by the [1961 UN convention](https://www.incb.org/incb/en/narcotic-drugs/Yellowlist/yellow-list.html), for example marijuana or heroin.",
   :rdfs/label "NarcoticConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def Neck
  {:db/ident        :schema/Neck,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Neck assessment with clinical examination.",
   :rdfs/label      "Neck",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Nerve
  {:db/ident :schema/Nerve,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A common pathway for the electrochemical nerve impulses that are transmitted along each of the axons.",
   :rdfs/label "Nerve",
   :rdfs/subClassOf :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Neuro
  {:db/ident        :schema/Neuro,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Neurological system clinical examination.",
   :rdfs/label      "Neuro",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Neurologic
  {:db/ident :schema/Neurologic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that studies the nerves and nervous system and its respective disease states.",
   :rdfs/label "Neurologic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def NewCondition
  {:db/ident     :schema/NewCondition,
   :rdf/type     :schema/OfferItemCondition,
   :rdfs/comment "Indicates that the item is new.",
   :rdfs/label   "NewCondition"})

(def NewsArticle
  {:db/ident :schema/NewsArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A NewsArticle is an article whose content reports news, or provides background context and supporting materials for understanding the news.\n\nA more detailed overview of [schema.org News markup](/docs/news.html) is also available.\n",
   :rdfs/label "NewsArticle",
   :rdfs/subClassOf :schema/Article,
   :schema/contributor #{{:xsd/anyURI "http://schema.org/docs/collab/TP"}
                         {:xsd/anyURI "http://schema.org/docs/collab/rNews"}}})

(def NewsMediaOrganization
  {:db/ident :schema/NewsMediaOrganization,
   :rdf/type :rdfs/Class,
   :rdfs/comment "A News/Media organization such as a newspaper or TV station.",
   :rdfs/label "NewsMediaOrganization",
   :rdfs/subClassOf :schema/Organization,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def Newspaper
  {:db/ident :schema/Newspaper,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A publication containing information about varied topics that are pertinent to general information, a geographic area, or a specific subject matter (i.e. business, culture, education). Often published daily.",
   :rdfs/label "Newspaper",
   :rdfs/subClassOf :schema/Periodical,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/source {:xsd/anyURI "http://www.productontology.org/id/Newspaper"}})

(def NightClub
  {:db/ident        :schema/NightClub,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A nightclub or discotheque.",
   :rdfs/label      "NightClub",
   :rdfs/subClassOf :schema/EntertainmentBusiness})

(def NoninvasiveProcedure
  {:db/ident :schema/NoninvasiveProcedure,
   :rdf/type :schema/MedicalProcedureType,
   :rdfs/comment
   "A type of medical procedure that involves noninvasive techniques.",
   :rdfs/label "NoninvasiveProcedure",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Nonprofit501a
  {:db/ident :schema/Nonprofit501a,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501a: Non-profit type referring to Farmers’ Cooperative Associations.",
   :rdfs/label "Nonprofit501a",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c1
  {:db/ident :schema/Nonprofit501c1,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c1: Non-profit type referring to Corporations Organized Under Act of Congress, including Federal Credit Unions and National Farm Loan Associations.",
   :rdfs/label "Nonprofit501c1",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c10
  {:db/ident :schema/Nonprofit501c10,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c10: Non-profit type referring to Domestic Fraternal Societies and Associations.",
   :rdfs/label "Nonprofit501c10",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c11
  {:db/ident :schema/Nonprofit501c11,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c11: Non-profit type referring to Teachers' Retirement Fund Associations.",
   :rdfs/label "Nonprofit501c11",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c12
  {:db/ident :schema/Nonprofit501c12,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c12: Non-profit type referring to Benevolent Life Insurance Associations, Mutual Ditch or Irrigation Companies, Mutual or Cooperative Telephone Companies.",
   :rdfs/label "Nonprofit501c12",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c13
  {:db/ident :schema/Nonprofit501c13,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c13: Non-profit type referring to Cemetery Companies.",
   :rdfs/label "Nonprofit501c13",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c14
  {:db/ident :schema/Nonprofit501c14,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c14: Non-profit type referring to State-Chartered Credit Unions, Mutual Reserve Funds.",
   :rdfs/label "Nonprofit501c14",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c15
  {:db/ident :schema/Nonprofit501c15,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c15: Non-profit type referring to Mutual Insurance Companies or Associations.",
   :rdfs/label "Nonprofit501c15",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c16
  {:db/ident :schema/Nonprofit501c16,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c16: Non-profit type referring to Cooperative Organizations to Finance Crop Operations.",
   :rdfs/label "Nonprofit501c16",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c17
  {:db/ident :schema/Nonprofit501c17,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c17: Non-profit type referring to Supplemental Unemployment Benefit Trusts.",
   :rdfs/label "Nonprofit501c17",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c18
  {:db/ident :schema/Nonprofit501c18,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c18: Non-profit type referring to Employee Funded Pension Trust (created before 25 June 1959).",
   :rdfs/label "Nonprofit501c18",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c19
  {:db/ident :schema/Nonprofit501c19,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c19: Non-profit type referring to Post or Organization of Past or Present Members of the Armed Forces.",
   :rdfs/label "Nonprofit501c19",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c2
  {:db/ident :schema/Nonprofit501c2,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c2: Non-profit type referring to Title-holding Corporations for Exempt Organizations.",
   :rdfs/label "Nonprofit501c2",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c20
  {:db/ident :schema/Nonprofit501c20,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c20: Non-profit type referring to Group Legal Services Plan Organizations.",
   :rdfs/label "Nonprofit501c20",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c21
  {:db/ident :schema/Nonprofit501c21,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c21: Non-profit type referring to Black Lung Benefit Trusts.",
   :rdfs/label "Nonprofit501c21",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c22
  {:db/ident :schema/Nonprofit501c22,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c22: Non-profit type referring to Withdrawal Liability Payment Funds.",
   :rdfs/label "Nonprofit501c22",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c23
  {:db/ident :schema/Nonprofit501c23,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c23: Non-profit type referring to Veterans Organizations.",
   :rdfs/label "Nonprofit501c23",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c24
  {:db/ident :schema/Nonprofit501c24,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c24: Non-profit type referring to Section 4049 ERISA Trusts.",
   :rdfs/label "Nonprofit501c24",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c25
  {:db/ident :schema/Nonprofit501c25,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c25: Non-profit type referring to Real Property Title-Holding Corporations or Trusts with Multiple Parents.",
   :rdfs/label "Nonprofit501c25",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c26
  {:db/ident :schema/Nonprofit501c26,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c26: Non-profit type referring to State-Sponsored Organizations Providing Health Coverage for High-Risk Individuals.",
   :rdfs/label "Nonprofit501c26",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c27
  {:db/ident :schema/Nonprofit501c27,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c27: Non-profit type referring to State-Sponsored Workers' Compensation Reinsurance Organizations.",
   :rdfs/label "Nonprofit501c27",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c28
  {:db/ident :schema/Nonprofit501c28,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c28: Non-profit type referring to National Railroad Retirement Investment Trusts.",
   :rdfs/label "Nonprofit501c28",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c3
  {:db/ident :schema/Nonprofit501c3,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c3: Non-profit type referring to Religious, Educational, Charitable, Scientific, Literary, Testing for Public Safety, Fostering National or International Amateur Sports Competition, or Prevention of Cruelty to Children or Animals Organizations.",
   :rdfs/label "Nonprofit501c3",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c4
  {:db/ident :schema/Nonprofit501c4,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c4: Non-profit type referring to Civic Leagues, Social Welfare Organizations, and Local Associations of Employees.",
   :rdfs/label "Nonprofit501c4",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c5
  {:db/ident :schema/Nonprofit501c5,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c5: Non-profit type referring to Labor, Agricultural and Horticultural Organizations.",
   :rdfs/label "Nonprofit501c5",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c6
  {:db/ident :schema/Nonprofit501c6,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c6: Non-profit type referring to Business Leagues, Chambers of Commerce, Real Estate Boards.",
   :rdfs/label "Nonprofit501c6",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c7
  {:db/ident :schema/Nonprofit501c7,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c7: Non-profit type referring to Social and Recreational Clubs.",
   :rdfs/label "Nonprofit501c7",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c8
  {:db/ident :schema/Nonprofit501c8,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c8: Non-profit type referring to Fraternal Beneficiary Societies and Associations.",
   :rdfs/label "Nonprofit501c8",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501c9
  {:db/ident :schema/Nonprofit501c9,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501c9: Non-profit type referring to Voluntary Employee Beneficiary Associations.",
   :rdfs/label "Nonprofit501c9",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501d
  {:db/ident :schema/Nonprofit501d,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501d: Non-profit type referring to Religious and Apostolic Associations.",
   :rdfs/label "Nonprofit501d",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501e
  {:db/ident :schema/Nonprofit501e,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501e: Non-profit type referring to Cooperative Hospital Service Organizations.",
   :rdfs/label "Nonprofit501e",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501f
  {:db/ident :schema/Nonprofit501f,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501f: Non-profit type referring to Cooperative Service Organizations.",
   :rdfs/label "Nonprofit501f",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501k
  {:db/ident :schema/Nonprofit501k,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501k: Non-profit type referring to Child Care Organizations.",
   :rdfs/label "Nonprofit501k",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501n
  {:db/ident :schema/Nonprofit501n,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501n: Non-profit type referring to Charitable Risk Pools.",
   :rdfs/label "Nonprofit501n",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit501q
  {:db/ident :schema/Nonprofit501q,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit501q: Non-profit type referring to Credit Counseling Organizations.",
   :rdfs/label "Nonprofit501q",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nonprofit527
  {:db/ident :schema/Nonprofit527,
   :rdf/type :schema/USNonprofitType,
   :rdfs/comment
   "Nonprofit527: Non-profit type referring to political organizations.",
   :rdfs/label "Nonprofit527",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def NonprofitANBI
  {:db/ident :schema/NonprofitANBI,
   :rdf/type :schema/NLNonprofitType,
   :rdfs/comment
   "NonprofitANBI: Non-profit type referring to a Public Benefit Organization (NL).",
   :rdfs/label "NonprofitANBI",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def NonprofitSBBI
  {:db/ident :schema/NonprofitSBBI,
   :rdf/type :schema/NLNonprofitType,
   :rdfs/comment
   "NonprofitSBBI: Non-profit type referring to a Social Interest Promoting Institution (NL).",
   :rdfs/label "NonprofitSBBI",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def NonprofitType
  {:db/ident :schema/NonprofitType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "NonprofitType enumerates several kinds of official non-profit types of which a non-profit organization can be.",
   :rdfs/label "NonprofitType",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Nose
  {:db/ident        :schema/Nose,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Nose function assessment with clinical examination.",
   :rdfs/label      "Nose",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def NotInForce
  {:db/ident :schema/NotInForce,
   :rdf/type :schema/LegalForceStatus,
   :rdfs/comment "Indicates that a legislation is currently not in force.",
   :rdfs/label "NotInForce",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#InForce-notInForce"}})

(def NotYetRecruiting
  {:db/ident        :schema/NotYetRecruiting,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Not yet recruiting.",
   :rdfs/label      "NotYetRecruiting",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Notary
  {:db/ident        :schema/Notary,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A notary.",
   :rdfs/label      "Notary",
   :rdfs/subClassOf :schema/LegalService})

(def NoteDigitalDocument
  {:db/ident        :schema/NoteDigitalDocument,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A file containing a note, primarily for the author.",
   :rdfs/label      "NoteDigitalDocument",
   :rdfs/subClassOf :schema/DigitalDocument})

(def NumberClass
  {:db/ident :schema/Number,
   :rdf/type #{:schema/DataType :rdfs/Class},
   :rdfs/comment
   "Data type: Number.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
   :rdfs/label "Number"})

(def Nursing
  {:db/ident :schema/Nursing,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A health profession of a person formally educated and trained in the care of the sick or infirm person.",
   :rdfs/label "Nursing",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def NutritionInformation
  {:db/ident        :schema/NutritionInformation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Nutritional information about the recipe.",
   :rdfs/label      "NutritionInformation",
   :rdfs/subClassOf :schema/StructuredValue})

(def OTC
  {:db/ident :schema/OTC,
   :rdf/type :schema/DrugPrescriptionStatus,
   :rdfs/comment
   "The character of a medical substance, typically a medicine, of being available over the counter or not.",
   :rdfs/label "OTC",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Observation
  {:db/ident :schema/Observation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Instances of the class [[Observation]] are used to specify observations about an entity at a particular time. The principal properties of an [[Observation]] are [[observationAbout]], [[measuredProperty]], [[statType]], [[value] and [[observationDate]]  and [[measuredProperty]]. Some but not all Observations represent a [[QuantitativeValue]]. Quantitative observations can be about a [[StatisticalVariable]], which is an abstract specification about which we can make observations that are grounded at a particular location and time. \n    \nObservations can also encode a subset of simple RDF-like statements (its observationAbout, a StatisticalVariable, defining the measuredPoperty; its observationAbout property indicating the entity the statement is about, and [[value]] )\n\nIn the context of a quantitative knowledge graph, typical properties could include [[measuredProperty]], [[observationAbout]], [[observationDate]], [[value]], [[unitCode]], [[unitText]], [[measurementMethod]].\n    ",
   :rdfs/label "Observation",
   :rdfs/subClassOf #{:schema/QuantitativeValue :schema/Intangible},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2291"}})

(def Observational
  {:db/ident        :schema/Observational,
   :rdf/type        :schema/MedicalObservationalStudyDesign,
   :rdfs/comment    "An observational study design.",
   :rdfs/label      "Observational",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Obstetric
  {:db/ident :schema/Obstetric,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that specializes in the care of women during the prenatal and postnatal care and with the delivery of the child.",
   :rdfs/label "Obstetric",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Occupation
  {:db/ident :schema/Occupation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A profession, may involve prolonged training and/or a formal qualification.",
   :rdfs/label "Occupation",
   :rdfs/subClassOf :schema/Intangible,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def OccupationalActivity
  {:db/ident :schema/OccupationalActivity,
   :rdf/type :schema/PhysicalActivityCategory,
   :rdfs/comment
   "Any physical activity engaged in for job-related purposes. Examples may include waiting tables, maid service, carrying a mailbag, picking fruits or vegetables, construction work, etc.",
   :rdfs/label "OccupationalActivity",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def OccupationalExperienceRequirements
  {:db/ident :schema/OccupationalExperienceRequirements,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Indicates employment-related experience requirements, e.g. [[monthsOfExperience]].",
   :rdfs/label "OccupationalExperienceRequirements",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2681"}})

(def OccupationalTherapy
  {:db/ident :schema/OccupationalTherapy,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A treatment of people with physical, emotional, or social problems, using purposeful activity to help them overcome or learn to deal with their problems.",
   :rdfs/label "OccupationalTherapy",
   :rdfs/subClassOf :schema/MedicalTherapy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def OceanBodyOfWater
  {:db/ident        :schema/OceanBodyOfWater,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An ocean (for example, the Pacific).",
   :rdfs/label      "OceanBodyOfWater",
   :rdfs/subClassOf :schema/BodyOfWater})

(def Offer
  {:db/ident :schema/Offer,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An offer to transfer some rights to an item or to provide a service — for example, an offer to sell tickets to an event, to rent the DVD of a movie, to stream a TV show over the internet, to repair a motorcycle, or to loan a book.\\n\\nNote: As the [[businessFunction]] property, which identifies the form of offer (e.g. sell, lease, repair, dispose), defaults to http://purl.org/goodrelations/v1#Sell; an Offer without a defined businessFunction value can be assumed to be an offer to sell.\\n\\nFor [GTIN](http://www.gs1.org/barcodes/technical/idkeys/gtin)-related fields, see [Check Digit calculator](http://www.gs1.org/barcodes/support/check_digit_calculator) and [validation guide](http://www.gs1us.org/resources/standards/gtin-validation-guide) from [GS1](http://www.gs1.org/).",
   :rdfs/label "Offer",
   :rdfs/subClassOf :schema/Intangible,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"}})

(def OfferCatalog
  {:db/ident :schema/OfferCatalog,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An OfferCatalog is an ItemList that contains related Offers and/or further OfferCatalogs that are offeredBy the same provider.",
   :rdfs/label "OfferCatalog",
   :rdfs/subClassOf :schema/ItemList})

(def OfferForLease
  {:db/ident :schema/OfferForLease,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An [[OfferForLease]] in Schema.org represents an [[Offer]] to lease out something, i.e. an [[Offer]] whose\n  [[businessFunction]] is [lease out](http://purl.org/goodrelations/v1#LeaseOut.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for\n  background on the underlying concepts.\n  ",
   :rdfs/label "OfferForLease",
   :rdfs/subClassOf :schema/Offer,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2348"}})

(def OfferForPurchase
  {:db/ident :schema/OfferForPurchase,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An [[OfferForPurchase]] in Schema.org represents an [[Offer]] to sell something, i.e. an [[Offer]] whose\n  [[businessFunction]] is [sell](http://purl.org/goodrelations/v1#Sell.). See [Good Relations](https://en.wikipedia.org/wiki/GoodRelations) for\n  background on the underlying concepts.\n  ",
   :rdfs/label "OfferForPurchase",
   :rdfs/subClassOf :schema/Offer,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2348"}})

(def OfferItemCondition
  {:db/ident        :schema/OfferItemCondition,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A list of possible conditions for the item.",
   :rdfs/label      "OfferItemCondition",
   :rdfs/subClassOf :schema/Enumeration})

(def OfferShippingDetails
  {:db/ident :schema/OfferShippingDetails,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "OfferShippingDetails represents information about shipping destinations.\n\nMultiple of these entities can be used to represent different shipping rates for different destinations:\n\nOne entity for Alaska/Hawaii. A different one for continental US. A different one for all France.\n\nMultiple of these entities can be used to represent different shipping costs and delivery times.\n\nTwo entities that are identical but differ in rate and time:\n\nE.g. Cheaper and slower: $5 in 5-7 days\nor Fast and expensive: $15 in 1-2 days.",
   :rdfs/label "OfferShippingDetails",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def OfficeEquipmentStore
  {:db/ident        :schema/OfficeEquipmentStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An office equipment store.",
   :rdfs/label      "OfficeEquipmentStore",
   :rdfs/subClassOf :schema/Store})

(def OfficialLegalValue
  {:db/ident :schema/OfficialLegalValue,
   :rdf/type :schema/LegalValueLevel,
   :rdfs/comment
   "All the documents published by an official publisher should have at least the legal value level \"OfficialLegalValue\". This indicates that the document was published by an organisation with the public task of making it available (e.g. a consolidated version of an EU directive published by the EU Office of Publications).",
   :rdfs/label "OfficialLegalValue",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#LegalValue-official"}})

(def OfflineEventAttendanceMode
  {:db/ident :schema/OfflineEventAttendanceMode,
   :rdf/type :schema/EventAttendanceModeEnumeration,
   :rdfs/comment
   "OfflineEventAttendanceMode - an event that is primarily conducted offline. ",
   :rdfs/label "OfflineEventAttendanceMode",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1842"}})

(def OfflinePermanently
  {:db/ident :schema/OfflinePermanently,
   :rdf/type :schema/GameServerStatus,
   :rdfs/comment
   "Game server status: OfflinePermanently. Server is offline and not available.",
   :rdfs/label "OfflinePermanently"})

(def OfflineTemporarily
  {:db/ident :schema/OfflineTemporarily,
   :rdf/type :schema/GameServerStatus,
   :rdfs/comment
   "Game server status: OfflineTemporarily. Server is offline now but it can be online soon.",
   :rdfs/label "OfflineTemporarily"})

(def OnDemandEvent
  {:db/ident :schema/OnDemandEvent,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A publication event, e.g. catch-up TV or radio podcast, during which a program is available on-demand.",
   :rdfs/label "OnDemandEvent",
   :rdfs/subClassOf :schema/PublicationEvent})

(def OnSitePickup
  {:db/ident :schema/OnSitePickup,
   :rdf/type :schema/DeliveryMethod,
   :rdfs/comment
   "A DeliveryMethod in which an item is collected on site, e.g. in a store or at a box office.",
   :rdfs/label "OnSitePickup"})

(def Oncologic
  {:db/ident :schema/Oncologic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that deals with benign and malignant tumors, including the study of their development, diagnosis, treatment and prevention.",
   :rdfs/label "Oncologic",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def OneTimePayments
  {:db/ident :schema/OneTimePayments,
   :rdf/type :schema/GovernmentBenefitsType,
   :rdfs/comment
   "OneTimePayments: this is a benefit for one-time payments for individuals.",
   :rdfs/label "OneTimePayments",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def Online
  {:db/ident     :schema/Online,
   :rdf/type     :schema/GameServerStatus,
   :rdfs/comment "Game server status: Online. Server is available.",
   :rdfs/label   "Online"})

(def OnlineBusiness
  {:db/ident :schema/OnlineBusiness,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A particular online business, either standalone or the online part of a broader organization. Examples include an eCommerce site, an online travel booking site, an online learning site, an online logistics and shipping provider, an online (virtual) doctor, etc.",
   :rdfs/label "OnlineBusiness",
   :rdfs/subClassOf :schema/Organization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3028"}})

(def OnlineEventAttendanceMode
  {:db/ident :schema/OnlineEventAttendanceMode,
   :rdf/type :schema/EventAttendanceModeEnumeration,
   :rdfs/comment
   "OnlineEventAttendanceMode - an event that is primarily conducted online. ",
   :rdfs/label "OnlineEventAttendanceMode",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1842"}})

(def OnlineFull
  {:db/ident :schema/OnlineFull,
   :rdf/type :schema/GameServerStatus,
   :rdfs/comment
   "Game server status: OnlineFull. Server is online but unavailable. The maximum number of players has reached.",
   :rdfs/label "OnlineFull"})

(def OnlineOnly
  {:db/ident     :schema/OnlineOnly,
   :rdf/type     :schema/ItemAvailability,
   :rdfs/comment "Indicates that the item is available only online.",
   :rdfs/label   "OnlineOnly"})

(def OnlineStore
  {:db/ident        :schema/OnlineStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An eCommerce site.",
   :rdfs/label      "OnlineStore",
   :rdfs/subClassOf :schema/OnlineBusiness,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/3028"}})

(def OpenTrial
  {:db/ident :schema/OpenTrial,
   :rdf/type :schema/MedicalTrialDesign,
   :rdfs/comment
   "A trial design in which the researcher knows the full details of the treatment, and so does the patient.",
   :rdfs/label "OpenTrial",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def OpeningHoursSpecification
  {:db/ident :schema/OpeningHoursSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A structured value providing information about the opening hours of a place or a certain service inside a place.\\n\\n\nThe place is __open__ if the [[opens]] property is specified, and __closed__ otherwise.\\n\\nIf the value for the [[closes]] property is less than the value for the [[opens]] property then the hour range is assumed to span over the next day.\n      ",
   :rdfs/label "OpeningHoursSpecification",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def OpinionNewsArticle
  {:db/ident :schema/OpinionNewsArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An [[OpinionNewsArticle]] is a [[NewsArticle]] that primarily expresses opinions rather than journalistic reporting of news and events. For example, a [[NewsArticle]] consisting of a column or [[Blog]]/[[BlogPosting]] entry in the Opinions section of a news publication. ",
   :rdfs/label "OpinionNewsArticle",
   :rdfs/subClassOf :schema/NewsArticle,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def Optician
  {:db/ident :schema/Optician,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A store that sells reading glasses and similar devices for improving vision.",
   :rdfs/label "Optician",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Optometric
  {:db/ident :schema/Optometric,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "The science or practice of testing visual acuity and prescribing corrective lenses.",
   :rdfs/label "Optometric",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Order
  {:db/ident :schema/Order,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An order is a confirmation of a transaction (a receipt), which can contain multiple line items, each represented by an Offer that has been accepted by the customer.",
   :rdfs/label "Order",
   :rdfs/subClassOf :schema/Intangible})

(def OrderAction
  {:db/ident :schema/OrderAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An agent orders an object/product/service to be delivered/sent.",
   :rdfs/label "OrderAction",
   :rdfs/subClassOf :schema/TradeAction})

(def OrderCancelled
  {:db/ident     :schema/OrderCancelled,
   :rdf/type     :schema/OrderStatus,
   :rdfs/comment "OrderStatus representing cancellation of an order.",
   :rdfs/label   "OrderCancelled"})

(def OrderDelivered
  {:db/ident     :schema/OrderDelivered,
   :rdf/type     :schema/OrderStatus,
   :rdfs/comment "OrderStatus representing successful delivery of an order.",
   :rdfs/label   "OrderDelivered"})

(def OrderInTransit
  {:db/ident     :schema/OrderInTransit,
   :rdf/type     :schema/OrderStatus,
   :rdfs/comment "OrderStatus representing that an order is in transit.",
   :rdfs/label   "OrderInTransit"})

(def OrderItem
  {:db/ident :schema/OrderItem,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An order item is a line of an order. It includes the quantity and shipping details of a bought offer.",
   :rdfs/label "OrderItem",
   :rdfs/subClassOf :schema/Intangible})

(def OrderPaymentDue
  {:db/ident     :schema/OrderPaymentDue,
   :rdf/type     :schema/OrderStatus,
   :rdfs/comment "OrderStatus representing that payment is due on an order.",
   :rdfs/label   "OrderPaymentDue"})

(def OrderPickupAvailable
  {:db/ident :schema/OrderPickupAvailable,
   :rdf/type :schema/OrderStatus,
   :rdfs/comment
   "OrderStatus representing availability of an order for pickup.",
   :rdfs/label "OrderPickupAvailable"})

(def OrderProblem
  {:db/ident :schema/OrderProblem,
   :rdf/type :schema/OrderStatus,
   :rdfs/comment
   "OrderStatus representing that there is a problem with the order.",
   :rdfs/label "OrderProblem"})

(def OrderProcessing
  {:db/ident     :schema/OrderProcessing,
   :rdf/type     :schema/OrderStatus,
   :rdfs/comment "OrderStatus representing that an order is being processed.",
   :rdfs/label   "OrderProcessing"})

(def OrderReturned
  {:db/ident     :schema/OrderReturned,
   :rdf/type     :schema/OrderStatus,
   :rdfs/comment "OrderStatus representing that an order has been returned.",
   :rdfs/label   "OrderReturned"})

(def OrderStatus
  {:db/ident        :schema/OrderStatus,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Enumerated status values for Order.",
   :rdfs/label      "OrderStatus",
   :rdfs/subClassOf :schema/StatusEnumeration})

(def Organization
  {:db/ident :schema/Organization,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An organization such as a school, NGO, corporation, club, etc.",
   :rdfs/label "Organization",
   :rdfs/subClassOf :schema/Thing})

(def OrganizationRole
  {:db/ident :schema/OrganizationRole,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A subclass of Role used to describe roles within organizations.",
   :rdfs/label "OrganizationRole",
   :rdfs/subClassOf :schema/Role})

(def OrganizeAction
  {:db/ident :schema/OrganizeAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of manipulating/administering/supervising/controlling one or more objects.",
   :rdfs/label "OrganizeAction",
   :rdfs/subClassOf :schema/Action})

(def OriginalMediaContent
  {:db/ident :schema/OriginalMediaContent,
   :rdf/type :schema/MediaManipulationRatingEnumeration,
   :rdfs/comment
   "Content coded 'as original media content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'original': No evidence the footage has been misleadingly altered or manipulated, though it may contain false or misleading claims.\n\nFor an [[ImageObject]] to be 'original': No evidence the image has been misleadingly altered or manipulated, though it may still contain false or misleading claims.\n\nFor an [[ImageObject]] with embedded text to be 'original': No evidence the image has been misleadingly altered or manipulated, though it may still contain false or misleading claims.\n\nFor an [[AudioObject]] to be 'original': No evidence the audio has been misleadingly altered or manipulated, though it may contain false or misleading claims.\n",
   :rdfs/label "OriginalMediaContent",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def OriginalShippingFees
  {:db/ident :schema/OriginalShippingFees,
   :rdf/type :schema/ReturnFeesEnumeration,
   :rdfs/comment
   "Specifies that the customer must pay the original shipping costs when returning a product.",
   :rdfs/label "OriginalShippingFees",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def Osteopathic
  {:db/ident :schema/Osteopathic,
   :rdf/type :schema/MedicineSystem,
   :rdfs/comment
   "A system of medicine focused on promoting the body's innate ability to heal itself.",
   :rdfs/label "Osteopathic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Otolaryngologic
  {:db/ident :schema/Otolaryngologic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that is concerned with the ear, nose and throat and their respective disease states.",
   :rdfs/label "Otolaryngologic",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def OutOfStock
  {:db/ident     :schema/OutOfStock,
   :rdf/type     :schema/ItemAvailability,
   :rdfs/comment "Indicates that the item is out of stock.",
   :rdfs/label   "OutOfStock"})

(def OutletStore
  {:db/ident        :schema/OutletStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An outlet store.",
   :rdfs/label      "OutletStore",
   :rdfs/subClassOf :schema/Store})

(def OverviewHealthAspect
  {:db/ident :schema/OverviewHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Overview of the content. Contains a summarized view of the topic with the most relevant information for an introduction.",
   :rdfs/label "OverviewHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def OwnershipInfo
  {:db/ident :schema/OwnershipInfo,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A structured value providing information about when a certain organization or person owned a certain product.",
   :rdfs/label "OwnershipInfo",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def PET
  {:db/ident        :schema/PET,
   :rdf/type        :schema/MedicalImagingTechnique,
   :rdfs/comment    "Positron emission tomography imaging.",
   :rdfs/label      "PET",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PaidLeave
  {:db/ident        :schema/PaidLeave,
   :rdf/type        :schema/GovernmentBenefitsType,
   :rdfs/comment    "PaidLeave: this is a benefit for paid leave.",
   :rdfs/label      "PaidLeave",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def PaintAction
  {:db/ident :schema/PaintAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of producing a painting, typically with paint and canvas as instruments.",
   :rdfs/label "PaintAction",
   :rdfs/subClassOf :schema/CreateAction})

(def Painting
  {:db/ident        :schema/Painting,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A painting.",
   :rdfs/label      "Painting",
   :rdfs/subClassOf :schema/CreativeWork})

(def PalliativeProcedure
  {:db/ident :schema/PalliativeProcedure,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A medical procedure intended primarily for palliative purposes, aimed at relieving the symptoms of an underlying health condition.",
   :rdfs/label "PalliativeProcedure",
   :rdfs/subClassOf #{:schema/MedicalProcedure :schema/MedicalTherapy},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Paperback
  {:db/ident     :schema/Paperback,
   :rdf/type     :schema/BookFormatType,
   :rdfs/comment "Book format: Paperback.",
   :rdfs/label   "Paperback"})

(def ParcelDelivery
  {:db/ident :schema/ParcelDelivery,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The delivery of a parcel either via the postal service or a commercial service.",
   :rdfs/label "ParcelDelivery",
   :rdfs/subClassOf :schema/Intangible})

(def ParcelService
  {:db/ident :schema/ParcelService,
   :rdf/type :schema/DeliveryMethod,
   :rdfs/comment
   "A private parcel service as the delivery mode available for a certain offer.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#DHL\\n* http://purl.org/goodrelations/v1#FederalExpress\\n* http://purl.org/goodrelations/v1#UPS\n      ",
   :rdfs/label "ParcelService",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def ParentAudience
  {:db/ident :schema/ParentAudience,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A set of characteristics describing parents, who can be interested in viewing some content.",
   :rdfs/label "ParentAudience",
   :rdfs/subClassOf :schema/PeopleAudience})

(def ParentalSupport
  {:db/ident        :schema/ParentalSupport,
   :rdf/type        :schema/GovernmentBenefitsType,
   :rdfs/comment    "ParentalSupport: this is a benefit for parental support.",
   :rdfs/label      "ParentalSupport",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def Park
  {:db/ident        :schema/Park,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A park.",
   :rdfs/label      "Park",
   :rdfs/subClassOf :schema/CivicStructure})

(def ParkingFacility
  {:db/ident        :schema/ParkingFacility,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A parking lot or other parking facility.",
   :rdfs/label      "ParkingFacility",
   :rdfs/subClassOf :schema/CivicStructure})

(def ParkingMap
  {:db/ident     :schema/ParkingMap,
   :rdf/type     :schema/MapCategoryType,
   :rdfs/comment "A parking map.",
   :rdfs/label   "ParkingMap"})

(def PartiallyInForce
  {:db/ident :schema/PartiallyInForce,
   :rdf/type :schema/LegalForceStatus,
   :rdfs/comment
   "Indicates that parts of the legislation are in force, and parts are not.",
   :rdfs/label "PartiallyInForce",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch
   {:xsd/anyURI "http://data.europa.eu/eli/ontology#InForce-partiallyInForce"}})

(def Pathology
  {:db/ident :schema/Pathology,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that is concerned with the study of the cause, origin and nature of a disease state, including its consequences as a result of manifestation of the disease. In clinical care, the term is used to designate a branch of medicine using laboratory tests to diagnose and determine the prognostic significance of illness.",
   :rdfs/label "Pathology",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PathologyTest
  {:db/ident :schema/PathologyTest,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A medical test performed by a laboratory that typically involves examination of a tissue sample by a pathologist.",
   :rdfs/label "PathologyTest",
   :rdfs/subClassOf :schema/MedicalTest,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Patient
  {:db/ident :schema/Patient,
   :owl/equivalentClass
   {:xsd/anyURI "http://purl.bioontology.org/ontology/SNOMEDCT/116154003"},
   :rdf/type :rdfs/Class,
   :rdfs/comment "A patient is any person recipient of health care services.",
   :rdfs/label "Patient",
   :rdfs/subClassOf #{:schema/MedicalAudience :schema/Person},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PatientExperienceHealthAspect
  {:db/ident :schema/PatientExperienceHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Content about the real life experience of patients or people that have lived a similar experience about the topic. May be forums, topics, Q-and-A and related material.",
   :rdfs/label "PatientExperienceHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def PawnShop
  {:db/ident :schema/PawnShop,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A shop that will buy, or lend money against the security of, personal possessions.",
   :rdfs/label "PawnShop",
   :rdfs/subClassOf :schema/Store})

(def PayAction
  {:db/ident        :schema/PayAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An agent pays a price to a participant.",
   :rdfs/label      "PayAction",
   :rdfs/subClassOf :schema/TradeAction})

(def PaymentAutomaticallyApplied
  {:db/ident     :schema/PaymentAutomaticallyApplied,
   :rdf/type     :schema/PaymentStatusType,
   :rdfs/comment "An automatic payment system is in place and will be used.",
   :rdfs/label   "PaymentAutomaticallyApplied"})

(def PaymentCard
  {:db/ident :schema/PaymentCard,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A payment method using a credit, debit, store or other card to associate the payment with an account.",
   :rdfs/label "PaymentCard",
   :rdfs/subClassOf #{:schema/FinancialProduct :schema/PaymentMethod},
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}})

(def PaymentChargeSpecification
  {:db/ident :schema/PaymentChargeSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The costs of settling the payment using a particular payment method.",
   :rdfs/label "PaymentChargeSpecification",
   :rdfs/subClassOf :schema/PriceSpecification,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def PaymentComplete
  {:db/ident     :schema/PaymentComplete,
   :rdf/type     :schema/PaymentStatusType,
   :rdfs/comment "The payment has been received and processed.",
   :rdfs/label   "PaymentComplete"})

(def PaymentDeclined
  {:db/ident :schema/PaymentDeclined,
   :rdf/type :schema/PaymentStatusType,
   :rdfs/comment
   "The payee received the payment, but it was declined for some reason.",
   :rdfs/label "PaymentDeclined"})

(def PaymentDue
  {:db/ident :schema/PaymentDue,
   :rdf/type :schema/PaymentStatusType,
   :rdfs/comment
   "The payment is due, but still within an acceptable time to be received.",
   :rdfs/label "PaymentDue"})

(def PaymentMethod
  {:db/ident :schema/PaymentMethod,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A payment method is a standardized procedure for transferring the monetary amount for a purchase. Payment methods are characterized by the legal and technical structures used, and by the organization or group carrying out the transaction.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#ByBankTransferInAdvance\\n* http://purl.org/goodrelations/v1#ByInvoice\\n* http://purl.org/goodrelations/v1#Cash\\n* http://purl.org/goodrelations/v1#CheckInAdvance\\n* http://purl.org/goodrelations/v1#COD\\n* http://purl.org/goodrelations/v1#DirectDebit\\n* http://purl.org/goodrelations/v1#GoogleCheckout\\n* http://purl.org/goodrelations/v1#PayPal\\n* http://purl.org/goodrelations/v1#PaySwarm\n        ",
   :rdfs/label "PaymentMethod",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def PaymentPastDue
  {:db/ident     :schema/PaymentPastDue,
   :rdf/type     :schema/PaymentStatusType,
   :rdfs/comment "The payment is due and considered late.",
   :rdfs/label   "PaymentPastDue"})

(def PaymentService
  {:db/ident :schema/PaymentService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A Service to transfer funds from a person or organization to a beneficiary person or organization.",
   :rdfs/label "PaymentService",
   :rdfs/subClassOf :schema/FinancialProduct,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}})

(def PaymentStatusType
  {:db/ident :schema/PaymentStatusType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A specific payment status. For example, PaymentDue, PaymentComplete, etc.",
   :rdfs/label "PaymentStatusType",
   :rdfs/subClassOf :schema/StatusEnumeration})

(def Pediatric
  {:db/ident :schema/Pediatric,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that specializes in the care of infants, children and adolescents.",
   :rdfs/label "Pediatric",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PeopleAudience
  {:db/ident :schema/PeopleAudience,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A set of characteristics belonging to people, e.g. who compose an item's target audience.",
   :rdfs/label "PeopleAudience",
   :rdfs/subClassOf :schema/Audience})

(def PercutaneousProcedure
  {:db/ident :schema/PercutaneousProcedure,
   :rdf/type :schema/MedicalProcedureType,
   :rdfs/comment
   "A type of medical procedure that involves percutaneous techniques, where access to organs or tissue is achieved via needle-puncture of the skin. For example, catheter-based procedures like stent delivery.",
   :rdfs/label "PercutaneousProcedure",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PerformAction
  {:db/ident        :schema/PerformAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of participating in performance arts.",
   :rdfs/label      "PerformAction",
   :rdfs/subClassOf :schema/PlayAction})

(def PerformanceRole
  {:db/ident :schema/PerformanceRole,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A PerformanceRole is a Role that some entity places with regard to a theatrical performance, e.g. in a Movie, TVSeries etc.",
   :rdfs/label "PerformanceRole",
   :rdfs/subClassOf :schema/Role})

(def PerformingArtsTheater
  {:db/ident        :schema/PerformingArtsTheater,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A theater or other performing art center.",
   :rdfs/label      "PerformingArtsTheater",
   :rdfs/subClassOf :schema/CivicStructure})

(def PerformingGroup
  {:db/ident :schema/PerformingGroup,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A performance group, such as a band, an orchestra, or a circus.",
   :rdfs/label "PerformingGroup",
   :rdfs/subClassOf :schema/Organization})

(def Periodical
  {:db/ident :schema/Periodical,
   :owl/equivalentClass :bibo/Periodical,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A publication in any medium issued in successive parts bearing numerical or chronological designations and intended to continue indefinitely, such as a magazine, scholarly journal, or newspaper.\\n\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).",
   :rdfs/label "Periodical",
   :rdfs/subClassOf :schema/CreativeWorkSeries,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"}})

(def Permit
  {:db/ident        :schema/Permit,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A permit issued by an organization, e.g. a parking pass.",
   :rdfs/label      "Permit",
   :rdfs/subClassOf :schema/Intangible})

(def Person
  {:db/ident            :schema/Person,
   :owl/equivalentClass :foaf/Person,
   :rdf/type            :rdfs/Class,
   :rdfs/comment        "A person (alive, dead, undead, or fictional).",
   :rdfs/label          "Person",
   :rdfs/subClassOf     :schema/Thing,
   :schema/contributor  {:xsd/anyURI "http://schema.org/docs/collab/rNews"}})

(def PetStore
  {:db/ident        :schema/PetStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A pet store.",
   :rdfs/label      "PetStore",
   :rdfs/subClassOf :schema/Store})

(def Pharmacy
  {:db/ident        :schema/Pharmacy,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A pharmacy or drugstore.",
   :rdfs/label      "Pharmacy",
   :rdfs/subClassOf #{:schema/MedicalBusiness :schema/MedicalOrganization}})

(def PharmacySpecialty
  {:db/ident :schema/PharmacySpecialty,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "The practice or art and science of preparing and dispensing drugs and medicines.",
   :rdfs/label "PharmacySpecialty",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Photograph
  {:db/ident        :schema/Photograph,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A photograph.",
   :rdfs/label      "Photograph",
   :rdfs/subClassOf :schema/CreativeWork})

(def PhotographAction
  {:db/ident :schema/PhotographAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment "The act of capturing still images of objects using a camera.",
   :rdfs/label "PhotographAction",
   :rdfs/subClassOf :schema/CreateAction})

(def PhysicalActivity
  {:db/ident :schema/PhysicalActivity,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any bodily activity that enhances or maintains physical fitness and overall health and wellness. Includes activity that is part of daily living and routine, structured exercise, and exercise prescribed as part of a medical treatment or recovery plan.",
   :rdfs/label "PhysicalActivity",
   :rdfs/subClassOf :schema/LifestyleModification,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PhysicalActivityCategory
  {:db/ident :schema/PhysicalActivityCategory,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Categories of physical activity, organized by physiologic classification.",
   :rdfs/label "PhysicalActivityCategory",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PhysicalExam
  {:db/ident :schema/PhysicalExam,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A type of physical examination of a patient performed by a physician. ",
   :rdfs/label "PhysicalExam",
   :rdfs/subClassOf #{:schema/MedicalProcedure :schema/MedicalEnumeration},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PhysicalTherapy
  {:db/ident :schema/PhysicalTherapy,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A process of progressive physical care and rehabilitation aimed at improving a health condition.",
   :rdfs/label "PhysicalTherapy",
   :rdfs/subClassOf :schema/MedicalTherapy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Physician
  {:db/ident        :schema/Physician,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A doctor's office.",
   :rdfs/label      "Physician",
   :rdfs/subClassOf #{:schema/MedicalBusiness :schema/MedicalOrganization}})

(def Physiotherapy
  {:db/ident :schema/Physiotherapy,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "The practice of treatment of disease, injury, or deformity by physical methods such as massage, heat treatment, and exercise rather than by drugs or surgery.",
   :rdfs/label "Physiotherapy",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Place
  {:db/ident        :schema/Place,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Entities that have a somewhat fixed, physical extension.",
   :rdfs/label      "Place",
   :rdfs/subClassOf :schema/Thing})

(def PlaceOfWorship
  {:db/ident        :schema/PlaceOfWorship,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Place of worship, such as a church, synagogue, or mosque.",
   :rdfs/label      "PlaceOfWorship",
   :rdfs/subClassOf :schema/CivicStructure})

(def PlaceboControlledTrial
  {:db/ident        :schema/PlaceboControlledTrial,
   :rdf/type        :schema/MedicalTrialDesign,
   :rdfs/comment    "A placebo-controlled trial design.",
   :rdfs/label      "PlaceboControlledTrial",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PlanAction
  {:db/ident :schema/PlanAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of planning the execution of an event/task/action/reservation/plan to a future date.",
   :rdfs/label "PlanAction",
   :rdfs/subClassOf :schema/OrganizeAction})

(def PlasticSurgery
  {:db/ident :schema/PlasticSurgery,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to therapeutic or cosmetic repair or re-formation of missing, injured or malformed tissues or body parts by manual and instrumental means.",
   :rdfs/label "PlasticSurgery",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Play
  {:db/ident :schema/Play,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A play is a form of literature, usually consisting of dialogue between characters, intended for theatrical performance rather than just reading. Note: A performance of a Play would be a [[TheaterEvent]] or [[BroadcastEvent]] - the *Play* being the [[workPerformed]].",
   :rdfs/label "Play",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1816"}})

(def PlayAction
  {:db/ident :schema/PlayAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of playing/exercising/training/performing for enjoyment, leisure, recreation, competition or exercise.\\n\\nRelated actions:\\n\\n* [[ListenAction]]: Unlike ListenAction (which is under ConsumeAction), PlayAction refers to performing for an audience or at an event, rather than consuming music.\\n* [[WatchAction]]: Unlike WatchAction (which is under ConsumeAction), PlayAction refers to showing/displaying for an audience or at an event, rather than consuming visual content.",
   :rdfs/label "PlayAction",
   :rdfs/subClassOf :schema/Action})

(def PlayGameAction
  {:db/ident        :schema/PlayGameAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of playing a video game.",
   :rdfs/label      "PlayGameAction",
   :rdfs/subClassOf :schema/ConsumeAction,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/3058"}})

(def Playground
  {:db/ident        :schema/Playground,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A playground.",
   :rdfs/label      "Playground",
   :rdfs/subClassOf :schema/CivicStructure})

(def Plumber
  {:db/ident        :schema/Plumber,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A plumbing service.",
   :rdfs/label      "Plumber",
   :rdfs/subClassOf :schema/HomeAndConstructionBusiness})

(def PodcastEpisode
  {:db/ident        :schema/PodcastEpisode,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A single episode of a podcast series.",
   :rdfs/label      "PodcastEpisode",
   :rdfs/subClassOf :schema/Episode,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/373"}})

(def PodcastSeason
  {:db/ident :schema/PodcastSeason,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A single season of a podcast. Many podcasts do not break down into separate seasons. In that case, PodcastSeries should be used.",
   :rdfs/label "PodcastSeason",
   :rdfs/subClassOf :schema/CreativeWorkSeason,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/373"}})

(def PodcastSeries
  {:db/ident :schema/PodcastSeries,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A podcast is an episodic series of digital audio or video files which a user can download and listen to.",
   :rdfs/label "PodcastSeries",
   :rdfs/subClassOf :schema/CreativeWorkSeries,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/373"}})

(def Podiatric
  {:db/ident :schema/Podiatric,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "Podiatry is the care of the human foot, especially the diagnosis and treatment of foot disorders.",
   :rdfs/label "Podiatric",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PoliceStation
  {:db/ident        :schema/PoliceStation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A police station.",
   :rdfs/label      "PoliceStation",
   :rdfs/subClassOf #{:schema/EmergencyService :schema/CivicStructure}})

(def PoliticalParty
  {:db/ident        :schema/PoliticalParty,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Organization: Political Party.",
   :rdfs/label      "PoliticalParty",
   :rdfs/subClassOf :schema/Organization,
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/3282"}})

(def Pond
  {:db/ident        :schema/Pond,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A pond.",
   :rdfs/label      "Pond",
   :rdfs/subClassOf :schema/BodyOfWater})

(def PostOffice
  {:db/ident        :schema/PostOffice,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A post office.",
   :rdfs/label      "PostOffice",
   :rdfs/subClassOf :schema/GovernmentOffice})

(def PostalAddress
  {:db/ident        :schema/PostalAddress,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The mailing address.",
   :rdfs/label      "PostalAddress",
   :rdfs/subClassOf :schema/ContactPoint})

(def PostalCodeRangeSpecification
  {:db/ident :schema/PostalCodeRangeSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Indicates a range of postal codes, usually defined as the set of valid codes between [[postalCodeBegin]] and [[postalCodeEnd]], inclusively.",
   :rdfs/label "PostalCodeRangeSpecification",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def Poster
  {:db/ident :schema/Poster,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A large, usually printed placard, bill, or announcement, often illustrated, that is posted to advertise or publicize something.",
   :rdfs/label "Poster",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1448"}})

(def PotentialActionStatus
  {:db/ident     :schema/PotentialActionStatus,
   :rdf/type     :schema/ActionStatusType,
   :rdfs/comment "A description of an action that is supported.",
   :rdfs/label   "PotentialActionStatus"})

(def PreOrder
  {:db/ident     :schema/PreOrder,
   :rdf/type     :schema/ItemAvailability,
   :rdfs/comment "Indicates that the item is available for pre-order.",
   :rdfs/label   "PreOrder"})

(def PreOrderAction
  {:db/ident :schema/PreOrderAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An agent orders a (not yet released) object/product/service to be delivered/sent.",
   :rdfs/label "PreOrderAction",
   :rdfs/subClassOf :schema/TradeAction,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1125"}})

(def PreSale
  {:db/ident :schema/PreSale,
   :rdf/type :schema/ItemAvailability,
   :rdfs/comment
   "Indicates that the item is available for ordering and delivery before general availability.",
   :rdfs/label "PreSale"})

(def PregnancyHealthAspect
  {:db/ident :schema/PregnancyHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Content discussing pregnancy-related aspects of a health topic.",
   :rdfs/label "PregnancyHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2799"}})

(def PrependAction
  {:db/ident :schema/PrependAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of inserting at the beginning if an ordered collection.",
   :rdfs/label "PrependAction",
   :rdfs/subClassOf :schema/InsertAction})

(def Preschool
  {:db/ident        :schema/Preschool,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A preschool.",
   :rdfs/label      "Preschool",
   :rdfs/subClassOf :schema/EducationalOrganization})

(def PrescriptionOnly
  {:db/ident        :schema/PrescriptionOnly,
   :rdf/type        :schema/DrugPrescriptionStatus,
   :rdfs/comment    "Available by prescription only.",
   :rdfs/label      "PrescriptionOnly",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PresentationDigitalDocument
  {:db/ident        :schema/PresentationDigitalDocument,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A file containing slides or used for a presentation.",
   :rdfs/label      "PresentationDigitalDocument",
   :rdfs/subClassOf :schema/DigitalDocument})

(def PreventionHealthAspect
  {:db/ident :schema/PreventionHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Information about actions or measures that can be taken to avoid getting the topic or reaching a critical situation related to the topic.",
   :rdfs/label "PreventionHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def PreventionIndication
  {:db/ident :schema/PreventionIndication,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An indication for preventing an underlying condition, symptom, etc.",
   :rdfs/label "PreventionIndication",
   :rdfs/subClassOf :schema/MedicalIndication,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PriceComponentTypeEnumeration
  {:db/ident :schema/PriceComponentTypeEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates different price components that together make up the total price for an offered product.",
   :rdfs/label "PriceComponentTypeEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def PriceSpecification
  {:db/ident :schema/PriceSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A structured value representing a price or price range. Typically, only the subclasses of this type are used for markup. It is recommended to use [[MonetaryAmount]] to describe independent amounts of money such as a salary, credit card limits, etc.",
   :rdfs/label "PriceSpecification",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def PriceTypeEnumeration
  {:db/ident :schema/PriceTypeEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates different price types, for example list price, invoice price, and sale price.",
   :rdfs/label "PriceTypeEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2712"}})

(def PrimaryCare
  {:db/ident :schema/PrimaryCare,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "The medical care by a physician, or other health-care professional, who is the patient's first contact with the health-care system and who may recommend a specialist if necessary.",
   :rdfs/label "PrimaryCare",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Prion
  {:db/ident :schema/Prion,
   :rdf/type :schema/InfectiousAgentClass,
   :rdfs/comment
   "A prion is an infectious agent composed of protein in a misfolded form.",
   :rdfs/label "Prion",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Product
  {:db/ident :schema/Product,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any offered product or service. For example: a pair of shoes; a concert ticket; the rental of a car; a haircut; or an episode of a TV show streamed online.",
   :rdfs/label "Product",
   :rdfs/subClassOf :schema/Thing,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"}})

(def ProductCollection
  {:db/ident :schema/ProductCollection,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A set of products (either [[ProductGroup]]s or specific variants) that are listed together e.g. in an [[Offer]].",
   :rdfs/label "ProductCollection",
   :rdfs/subClassOf #{:schema/Product :schema/Collection},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2597"}})

(def ProductGroup
  {:db/ident :schema/ProductGroup,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A ProductGroup represents a group of [[Product]]s that vary only in certain well-described ways, such as by [[size]], [[color]], [[material]] etc.\n\nWhile a ProductGroup itself is not directly offered for sale, the various varying products that it represents can be. The ProductGroup serves as a prototype or template, standing in for all of the products who have an [[isVariantOf]] relationship to it. As such, properties (including additional types) can be applied to the ProductGroup to represent characteristics shared by each of the (possibly very many) variants. Properties that reference a ProductGroup are not included in this mechanism; neither are the following specific properties [[variesBy]], [[hasVariant]], [[url]]. ",
   :rdfs/label "ProductGroup",
   :rdfs/subClassOf :schema/Product,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1797"}})

(def ProductModel
  {:db/ident :schema/ProductModel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A datasheet or vendor specification of a product (in the sense of a prototypical description).",
   :rdfs/label "ProductModel",
   :rdfs/subClassOf :schema/Product,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def ProfessionalService
  {:db/ident :schema/ProfessionalService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Original definition: \"provider of professional services.\"\\n\\nThe general [[ProfessionalService]] type for local businesses was deprecated due to confusion with [[Service]]. For reference, the types that it included were: [[Dentist]],\n        [[AccountingService]], [[Attorney]], [[Notary]], as well as types for several kinds of [[HomeAndConstructionBusiness]]: [[Electrician]], [[GeneralContractor]],\n        [[HousePainter]], [[Locksmith]], [[Plumber]], [[RoofingContractor]]. [[LegalService]] was introduced as a more inclusive supertype of [[Attorney]].",
   :rdfs/label "ProfessionalService",
   :rdfs/subClassOf :schema/LocalBusiness})

(def ProfilePage
  {:db/ident        :schema/ProfilePage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Web page type: Profile page.",
   :rdfs/label      "ProfilePage",
   :rdfs/subClassOf :schema/WebPage})

(def PrognosisHealthAspect
  {:db/ident :schema/PrognosisHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Typical progression and happenings of life course of the topic.",
   :rdfs/label "PrognosisHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def ProgramMembership
  {:db/ident :schema/ProgramMembership,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Used to describe membership in a loyalty programs (e.g. \"StarAliance\"), traveler clubs (e.g. \"AAA\"), purchase clubs (\"Safeway Club\"), etc.",
   :rdfs/label "ProgramMembership",
   :rdfs/subClassOf :schema/Intangible})

(def Project
  {:db/ident :schema/Project,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An enterprise (potentially individual but typically collaborative), planned to achieve a particular aim.\nUse properties from [[Organization]], [[subOrganization]]/[[parentOrganization]] to indicate project sub-structures. \n   ",
   :rdfs/label "Project",
   :rdfs/subClassOf :schema/Organization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/383"}
     {:xsd/anyURI "http://schema.org/docs/collab/FundInfoCollab"}}})

(def PronounceableText
  {:db/ident        :schema/PronounceableText,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Data type: PronounceableText.",
   :rdfs/label      "PronounceableText",
   :rdfs/subClassOf :schema/Text,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2108"}})

(def Property
  {:db/ident :schema/Property,
   :owl/equivalentClass :rdf/Property,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A property, used to indicate attributes and relationships of some Thing; equivalent to rdf:Property.",
   :rdfs/label "Property",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://meta.schema.org"}})

(def PropertyValue
  {:db/ident :schema/PropertyValue,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A property-value pair, e.g. representing a feature of a product or place. Use the 'name' property for the name of the property. If there is an additional human-readable version of the value, put that into the 'description' property.\\n\\n Always use specific schema.org properties when a) they exist and b) you can populate them. Using PropertyValue as a substitute will typically not trigger the same effect as using the original, specific property.\n    ",
   :rdfs/label "PropertyValue",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def PropertyValueSpecification
  {:db/ident           :schema/PropertyValueSpecification,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "A Property value specification.",
   :rdfs/label         "PropertyValueSpecification",
   :rdfs/subClassOf    :schema/Intangible,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/ActionCollabClass"}})

(def Protein
  {:db/ident :schema/Protein,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Protein is here used in its widest possible definition, as classes of amino acid based molecules. Amyloid-beta Protein in human (UniProt P05067), eukaryota (e.g. an OrthoDB group) or even a single molecule that one can point to are all of type :Protein. A protein can thus be a subclass of another protein, e.g. :Protein as a UniProt record can have multiple isoforms inside it which would also be :Protein. They can be imagined, synthetic, hypothetical or naturally occurring.",
   :rdfs/label "Protein",
   :rdfs/subClassOf :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI "http://bioschemas.org"}})

(def Protozoa
  {:db/ident        :schema/Protozoa,
   :rdf/type        :schema/InfectiousAgentClass,
   :rdfs/comment    "Single-celled organism that causes an infection.",
   :rdfs/label      "Protozoa",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Psychiatric
  {:db/ident :schema/Psychiatric,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that is concerned with the study, treatment, and prevention of mental illness, using both medical and psychological therapies.",
   :rdfs/label "Psychiatric",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PsychologicalTreatment
  {:db/ident :schema/PsychologicalTreatment,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A process of care relying upon counseling, dialogue and communication  aimed at improving a mental health condition without use of drugs.",
   :rdfs/label "PsychologicalTreatment",
   :rdfs/subClassOf :schema/TherapeuticProcedure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PublicHealth
  {:db/ident :schema/PublicHealth,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "Branch of medicine that pertains to the health services to improve and protect community health, especially epidemiology, sanitation, immunization, and preventive medicine.",
   :rdfs/label "PublicHealth",
   :rdfs/subClassOf :schema/MedicalBusiness,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def PublicHolidays
  {:db/ident :schema/PublicHolidays,
   :rdf/type :schema/DayOfWeek,
   :rdfs/comment
   "This stands for any day that is a public holiday; it is a placeholder for all official public holidays in some particular location. While not technically a \"day of the week\", it can be used with [[OpeningHoursSpecification]]. In the context of an opening hours specification it can be used to indicate opening hours on public holidays, overriding general opening hours for the day of the week on which a public holiday occurs.",
   :rdfs/label "PublicHolidays",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def PublicSwimmingPool
  {:db/ident        :schema/PublicSwimmingPool,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A public swimming pool.",
   :rdfs/label      "PublicSwimmingPool",
   :rdfs/subClassOf :schema/SportsActivityLocation})

(def PublicToilet
  {:db/ident :schema/PublicToilet,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A public toilet is a room or small building containing one or more toilets (and possibly also urinals) which is available for use by the general public, or by customers or employees of certain businesses.",
   :rdfs/label "PublicToilet",
   :rdfs/subClassOf :schema/CivicStructure,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1624"}})

(def PublicationEvent
  {:db/ident :schema/PublicationEvent,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A PublicationEvent corresponds indifferently to the event of publication for a CreativeWork of any type, e.g. a broadcast event, an on-demand event, a book/journal publication via a variety of delivery media.",
   :rdfs/label "PublicationEvent",
   :rdfs/subClassOf :schema/Event})

(def PublicationIssue
  {:db/ident :schema/PublicationIssue,
   :owl/equivalentClass :bibo/Issue,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A part of a successively published publication such as a periodical or publication volume, often numbered, usually containing a grouping of works such as articles.\\n\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).",
   :rdfs/label "PublicationIssue",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"}})

(def PublicationVolume
  {:db/ident :schema/PublicationVolume,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A part of a successively published publication such as a periodical or multi-volume work, often numbered. It may represent a time span, such as a year.\\n\\nSee also [blog post](http://blog.schema.org/2014/09/schemaorg-support-for-bibliographic_2.html).",
   :rdfs/label "PublicationVolume",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"}})

(def Pulmonary
  {:db/ident :schema/Pulmonary,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to the study of the respiratory system and its respective disease states.",
   :rdfs/label "Pulmonary",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def QAPage
  {:db/ident :schema/QAPage,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A QAPage is a WebPage focussed on a specific Question and its Answer(s), e.g. in a question answering site or documenting Frequently Asked Questions (FAQs).",
   :rdfs/label "QAPage",
   :rdfs/subClassOf :schema/WebPage})

(def QualitativeValue
  {:db/ident :schema/QualitativeValue,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A predefined value for a product characteristic, e.g. the power cord plug type 'US' or the garment sizes 'S', 'M', 'L', and 'XL'.",
   :rdfs/label "QualitativeValue",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def QuantitativeValue
  {:db/ident :schema/QuantitativeValue,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   " A point value or interval for product characteristics and other purposes.",
   :rdfs/label "QuantitativeValue",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def QuantitativeValueDistribution
  {:db/ident        :schema/QuantitativeValueDistribution,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A statistical distribution of values.",
   :rdfs/label      "QuantitativeValueDistribution",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def Quantity
  {:db/ident :schema/Quantity,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Quantities such as distance, time, mass, weight, etc. Particular instances of say Mass are entities like '3 kg' or '4 milligrams'.",
   :rdfs/label "Quantity",
   :rdfs/subClassOf :schema/Intangible})

(def Question
  {:db/ident :schema/Question,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A specific question - e.g. from a user seeking answers online, or collected in a Frequently Asked Questions (FAQ) document.",
   :rdfs/label "Question",
   :rdfs/subClassOf :schema/Comment,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/QAStackExchange"}})

(def Quiz
  {:db/ident        :schema/Quiz,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Quiz: A test of knowledge, skills and abilities.",
   :rdfs/label      "Quiz",
   :rdfs/subClassOf :schema/LearningResource,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2611"}})

(def Quotation
  {:db/ident :schema/Quotation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A quotation. Often but not necessarily from some written work, attributable to a real world author and - if associated with a fictional character - to any fictional Person. Use [[isBasedOn]] to link to source/origin. The [[recordedIn]] property can be used to reference a Quotation from an [[Event]].",
   :rdfs/label "Quotation",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/271"}})

(def QuoteAction
  {:db/ident :schema/QuoteAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An agent quotes/estimates/appraises an object/product/service with a price at a location/store.",
   :rdfs/label "QuoteAction",
   :rdfs/subClassOf :schema/TradeAction})

(def RVPark
  {:db/ident :schema/RVPark,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A place offering space for \"Recreational Vehicles\", Caravans, mobile homes and the like.",
   :rdfs/label "RVPark",
   :rdfs/subClassOf :schema/CivicStructure})

(def RadiationTherapy
  {:db/ident :schema/RadiationTherapy,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A process of care using radiation aimed at improving a health condition.",
   :rdfs/label "RadiationTherapy",
   :rdfs/subClassOf :schema/MedicalTherapy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def RadioBroadcastService
  {:db/ident :schema/RadioBroadcastService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A delivery service through which radio content is provided via broadcast over the air or online.",
   :rdfs/label "RadioBroadcastService",
   :rdfs/subClassOf :schema/BroadcastService,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2109"}})

(def RadioChannel
  {:db/ident :schema/RadioChannel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A unique instance of a radio BroadcastService on a CableOrSatelliteService lineup.",
   :rdfs/label "RadioChannel",
   :rdfs/subClassOf :schema/BroadcastChannel})

(def RadioClip
  {:db/ident :schema/RadioClip,
   :rdf/type :rdfs/Class,
   :rdfs/comment "A short radio program or a segment/part of a radio program.",
   :rdfs/label "RadioClip",
   :rdfs/subClassOf :schema/Clip})

(def RadioEpisode
  {:db/ident        :schema/RadioEpisode,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A radio episode which can be part of a series or season.",
   :rdfs/label      "RadioEpisode",
   :rdfs/subClassOf :schema/Episode})

(def RadioSeason
  {:db/ident :schema/RadioSeason,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Season dedicated to radio broadcast and associated online delivery.",
   :rdfs/label "RadioSeason",
   :rdfs/subClassOf :schema/CreativeWorkSeason})

(def RadioSeries
  {:db/ident :schema/RadioSeries,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "CreativeWorkSeries dedicated to radio broadcast and associated online delivery.",
   :rdfs/label "RadioSeries",
   :rdfs/subClassOf :schema/CreativeWorkSeries})

(def RadioStation
  {:db/ident        :schema/RadioStation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A radio station.",
   :rdfs/label      "RadioStation",
   :rdfs/subClassOf :schema/LocalBusiness})

(def Radiography
  {:db/ident :schema/Radiography,
   :rdf/type #{:schema/MedicalSpecialty :schema/MedicalImagingTechnique},
   :rdfs/comment
   "Radiography is an imaging technique that uses electromagnetic radiation other than visible light, especially X-rays, to view the internal structure of a non-uniformly composed and opaque object such as the human body.",
   :rdfs/label "Radiography",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def RandomizedTrial
  {:db/ident        :schema/RandomizedTrial,
   :rdf/type        :schema/MedicalTrialDesign,
   :rdfs/comment    "A randomized trial design.",
   :rdfs/label      "RandomizedTrial",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Rating
  {:db/ident :schema/Rating,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A rating is an evaluation on a numeric scale, such as 1 to 5 stars.",
   :rdfs/label "Rating",
   :rdfs/subClassOf :schema/Intangible})

(def ReactAction
  {:db/ident :schema/ReactAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of responding instinctively and emotionally to an object, expressing a sentiment.",
   :rdfs/label "ReactAction",
   :rdfs/subClassOf :schema/AssessAction})

(def ReadAction
  {:db/ident        :schema/ReadAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of consuming written content.",
   :rdfs/label      "ReadAction",
   :rdfs/subClassOf :schema/ConsumeAction})

(def ReadPermission
  {:db/ident     :schema/ReadPermission,
   :rdf/type     :schema/DigitalDocumentPermissionType,
   :rdfs/comment "Permission to read or view the document.",
   :rdfs/label   "ReadPermission"})

(def RealEstateAgent
  {:db/ident        :schema/RealEstateAgent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A real-estate agent.",
   :rdfs/label      "RealEstateAgent",
   :rdfs/subClassOf :schema/LocalBusiness})

(def RealEstateListing
  {:db/ident :schema/RealEstateListing,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[RealEstateListing]] is a listing that describes one or more real-estate [[Offer]]s (whose [[businessFunction]] is typically to lease out, or to sell).\n  The [[RealEstateListing]] type itself represents the overall listing, as manifested in some [[WebPage]].\n  ",
   :rdfs/label "RealEstateListing",
   :rdfs/subClassOf :schema/WebPage,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2348"}})

(def RearWheelDriveConfiguration
  {:db/ident :schema/RearWheelDriveConfiguration,
   :rdf/type :schema/DriveWheelConfigurationValue,
   :rdfs/comment
   "Real-wheel drive is a transmission layout where the engine drives the rear wheels.",
   :rdfs/label "RearWheelDriveConfiguration",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def ReceiveAction
  {:db/ident :schema/ReceiveAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of physically/electronically taking delivery of an object that has been transferred from an origin to a destination. Reciprocal of SendAction.\\n\\nRelated actions:\\n\\n* [[SendAction]]: The reciprocal of ReceiveAction.\\n* [[TakeAction]]: Unlike TakeAction, ReceiveAction does not imply that the ownership has been transferred (e.g. I can receive a package, but it does not mean the package is now mine).",
   :rdfs/label "ReceiveAction",
   :rdfs/subClassOf :schema/TransferAction})

(def Recipe
  {:db/ident :schema/Recipe,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A recipe. For dietary restrictions covered by the recipe, a few common restrictions are enumerated via [[suitableForDiet]]. The [[keywords]] property can also be used to add more detail.",
   :rdfs/label "Recipe",
   :rdfs/subClassOf :schema/HowTo})

(def Recommendation
  {:db/ident :schema/Recommendation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "[[Recommendation]] is a type of [[Review]] that suggests or proposes something as the best option or best course of action. Recommendations may be for products or services, or other concrete things, as in the case of a ranked list or product guide. A [[Guide]] may list multiple recommendations for different categories. For example, in a [[Guide]] about which TVs to buy, the author may have several [[Recommendation]]s.",
   :rdfs/label "Recommendation",
   :rdfs/subClassOf :schema/Review,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2405"}})

(def RecommendedDoseSchedule
  {:db/ident :schema/RecommendedDoseSchedule,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A recommended dosing schedule for a drug or supplement as prescribed or recommended by an authority or by the drug/supplement's manufacturer. Capture the recommending authority in the recognizingAuthority property of MedicalEntity.",
   :rdfs/label "RecommendedDoseSchedule",
   :rdfs/subClassOf :schema/DoseSchedule,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Recruiting
  {:db/ident        :schema/Recruiting,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Recruiting participants.",
   :rdfs/label      "Recruiting",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def RecyclingCenter
  {:db/ident        :schema/RecyclingCenter,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A recycling center.",
   :rdfs/label      "RecyclingCenter",
   :rdfs/subClassOf :schema/LocalBusiness})

(def ReducedRelevanceForChildrenConsideration
  {:db/ident :schema/ReducedRelevanceForChildrenConsideration,
   :rdf/type :schema/AdultOrientedEnumeration,
   :rdfs/comment
   "A general code for cases where relevance to children is reduced, e.g. adult education, mortgages, retirement-related products, etc.",
   :rdfs/label "ReducedRelevanceForChildrenConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def RefundTypeEnumeration
  {:db/ident        :schema/RefundTypeEnumeration,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Enumerates several kinds of product return refund types.",
   :rdfs/label      "RefundTypeEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def RefurbishedCondition
  {:db/ident     :schema/RefurbishedCondition,
   :rdf/type     :schema/OfferItemCondition,
   :rdfs/comment "Indicates that the item is refurbished.",
   :rdfs/label   "RefurbishedCondition"})

(def RegisterAction
  {:db/ident :schema/RegisterAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of registering to be a user of a service, product or web page.\\n\\nRelated actions:\\n\\n* [[JoinAction]]: Unlike JoinAction, RegisterAction implies you are registering to be a user of a service, *not* a group/team of people.\\n* [[FollowAction]]: Unlike FollowAction, RegisterAction doesn't imply that the agent is expecting to poll for updates from the object.\\n* [[SubscribeAction]]: Unlike SubscribeAction, RegisterAction doesn't imply that the agent is expecting updates from the object.",
   :rdfs/label "RegisterAction",
   :rdfs/subClassOf :schema/InteractAction})

(def Registry
  {:db/ident        :schema/Registry,
   :rdf/type        :schema/MedicalObservationalStudyDesign,
   :rdfs/comment    "A registry-based study design.",
   :rdfs/label      "Registry",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ReimbursementCap
  {:db/ident :schema/ReimbursementCap,
   :rdf/type :schema/DrugCostCategory,
   :rdfs/comment
   "The drug's cost represents the maximum reimbursement paid by an insurer for the drug.",
   :rdfs/label "ReimbursementCap",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def RejectAction
  {:db/ident :schema/RejectAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of rejecting to/adopting an object.\\n\\nRelated actions:\\n\\n* [[AcceptAction]]: The antonym of RejectAction.",
   :rdfs/label "RejectAction",
   :rdfs/subClassOf :schema/AllocateAction})

(def RelatedTopicsHealthAspect
  {:db/ident :schema/RelatedTopicsHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment "Other prominent or relevant topics tied to the main topic.",
   :rdfs/label "RelatedTopicsHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def RemixAlbum
  {:db/ident           :schema/RemixAlbum,
   :rdf/type           :schema/MusicAlbumProductionType,
   :rdfs/comment       "RemixAlbum.",
   :rdfs/label         "RemixAlbum",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def Renal
  {:db/ident :schema/Renal,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to the study of the kidneys and its respective disease states.",
   :rdfs/label "Renal",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def RentAction
  {:db/ident :schema/RentAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of giving money in return for temporary use, but not ownership, of an object such as a vehicle or property. For example, an agent rents a property from a landlord in exchange for a periodic payment.",
   :rdfs/label "RentAction",
   :rdfs/subClassOf :schema/TradeAction})

(def RentalCarReservation
  {:db/ident :schema/RentalCarReservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservation for a rental car.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations.",
   :rdfs/label "RentalCarReservation",
   :rdfs/subClassOf :schema/Reservation})

(def RentalVehicleUsage
  {:db/ident :schema/RentalVehicleUsage,
   :rdf/type :schema/CarUsageType,
   :rdfs/comment "Indicates the usage of the vehicle as a rental car.",
   :rdfs/label "RentalVehicleUsage",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"}})

(def RepaymentSpecification
  {:db/ident           :schema/RepaymentSpecification,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "A structured value representing repayment.",
   :rdfs/label         "RepaymentSpecification",
   :rdfs/subClassOf    :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/isPartOf    {:xsd/anyURI "http://pending.schema.org"},
   :schema/source      {:xsd/anyURI
                        "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def ReplaceAction
  {:db/ident :schema/ReplaceAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of editing a recipient by replacing an old object with a new object.",
   :rdfs/label "ReplaceAction",
   :rdfs/subClassOf :schema/UpdateAction})

(def ReplyAction
  {:db/ident :schema/ReplyAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of responding to a question/message asked/sent by the object. Related to [[AskAction]].\\n\\nRelated actions:\\n\\n* [[AskAction]]: Appears generally as an origin of a ReplyAction.",
   :rdfs/label "ReplyAction",
   :rdfs/subClassOf :schema/CommunicateAction})

(def Report
  {:db/ident :schema/Report,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A Report generated by governmental or non-governmental organization.",
   :rdfs/label "Report",
   :rdfs/subClassOf :schema/Article})

(def ReportageNewsArticle
  {:db/ident :schema/ReportageNewsArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The [[ReportageNewsArticle]] type is a subtype of [[NewsArticle]] representing\n news articles which are the result of journalistic news reporting conventions.\n\nIn practice many news publishers produce a wide variety of article types, many of which might be considered a [[NewsArticle]] but not a [[ReportageNewsArticle]]. For example, opinion pieces, reviews, analysis, sponsored or satirical articles, or articles that combine several of these elements.\n\nThe [[ReportageNewsArticle]] type is based on a stricter ideal for \"news\" as a work of journalism, with articles based on factual information either observed or verified by the author, or reported and verified from knowledgeable sources.  This often includes perspectives from multiple viewpoints on a particular issue (distinguishing news reports from public relations or propaganda).  News reports in the [[ReportageNewsArticle]] sense de-emphasize the opinion of the author, with commentary and value judgements typically expressed elsewhere.\n\nA [[ReportageNewsArticle]] which goes deeper into analysis can also be marked with an additional type of [[AnalysisNewsArticle]].\n",
   :rdfs/label "ReportageNewsArticle",
   :rdfs/subClassOf :schema/NewsArticle,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def ReportedDoseSchedule
  {:db/ident :schema/ReportedDoseSchedule,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A patient-reported or observed dosing schedule for a drug or supplement.",
   :rdfs/label "ReportedDoseSchedule",
   :rdfs/subClassOf :schema/DoseSchedule,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ResearchOrganization
  {:db/ident :schema/ResearchOrganization,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A Research Organization (e.g. scientific institute, research company).",
   :rdfs/label "ResearchOrganization",
   :rdfs/subClassOf :schema/Organization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2877"}})

(def ResearchProject
  {:db/ident        :schema/ResearchProject,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A Research project.",
   :rdfs/label      "ResearchProject",
   :rdfs/subClassOf :schema/Project,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   #{{:xsd/anyURI
                       "https://github.com/schemaorg/schemaorg/issues/383"}
                      {:xsd/anyURI
                       "http://schema.org/docs/collab/FundInfoCollab"}}})

(def Researcher
  {:db/ident        :schema/Researcher,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Researchers.",
   :rdfs/label      "Researcher",
   :rdfs/subClassOf :schema/Audience})

(def Reservation
  {:db/ident :schema/Reservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Describes a reservation for travel, dining or an event. Some reservations require tickets. \\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, restaurant reservations, flights, or rental cars, use [[Offer]].",
   :rdfs/label "Reservation",
   :rdfs/subClassOf :schema/Intangible})

(def ReservationCancelled
  {:db/ident :schema/ReservationCancelled,
   :rdf/type :schema/ReservationStatusType,
   :rdfs/comment
   "The status for a previously confirmed reservation that is now cancelled.",
   :rdfs/label "ReservationCancelled"})

(def ReservationConfirmed
  {:db/ident     :schema/ReservationConfirmed,
   :rdf/type     :schema/ReservationStatusType,
   :rdfs/comment "The status of a confirmed reservation.",
   :rdfs/label   "ReservationConfirmed"})

(def ReservationHold
  {:db/ident :schema/ReservationHold,
   :rdf/type :schema/ReservationStatusType,
   :rdfs/comment
   "The status of a reservation on hold pending an update like credit card number or flight changes.",
   :rdfs/label "ReservationHold"})

(def ReservationPackage
  {:db/ident :schema/ReservationPackage,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A group of multiple reservations with common values for all sub-reservations.",
   :rdfs/label "ReservationPackage",
   :rdfs/subClassOf :schema/Reservation})

(def ReservationPending
  {:db/ident :schema/ReservationPending,
   :rdf/type :schema/ReservationStatusType,
   :rdfs/comment
   "The status of a reservation when a request has been sent, but not confirmed.",
   :rdfs/label "ReservationPending"})

(def ReservationStatusType
  {:db/ident        :schema/ReservationStatusType,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Enumerated status values for Reservation.",
   :rdfs/label      "ReservationStatusType",
   :rdfs/subClassOf :schema/StatusEnumeration})

(def ReserveAction
  {:db/ident :schema/ReserveAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Reserving a concrete object.\\n\\nRelated actions:\\n\\n* [[ScheduleAction]]: Unlike ScheduleAction, ReserveAction reserves concrete objects (e.g. a table, a hotel) towards a time slot / spatial allocation.",
   :rdfs/label "ReserveAction",
   :rdfs/subClassOf :schema/PlanAction})

(def Reservoir
  {:db/ident :schema/Reservoir,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservoir of water, typically an artificially created lake, like the Lake Kariba reservoir.",
   :rdfs/label "Reservoir",
   :rdfs/subClassOf :schema/BodyOfWater})

(def Residence
  {:db/ident        :schema/Residence,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The place where a person lives.",
   :rdfs/label      "Residence",
   :rdfs/subClassOf :schema/Place})

(def Resort
  {:db/ident :schema/Resort,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A resort is a place used for relaxation or recreation, attracting visitors for holidays or vacations. Resorts are places, towns or sometimes commercial establishments operated by a single company (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Resort\">http://en.wikipedia.org/wiki/Resort</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n    ",
   :rdfs/label "Resort",
   :rdfs/subClassOf :schema/LodgingBusiness,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def RespiratoryTherapy
  {:db/ident :schema/RespiratoryTherapy,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "The therapy that is concerned with the maintenance or improvement of respiratory function (as in patients with pulmonary disease).",
   :rdfs/label "RespiratoryTherapy",
   :rdfs/subClassOf :schema/MedicalTherapy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Restaurant
  {:db/ident        :schema/Restaurant,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A restaurant.",
   :rdfs/label      "Restaurant",
   :rdfs/subClassOf :schema/FoodEstablishment})

(def RestockingFees
  {:db/ident :schema/RestockingFees,
   :rdf/type :schema/ReturnFeesEnumeration,
   :rdfs/comment
   "Specifies that the customer must pay a restocking fee when returning a product.",
   :rdfs/label "RestockingFees",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def RestrictedDiet
  {:db/ident :schema/RestrictedDiet,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A diet restricted to certain foods or preparations for cultural, religious, health or lifestyle reasons. ",
   :rdfs/label "RestrictedDiet",
   :rdfs/subClassOf :schema/Enumeration})

(def ResultsAvailable
  {:db/ident        :schema/ResultsAvailable,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Results are available.",
   :rdfs/label      "ResultsAvailable",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ResultsNotAvailable
  {:db/ident        :schema/ResultsNotAvailable,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Results are not available.",
   :rdfs/label      "ResultsNotAvailable",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ResumeAction
  {:db/ident :schema/ResumeAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of resuming a device or application which was formerly paused (e.g. resume music playback or resume a timer).",
   :rdfs/label "ResumeAction",
   :rdfs/subClassOf :schema/ControlAction})

(def Retail
  {:db/ident        :schema/Retail,
   :rdf/type        :schema/DrugCostCategory,
   :rdfs/comment    "The drug's cost represents the retail cost of the drug.",
   :rdfs/label      "Retail",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ReturnAction
  {:db/ident :schema/ReturnAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of returning to the origin that which was previously received (concrete objects) or taken (ownership).",
   :rdfs/label "ReturnAction",
   :rdfs/subClassOf :schema/TransferAction})

(def ReturnAtKiosk
  {:db/ident        :schema/ReturnAtKiosk,
   :rdf/type        :schema/ReturnMethodEnumeration,
   :rdfs/comment    "Specifies that product returns must be made at a kiosk.",
   :rdfs/label      "ReturnAtKiosk",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def ReturnByMail
  {:db/ident        :schema/ReturnByMail,
   :rdf/type        :schema/ReturnMethodEnumeration,
   :rdfs/comment    "Specifies that product returns must be done by mail.",
   :rdfs/label      "ReturnByMail",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def ReturnFeesCustomerResponsibility
  {:db/ident :schema/ReturnFeesCustomerResponsibility,
   :rdf/type :schema/ReturnFeesEnumeration,
   :rdfs/comment
   "Specifies that product returns must be paid for, and are the responsibility of, the customer.",
   :rdfs/label "ReturnFeesCustomerResponsibility",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def ReturnFeesEnumeration
  {:db/ident :schema/ReturnFeesEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates several kinds of policies for product return fees.",
   :rdfs/label "ReturnFeesEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def ReturnInStore
  {:db/ident        :schema/ReturnInStore,
   :rdf/type        :schema/ReturnMethodEnumeration,
   :rdfs/comment    "Specifies that product returns must be made in a store.",
   :rdfs/label      "ReturnInStore",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def ReturnLabelCustomerResponsibility
  {:db/ident :schema/ReturnLabelCustomerResponsibility,
   :rdf/type :schema/ReturnLabelSourceEnumeration,
   :rdfs/comment
   "Indicated that creating a return label is the responsibility of the customer.",
   :rdfs/label "ReturnLabelCustomerResponsibility",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def ReturnLabelDownloadAndPrint
  {:db/ident :schema/ReturnLabelDownloadAndPrint,
   :rdf/type :schema/ReturnLabelSourceEnumeration,
   :rdfs/comment
   "Indicated that a return label must be downloaded and printed by the customer.",
   :rdfs/label "ReturnLabelDownloadAndPrint",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def ReturnLabelInBox
  {:db/ident :schema/ReturnLabelInBox,
   :rdf/type :schema/ReturnLabelSourceEnumeration,
   :rdfs/comment
   "Specifies that a return label will be provided by the seller in the shipping box.",
   :rdfs/label "ReturnLabelInBox",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def ReturnLabelSourceEnumeration
  {:db/ident :schema/ReturnLabelSourceEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates several types of return labels for product returns.",
   :rdfs/label "ReturnLabelSourceEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def ReturnMethodEnumeration
  {:db/ident        :schema/ReturnMethodEnumeration,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Enumerates several types of product return methods.",
   :rdfs/label      "ReturnMethodEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def ReturnShippingFees
  {:db/ident :schema/ReturnShippingFees,
   :rdf/type :schema/ReturnFeesEnumeration,
   :rdfs/comment
   "Specifies that the customer must pay the return shipping costs when returning a product.",
   :rdfs/label "ReturnShippingFees",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def Review
  {:db/ident :schema/Review,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A review of an item - for example, of a restaurant, movie, or store.",
   :rdfs/label "Review",
   :rdfs/subClassOf :schema/CreativeWork})

(def ReviewAction
  {:db/ident :schema/ReviewAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of producing a balanced opinion about the object for an audience. An agent reviews an object with participants resulting in a review.",
   :rdfs/label "ReviewAction",
   :rdfs/subClassOf :schema/AssessAction})

(def ReviewNewsArticle
  {:db/ident :schema/ReviewNewsArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A [[NewsArticle]] and [[CriticReview]] providing a professional critic's assessment of a service, product, performance, or artistic or literary work.",
   :rdfs/label "ReviewNewsArticle",
   :rdfs/subClassOf #{:schema/CriticReview :schema/NewsArticle},
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def Rheumatologic
  {:db/ident :schema/Rheumatologic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that deals with the study and treatment of rheumatic, autoimmune or joint diseases.",
   :rdfs/label "Rheumatologic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def RightHandDriving
  {:db/ident :schema/RightHandDriving,
   :rdf/type :schema/SteeringPositionValue,
   :rdfs/comment
   "The steering position is on the right side of the vehicle (viewed from the main direction of driving).",
   :rdfs/label "RightHandDriving",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def RisksOrComplicationsHealthAspect
  {:db/ident :schema/RisksOrComplicationsHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Information about the risk factors and possible complications that may follow a topic.",
   :rdfs/label "RisksOrComplicationsHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def RiverBodyOfWater
  {:db/ident        :schema/RiverBodyOfWater,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A river (for example, the broad majestic Shannon).",
   :rdfs/label      "RiverBodyOfWater",
   :rdfs/subClassOf :schema/BodyOfWater})

(def Role
  {:db/ident :schema/Role,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Represents additional information about a relationship or property. For example a Role can be used to say that a 'member' role linking some SportsTeam to a player occurred during a particular time period. Or that a Person's 'actor' role in a Movie was for some particular characterName. Such properties can be attached to a Role entity, which is then associated with the main entities using ordinary properties like 'member' or 'actor'.\\n\\nSee also [blog post](http://blog.schema.org/2014/06/introducing-role.html).",
   :rdfs/label "Role",
   :rdfs/subClassOf :schema/Intangible})

(def RoofingContractor
  {:db/ident        :schema/RoofingContractor,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A roofing contractor.",
   :rdfs/label      "RoofingContractor",
   :rdfs/subClassOf :schema/HomeAndConstructionBusiness})

(def Room
  {:db/ident :schema/Room,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A room is a distinguishable space within a structure, usually separated from other spaces by interior walls (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Room\">http://en.wikipedia.org/wiki/Room</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n",
   :rdfs/label "Room",
   :rdfs/subClassOf :schema/Accommodation,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def RsvpAction
  {:db/ident :schema/RsvpAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of notifying an event organizer as to whether you expect to attend the event.",
   :rdfs/label "RsvpAction",
   :rdfs/subClassOf :schema/InformAction})

(def RsvpResponseMaybe
  {:db/ident     :schema/RsvpResponseMaybe,
   :rdf/type     :schema/RsvpResponseType,
   :rdfs/comment "The invitee may or may not attend.",
   :rdfs/label   "RsvpResponseMaybe"})

(def RsvpResponseNo
  {:db/ident     :schema/RsvpResponseNo,
   :rdf/type     :schema/RsvpResponseType,
   :rdfs/comment "The invitee will not attend.",
   :rdfs/label   "RsvpResponseNo"})

(def RsvpResponseType
  {:db/ident :schema/RsvpResponseType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "RsvpResponseType is an enumeration type whose instances represent responding to an RSVP request.",
   :rdfs/label "RsvpResponseType",
   :rdfs/subClassOf :schema/Enumeration})

(def RsvpResponseYes
  {:db/ident     :schema/RsvpResponseYes,
   :rdf/type     :schema/RsvpResponseType,
   :rdfs/comment "The invitee will attend.",
   :rdfs/label   "RsvpResponseYes"})

(def SRP
  {:db/ident :schema/SRP,
   :rdf/type :schema/PriceTypeEnumeration,
   :rdfs/comment
   "Represents the suggested retail price (\"SRP\") of an offered product.",
   :rdfs/label "SRP",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2712"}})

(def SafetyHealthAspect
  {:db/ident :schema/SafetyHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment "Content about the safety-related aspects of a health topic.",
   :rdfs/label "SafetyHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2799"}})

(def SaleEvent
  {:db/ident        :schema/SaleEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Sales event.",
   :rdfs/label      "SaleEvent",
   :rdfs/subClassOf :schema/Event})

(def SalePrice
  {:db/ident :schema/SalePrice,
   :rdf/type :schema/PriceTypeEnumeration,
   :rdfs/comment
   "Represents a sale price (usually active for a limited period) of an offered product.",
   :rdfs/label "SalePrice",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2712"}})

(def SatireOrParodyContent
  {:db/ident :schema/SatireOrParodyContent,
   :rdf/type :schema/MediaManipulationRatingEnumeration,
   :rdfs/comment
   "Content coded 'satire or parody content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'satire or parody content': A video that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the “missing context” rating.)\n\nFor an [[ImageObject]] to be 'satire or parody content': An image that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the “missing context” rating.)\n\nFor an [[ImageObject]] with embedded text to be 'satire or parody content': An image that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the “missing context” rating.)\n\nFor an [[AudioObject]] to be 'satire or parody content': Audio that was created as political or humorous commentary and is presented in that context. (Reshares of satire/parody content that do not include relevant context are more likely to fall under the “missing context” rating.)\n",
   :rdfs/label "SatireOrParodyContent",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def SatiricalArticle
  {:db/ident :schema/SatiricalArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An [[Article]] whose content is primarily [[satirical]](https://en.wikipedia.org/wiki/Satire) in nature, i.e. unlikely to be literally true. A satirical article is sometimes but not necessarily also a [[NewsArticle]]. [[ScholarlyArticle]]s are also sometimes satirized.",
   :rdfs/label "SatiricalArticle",
   :rdfs/subClassOf :schema/Article,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def Saturday
  {:db/ident      :schema/Saturday,
   :rdf/type      :schema/DayOfWeek,
   :rdfs/comment  "The day of the week between Friday and Sunday.",
   :rdfs/label    "Saturday",
   :schema/sameAs {:xsd/anyURI "http://www.wikidata.org/entity/Q131"}})

(def Schedule
  {:db/ident :schema/Schedule,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A schedule defines a repeating time period used to describe a regularly occurring [[Event]]. At a minimum a schedule will specify [[repeatFrequency]] which describes the interval between occurrences of the event. Additional information can be provided to specify the schedule more precisely.\n      This includes identifying the day(s) of the week or month when the recurring event will take place, in addition to its start and end time. Schedules may also\n      have start and end dates to indicate when they are active, e.g. to define a limited calendar of events.",
   :rdfs/label "Schedule",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1457"}})

(def ScheduleAction
  {:db/ident :schema/ScheduleAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Scheduling future actions, events, or tasks.\\n\\nRelated actions:\\n\\n* [[ReserveAction]]: Unlike ReserveAction, ScheduleAction allocates future actions (e.g. an event, a task, etc) towards a time slot / spatial allocation.",
   :rdfs/label "ScheduleAction",
   :rdfs/subClassOf :schema/PlanAction})

(def ScholarlyArticle
  {:db/ident        :schema/ScholarlyArticle,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A scholarly article.",
   :rdfs/label      "ScholarlyArticle",
   :rdfs/subClassOf :schema/Article})

(def School
  {:db/ident        :schema/School,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A school.",
   :rdfs/label      "School",
   :rdfs/subClassOf :schema/EducationalOrganization})

(def SchoolDistrict
  {:db/ident :schema/SchoolDistrict,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A School District is an administrative area for the administration of schools.",
   :rdfs/label "SchoolDistrict",
   :rdfs/subClassOf :schema/AdministrativeArea,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2500"}})

(def ScreeningEvent
  {:db/ident        :schema/ScreeningEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A screening of a movie or other video.",
   :rdfs/label      "ScreeningEvent",
   :rdfs/subClassOf :schema/Event})

(def ScreeningHealthAspect
  {:db/ident        :schema/ScreeningHealthAspect,
   :rdf/type        :schema/HealthAspectEnumeration,
   :rdfs/comment    "Content about how to screen or further filter a topic.",
   :rdfs/label      "ScreeningHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def Sculpture
  {:db/ident        :schema/Sculpture,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A piece of sculpture.",
   :rdfs/label      "Sculpture",
   :rdfs/subClassOf :schema/CreativeWork})

(def SeaBodyOfWater
  {:db/ident        :schema/SeaBodyOfWater,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A sea (for example, the Caspian sea).",
   :rdfs/label      "SeaBodyOfWater",
   :rdfs/subClassOf :schema/BodyOfWater})

(def SearchAction
  {:db/ident :schema/SearchAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of searching for an object.\\n\\nRelated actions:\\n\\n* [[FindAction]]: SearchAction generally leads to a FindAction, but not necessarily.",
   :rdfs/label "SearchAction",
   :rdfs/subClassOf :schema/Action})

(def SearchRescueOrganization
  {:db/ident        :schema/SearchRescueOrganization,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A Search and Rescue organization of some kind.",
   :rdfs/label      "SearchRescueOrganization",
   :rdfs/subClassOf :schema/Organization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/3052"}})

(def SearchResultsPage
  {:db/ident        :schema/SearchResultsPage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Web page type: Search results page.",
   :rdfs/label      "SearchResultsPage",
   :rdfs/subClassOf :schema/WebPage})

(def Season
  {:db/ident            :schema/Season,
   :rdf/type            :rdfs/Class,
   :rdfs/comment        "A media season, e.g. TV, radio, video game etc.",
   :rdfs/label          "Season",
   :rdfs/subClassOf     :schema/CreativeWork,
   :schema/supersededBy :schema/CreativeWorkSeason})

(def Seat
  {:db/ident :schema/Seat,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Used to describe a seat, such as a reserved seat in an event reservation.",
   :rdfs/label "Seat",
   :rdfs/subClassOf :schema/Intangible})

(def SeatingMap
  {:db/ident     :schema/SeatingMap,
   :rdf/type     :schema/MapCategoryType,
   :rdfs/comment "A seating map.",
   :rdfs/label   "SeatingMap"})

(def SeeDoctorHealthAspect
  {:db/ident :schema/SeeDoctorHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Information about questions that may be asked, when to see a professional, measures before seeing a doctor or content about the first consultation.",
   :rdfs/label "SeeDoctorHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def SeekToAction
  {:db/ident :schema/SeekToAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "This is the [[Action]] of navigating to a specific [[startOffset]] timestamp within a [[VideoObject]], typically represented with a URL template structure.",
   :rdfs/label "SeekToAction",
   :rdfs/subClassOf :schema/Action,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2722"}})

(def SelfCareHealthAspect
  {:db/ident :schema/SelfCareHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Self care actions or measures that can be taken to sooth, health or avoid a topic. This may be carried at home and can be carried/managed by the person itself.",
   :rdfs/label "SelfCareHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def SelfStorage
  {:db/ident        :schema/SelfStorage,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A self-storage facility.",
   :rdfs/label      "SelfStorage",
   :rdfs/subClassOf :schema/LocalBusiness})

(def SellAction
  {:db/ident :schema/SellAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of taking money from a buyer in exchange for goods or services rendered. An agent sells an object, product, or service to a buyer for a price. Reciprocal of BuyAction.",
   :rdfs/label "SellAction",
   :rdfs/subClassOf :schema/TradeAction})

(def SendAction
  {:db/ident :schema/SendAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of physically/electronically dispatching an object for transfer from an origin to a destination. Related actions:\\n\\n* [[ReceiveAction]]: The reciprocal of SendAction.\\n* [[GiveAction]]: Unlike GiveAction, SendAction does not imply the transfer of ownership (e.g. I can send you my laptop, but I'm not necessarily giving it to you).",
   :rdfs/label "SendAction",
   :rdfs/subClassOf :schema/TransferAction})

(def Series
  {:db/ident :schema/Series,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A Series in schema.org is a group of related items, typically but not necessarily of the same kind. See also [[CreativeWorkSeries]], [[EventSeries]].",
   :rdfs/label "Series",
   :rdfs/subClassOf :schema/Intangible})

(def Service
  {:db/ident :schema/Service,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A service provided by an organization, e.g. delivery service, print services, etc.",
   :rdfs/label "Service",
   :rdfs/subClassOf :schema/Intangible})

(def ServiceChannel
  {:db/ident :schema/ServiceChannel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A means for accessing a service, e.g. a government office location, web site, or phone number.",
   :rdfs/label "ServiceChannel",
   :rdfs/subClassOf :schema/Intangible})

(def SexualContentConsideration
  {:db/ident :schema/SexualContentConsideration,
   :rdf/type :schema/AdultOrientedEnumeration,
   :rdfs/comment
   "The item contains sexually oriented content such as nudity, suggestive or explicit material, or related online services, or is intended to enhance sexual activity. Examples: Erotic videos or magazine, sexual enhancement devices, sex toys.",
   :rdfs/label "SexualContentConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def ShareAction
  {:db/ident :schema/ShareAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of distributing content to people for their amusement or edification.",
   :rdfs/label "ShareAction",
   :rdfs/subClassOf :schema/CommunicateAction})

(def SheetMusic
  {:db/ident        :schema/SheetMusic,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Printed music, as opposed to performed or recorded music.",
   :rdfs/label      "SheetMusic",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/1448"}})

(def ShippingDeliveryTime
  {:db/ident :schema/ShippingDeliveryTime,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "ShippingDeliveryTime provides various pieces of information about delivery times for shipping.",
   :rdfs/label "ShippingDeliveryTime",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def ShippingRateSettings
  {:db/ident :schema/ShippingRateSettings,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A ShippingRateSettings represents re-usable pieces of shipping information. It is designed for publication on an URL that may be referenced via the [[shippingSettingsLink]] property of an [[OfferShippingDetails]]. Several occurrences can be published, distinguished and matched (i.e. identified/referenced) by their different values for [[shippingLabel]].",
   :rdfs/label "ShippingRateSettings",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def ShoeStore
  {:db/ident        :schema/ShoeStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A shoe store.",
   :rdfs/label      "ShoeStore",
   :rdfs/subClassOf :schema/Store})

(def ShoppingCenter
  {:db/ident        :schema/ShoppingCenter,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A shopping center or mall.",
   :rdfs/label      "ShoppingCenter",
   :rdfs/subClassOf :schema/LocalBusiness})

(def ShortStory
  {:db/ident :schema/ShortStory,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Short story or tale. A brief work of literature, usually written in narrative prose.",
   :rdfs/label "ShortStory",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1976"}})

(def SideEffectsHealthAspect
  {:db/ident :schema/SideEffectsHealthAspect,
   :rdf/type :schema/HealthAspectEnumeration,
   :rdfs/comment
   "Side effects that can be observed from the usage of the topic.",
   :rdfs/label "SideEffectsHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def SingleBlindedTrial
  {:db/ident :schema/SingleBlindedTrial,
   :rdf/type :schema/MedicalTrialDesign,
   :rdfs/comment
   "A trial design in which the researcher knows which treatment the patient was randomly assigned to but the patient does not.",
   :rdfs/label "SingleBlindedTrial",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def SingleCenterTrial
  {:db/ident        :schema/SingleCenterTrial,
   :rdf/type        :schema/MedicalTrialDesign,
   :rdfs/comment    "A trial that takes place at a single center.",
   :rdfs/label      "SingleCenterTrial",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def SingleFamilyResidence
  {:db/ident        :schema/SingleFamilyResidence,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Residence type: Single-family home.",
   :rdfs/label      "SingleFamilyResidence",
   :rdfs/subClassOf :schema/House})

(def SinglePlayer
  {:db/ident     :schema/SinglePlayer,
   :rdf/type     :schema/GamePlayMode,
   :rdfs/comment "Play mode: SinglePlayer. Which is played by a lone player.",
   :rdfs/label   "SinglePlayer"})

(def SingleRelease
  {:db/ident           :schema/SingleRelease,
   :rdf/type           :schema/MusicAlbumReleaseType,
   :rdfs/comment       "SingleRelease.",
   :rdfs/label         "SingleRelease",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def SiteNavigationElement
  {:db/ident        :schema/SiteNavigationElement,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A navigation element of the page.",
   :rdfs/label      "SiteNavigationElement",
   :rdfs/subClassOf :schema/WebPageElement})

(def SizeGroupEnumeration
  {:db/ident :schema/SizeGroupEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates common size groups for various product categories.",
   :rdfs/label "SizeGroupEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def SizeSpecification
  {:db/ident :schema/SizeSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Size related properties of a product, typically a size code ([[name]]) and optionally a [[sizeSystem]], [[sizeGroup]], and product measurements ([[hasMeasurement]]). In addition, the intended audience can be defined through [[suggestedAge]], [[suggestedGender]], and suggested body measurements ([[suggestedMeasurement]]).",
   :rdfs/label "SizeSpecification",
   :rdfs/subClassOf :schema/QualitativeValue,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def SizeSystemEnumeration
  {:db/ident :schema/SizeSystemEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates common size systems for different categories of products, for example \"EN-13402\" or \"UK\" for wearables or \"Imperial\" for screws.",
   :rdfs/label "SizeSystemEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def SizeSystemImperial
  {:db/ident        :schema/SizeSystemImperial,
   :rdf/type        :schema/SizeSystemEnumeration,
   :rdfs/comment    "Imperial size system.",
   :rdfs/label      "SizeSystemImperial",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def SizeSystemMetric
  {:db/ident        :schema/SizeSystemMetric,
   :rdf/type        :schema/SizeSystemEnumeration,
   :rdfs/comment    "Metric size system.",
   :rdfs/label      "SizeSystemMetric",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def SkiResort
  {:db/ident        :schema/SkiResort,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A ski resort.",
   :rdfs/label      "SkiResort",
   :rdfs/subClassOf #{:schema/SportsActivityLocation :schema/Resort}})

(def Skin
  {:db/ident        :schema/Skin,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Skin assessment with clinical examination.",
   :rdfs/label      "Skin",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def SocialEvent
  {:db/ident        :schema/SocialEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Social event.",
   :rdfs/label      "SocialEvent",
   :rdfs/subClassOf :schema/Event})

(def SocialMediaPosting
  {:db/ident :schema/SocialMediaPosting,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A post to a social media platform, including blog posts, tweets, Facebook posts, etc.",
   :rdfs/label "SocialMediaPosting",
   :rdfs/subClassOf :schema/Article})

(def SoftwareApplication
  {:db/ident        :schema/SoftwareApplication,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A software application.",
   :rdfs/label      "SoftwareApplication",
   :rdfs/subClassOf :schema/CreativeWork})

(def SoftwareSourceCode
  {:db/ident :schema/SoftwareSourceCode,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Computer programming source code. Example: Full (compile ready) solutions, code snippet samples, scripts, templates.",
   :rdfs/label "SoftwareSourceCode",
   :rdfs/subClassOf :schema/CreativeWork})

(def SoldOut
  {:db/ident     :schema/SoldOut,
   :rdf/type     :schema/ItemAvailability,
   :rdfs/comment "Indicates that the item has sold out.",
   :rdfs/label   "SoldOut"})

(def SolveMathAction
  {:db/ident :schema/SolveMathAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The action that takes in a math expression and directs users to a page potentially capable of solving/simplifying that expression.",
   :rdfs/label "SolveMathAction",
   :rdfs/subClassOf :schema/Action,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2740"}})

(def SomeProducts
  {:db/ident :schema/SomeProducts,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A placeholder for multiple similar products of the same kind.",
   :rdfs/label "SomeProducts",
   :rdfs/subClassOf :schema/Product,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def SoundtrackAlbum
  {:db/ident           :schema/SoundtrackAlbum,
   :rdf/type           :schema/MusicAlbumProductionType,
   :rdfs/comment       "SoundtrackAlbum.",
   :rdfs/label         "SoundtrackAlbum",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def SpeakableSpecification
  {:db/ident :schema/SpeakableSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A SpeakableSpecification indicates (typically via [[xpath]] or [[cssSelector]]) sections of a document that are highlighted as particularly [[speakable]]. Instances of this type are expected to be used primarily as values of the [[speakable]] property.",
   :rdfs/label "SpeakableSpecification",
   :rdfs/subClassOf :schema/Intangible,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1389"}})

(def SpecialAnnouncement
  {:db/ident :schema/SpecialAnnouncement,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A SpecialAnnouncement combines a simple date-stamped textual information update\n      with contextualized Web links and other structured data.  It represents an information update made by a\n      locally-oriented organization, for example schools, pharmacies, healthcare providers,  community groups, police,\n      local government.\n\nFor work in progress guidelines on Coronavirus-related markup see [this doc](https://docs.google.com/document/d/14ikaGCKxo50rRM7nvKSlbUpjyIk2WMQd3IkB1lItlrM/edit#).\n\nThe motivating scenario for SpecialAnnouncement is the [Coronavirus pandemic](https://en.wikipedia.org/wiki/2019%E2%80%9320_coronavirus_pandemic), and the initial vocabulary is oriented to this urgent situation. Schema.org\nexpect to improve the markup iteratively as it is deployed and as feedback emerges from use. In addition to our\nusual [Github entry](https://github.com/schemaorg/schemaorg/issues/2490), feedback comments can also be provided in [this document](https://docs.google.com/document/d/1fpdFFxk8s87CWwACs53SGkYv3aafSxz_DTtOQxMrBJQ/edit#).\n\n\nWhile this schema is designed to communicate urgent crisis-related information, it is not the same as an emergency warning technology like [CAP](https://en.wikipedia.org/wiki/Common_Alerting_Protocol), although there may be overlaps. The intent is to cover\nthe kinds of everyday practical information being posted to existing websites during an emergency situation.\n\nSeveral kinds of information can be provided:\n\nWe encourage the provision of \"name\", \"text\", \"datePosted\", \"expires\" (if appropriate), \"category\" and\n\"url\" as a simple baseline. It is important to provide a value for \"category\" where possible, most ideally as a well known\nURL from Wikipedia or Wikidata. In the case of the 2019-2020 Coronavirus pandemic, this should be \"https://en.wikipedia.org/w/index.php?title=2019-20\\_coronavirus\\_pandemic\" or \"https://www.wikidata.org/wiki/Q81068910\".\n\nFor many of the possible properties, values can either be simple links or an inline description, depending on whether a summary is available. For a link, provide just the URL of the appropriate page as the property's value. For an inline description, use a [[WebContent]] type, and provide the url as a property of that, alongside at least a simple \"[[text]]\" summary of the page. It is\nunlikely that a single SpecialAnnouncement will need all of the possible properties simultaneously.\n\nWe expect that in many cases the page referenced might contain more specialized structured data, e.g. contact info, [[openingHours]], [[Event]], [[FAQPage]] etc. By linking to those pages from a [[SpecialAnnouncement]] you can help make it clearer that the events are related to the situation (e.g. Coronavirus) indicated by the [[category]] property of the [[SpecialAnnouncement]].\n\nMany [[SpecialAnnouncement]]s will relate to particular regions and to identifiable local organizations. Use [[spatialCoverage]] for the region, and [[announcementLocation]] to indicate specific [[LocalBusiness]]es and [[CivicStructure]]s. If the announcement affects both a particular region and a specific location (for example, a library closure that serves an entire region), use both [[spatialCoverage]] and [[announcementLocation]].\n\nThe [[about]] property can be used to indicate entities that are the focus of the announcement. We now recommend using [[about]] only\nfor representing non-location entities (e.g. a [[Course]] or a [[RadioStation]]). For places, use [[announcementLocation]] and [[spatialCoverage]]. Consumers of this markup should be aware that the initial design encouraged the use of [[about]] for locations too.\n\nThe basic content of [[SpecialAnnouncement]] is similar to that of an [RSS](https://en.wikipedia.org/wiki/RSS) or [Atom](https://en.wikipedia.org/wiki/Atom_(Web_standard)) feed. For publishers without such feeds, basic feed-like information can be shared by posting\n[[SpecialAnnouncement]] updates in a page, e.g. using JSON-LD. For sites with Atom/RSS functionality, you can point to a feed\nwith the [[webFeed]] property. This can be a simple URL, or an inline [[DataFeed]] object, with [[encodingFormat]] providing\nmedia type information, e.g. \"application/rss+xml\" or \"application/atom+xml\".\n",
   :rdfs/label "SpecialAnnouncement",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def Specialty
  {:db/ident :schema/Specialty,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any branch of a field in which people typically develop specific expertise, usually after significant study, time, and effort.",
   :rdfs/label "Specialty",
   :rdfs/subClassOf :schema/Enumeration})

(def SpeechPathology
  {:db/ident :schema/SpeechPathology,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "The scientific study and treatment of defects, disorders, and malfunctions of speech and voice, as stuttering, lisping, or lalling, and of language disturbances, as aphasia or delayed language acquisition.",
   :rdfs/label "SpeechPathology",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def SpokenWordAlbum
  {:db/ident           :schema/SpokenWordAlbum,
   :rdf/type           :schema/MusicAlbumProductionType,
   :rdfs/comment       "SpokenWordAlbum.",
   :rdfs/label         "SpokenWordAlbum",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def SportingGoodsStore
  {:db/ident        :schema/SportingGoodsStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A sporting goods store.",
   :rdfs/label      "SportingGoodsStore",
   :rdfs/subClassOf :schema/Store})

(def SportsActivityLocation
  {:db/ident        :schema/SportsActivityLocation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A sports location, such as a playing field.",
   :rdfs/label      "SportsActivityLocation",
   :rdfs/subClassOf :schema/LocalBusiness})

(def SportsClub
  {:db/ident        :schema/SportsClub,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A sports club.",
   :rdfs/label      "SportsClub",
   :rdfs/subClassOf :schema/SportsActivityLocation})

(def SportsEvent
  {:db/ident        :schema/SportsEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Sports event.",
   :rdfs/label      "SportsEvent",
   :rdfs/subClassOf :schema/Event})

(def SportsOrganization
  {:db/ident :schema/SportsOrganization,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Represents the collection of all sports organizations, including sports teams, governing bodies, and sports associations.",
   :rdfs/label "SportsOrganization",
   :rdfs/subClassOf :schema/Organization})

(def SportsTeam
  {:db/ident        :schema/SportsTeam,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Organization: Sports team.",
   :rdfs/label      "SportsTeam",
   :rdfs/subClassOf :schema/SportsOrganization})

(def SpreadsheetDigitalDocument
  {:db/ident        :schema/SpreadsheetDigitalDocument,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A spreadsheet file.",
   :rdfs/label      "SpreadsheetDigitalDocument",
   :rdfs/subClassOf :schema/DigitalDocument})

(def StadiumOrArena
  {:db/ident        :schema/StadiumOrArena,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A stadium.",
   :rdfs/label      "StadiumOrArena",
   :rdfs/subClassOf #{:schema/SportsActivityLocation :schema/CivicStructure}})

(def StagedContent
  {:db/ident :schema/StagedContent,
   :rdf/type :schema/MediaManipulationRatingEnumeration,
   :rdfs/comment
   "Content coded 'staged content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'staged content': A video that has been created using actors or similarly contrived.\n\nFor an [[ImageObject]] to be 'staged content': An image that was created using actors or similarly contrived, such as a screenshot of a fake tweet.\n\nFor an [[ImageObject]] with embedded text to be 'staged content': An image that was created using actors or similarly contrived, such as a screenshot of a fake tweet.\n\nFor an [[AudioObject]] to be 'staged content': Audio that has been created using actors or similarly contrived.\n",
   :rdfs/label "StagedContent",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def StagesHealthAspect
  {:db/ident        :schema/StagesHealthAspect,
   :rdf/type        :schema/HealthAspectEnumeration,
   :rdfs/comment    "Stages that can be observed from a topic.",
   :rdfs/label      "StagesHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def State
  {:db/ident        :schema/State,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A state or province of a country.",
   :rdfs/label      "State",
   :rdfs/subClassOf :schema/AdministrativeArea})

(def Statement
  {:db/ident :schema/Statement,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A statement about something, for example a fun or interesting fact. If known, the main entity this statement is about can be indicated using mainEntity. For more formal claims (e.g. in Fact Checking), consider using [[Claim]] instead. Use the [[text]] property to capture the text of the statement.",
   :rdfs/label "Statement",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2912"}})

(def StatisticalPopulation
  {:db/ident :schema/StatisticalPopulation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A StatisticalPopulation is a set of instances of a certain given type that satisfy some set of constraints. The property [[populationType]] is used to specify the type. Any property that can be used on instances of that type can appear on the statistical population. For example, a [[StatisticalPopulation]] representing all [[Person]]s with a [[homeLocation]] of East Podunk California would be described by applying the appropriate [[homeLocation]] and [[populationType]] properties to a [[StatisticalPopulation]] item that stands for that set of people.\nThe properties [[numConstraints]] and [[constraintProperty]] are used to specify which of the populations properties are used to specify the population. Note that the sense of \"population\" used here is the general sense of a statistical\npopulation, and does not imply that the population consists of people. For example, a [[populationType]] of [[Event]] or [[NewsArticle]] could be used. See also [[Observation]], where a [[populationType]] such as [[Person]] or [[Event]] can be indicated directly. In most cases it may be better to use [[StatisticalVariable]] instead of [[StatisticalPopulation]].",
   :rdfs/label "StatisticalPopulation",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2291"}})

(def StatisticalVariable
  {:db/ident :schema/StatisticalVariable,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "[[StatisticalVariable]] represents any type of statistical metric that can be measured at a place and time. The usage pattern for [[StatisticalVariable]] is typically expressed using [[Observation]] with an explicit [[populationType]], which is a type, typically drawn from Schema.org. Each [[StatisticalVariable]] is marked as a [[ConstraintNode]], meaning that some properties (those listed using [[constraintProperty]]) serve in this setting solely to define the statistical variable rather than literally describe a specific person, place or thing. For example, a [[StatisticalVariable]] Median_Height_Person_Female representing the median height of women, could be written as follows: the population type is [[Person]]; the measuredProperty [[height]]; the [[statType]] [[median]]; the [[gender]] [[Female]]. It is important to note that there are many kinds of scientific quantitative observation which are not fully, perfectly or unambiguously described following this pattern, or with solely Schema.org terminology. The approach taken here is designed to allow partial, incremental or minimal description of [[StatisticalVariable]]s, and the use of detailed sets of entity and property IDs from external repositories. The [[measurementMethod]], [[unitCode]] and [[unitText]] properties can also be used to clarify the specific nature and notation of an observed measurement. ",
   :rdfs/label "StatisticalVariable",
   :rdfs/subClassOf :schema/ConstraintNode,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2564"}})

(def StatusEnumeration
  {:db/ident        :schema/StatusEnumeration,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Lists or enumerations dealing with status types.",
   :rdfs/label      "StatusEnumeration",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2604"}})

(def SteeringPositionValue
  {:db/ident :schema/SteeringPositionValue,
   :rdf/type :rdfs/Class,
   :rdfs/comment "A value indicating a steering position.",
   :rdfs/label "SteeringPositionValue",
   :rdfs/subClassOf :schema/QualitativeValue,
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"}})

(def Store
  {:db/ident        :schema/Store,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A retail good store.",
   :rdfs/label      "Store",
   :rdfs/subClassOf :schema/LocalBusiness})

(def StoreCreditRefund
  {:db/ident :schema/StoreCreditRefund,
   :rdf/type :schema/RefundTypeEnumeration,
   :rdfs/comment
   "Specifies that the customer receives a store credit as refund when returning a product.",
   :rdfs/label "StoreCreditRefund",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def StrengthTraining
  {:db/ident :schema/StrengthTraining,
   :rdf/type :schema/PhysicalActivityCategory,
   :rdfs/comment
   "Physical activity that is engaged in to improve muscle and bone strength. Also referred to as resistance training.",
   :rdfs/label "StrengthTraining",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def StructuredValue
  {:db/ident :schema/StructuredValue,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Structured values are used when the value of a property has a more complex structure than simply being a textual value or a reference to another thing.",
   :rdfs/label "StructuredValue",
   :rdfs/subClassOf :schema/Intangible})

(def StudioAlbum
  {:db/ident           :schema/StudioAlbum,
   :rdf/type           :schema/MusicAlbumProductionType,
   :rdfs/comment       "StudioAlbum.",
   :rdfs/label         "StudioAlbum",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def SubscribeAction
  {:db/ident :schema/SubscribeAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of forming a personal connection with someone/something (object) unidirectionally/asymmetrically to get updates pushed to.\\n\\nRelated actions:\\n\\n* [[FollowAction]]: Unlike FollowAction, SubscribeAction implies that the subscriber acts as a passive agent being constantly/actively pushed for updates.\\n* [[RegisterAction]]: Unlike RegisterAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.\\n* [[JoinAction]]: Unlike JoinAction, SubscribeAction implies that the agent is interested in continuing receiving updates from the object.",
   :rdfs/label "SubscribeAction",
   :rdfs/subClassOf :schema/InteractAction})

(def Subscription
  {:db/ident :schema/Subscription,
   :rdf/type :schema/PriceComponentTypeEnumeration,
   :rdfs/comment
   "Represents the subscription pricing component of the total price for an offered product.",
   :rdfs/label "Subscription",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def Substance
  {:db/ident :schema/Substance,
   :owl/equivalentClass
   {:xsd/anyURI "http://purl.bioontology.org/ontology/SNOMEDCT/105590001"},
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Any matter of defined composition that has discrete existence, whose origin may be biological, mineral or chemical.",
   :rdfs/label "Substance",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def SubwayStation
  {:db/ident        :schema/SubwayStation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A subway station.",
   :rdfs/label      "SubwayStation",
   :rdfs/subClassOf :schema/CivicStructure})

(def Suite
  {:db/ident :schema/Suite,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A suite in a hotel or other public accommodation, denotes a class of luxury accommodations, the key feature of which is multiple rooms (source: Wikipedia, the free encyclopedia, see <a href=\"http://en.wikipedia.org/wiki/Suite_(hotel)\">http://en.wikipedia.org/wiki/Suite_(hotel)</a>).\n<br /><br />\nSee also the <a href=\"/docs/hotels.html\">dedicated document on the use of schema.org for marking up hotels and other forms of accommodations</a>.\n",
   :rdfs/label "Suite",
   :rdfs/subClassOf :schema/Accommodation,
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"}})

(def Sunday
  {:db/ident      :schema/Sunday,
   :rdf/type      :schema/DayOfWeek,
   :rdfs/comment  "The day of the week between Saturday and Monday.",
   :rdfs/label    "Sunday",
   :schema/sameAs {:xsd/anyURI "http://www.wikidata.org/entity/Q132"}})

(def SuperficialAnatomy
  {:db/ident :schema/SuperficialAnatomy,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Anatomical features that can be observed by sight (without dissection), including the form and proportions of the human body as well as surface landmarks that correspond to deeper subcutaneous structures. Superficial anatomy plays an important role in sports medicine, phlebotomy, and other medical specialties as underlying anatomical structures can be identified through surface palpation. For example, during back surgery, superficial anatomy can be used to palpate and count vertebrae to find the site of incision. Or in phlebotomy, superficial anatomy can be used to locate an underlying vein; for example, the median cubital vein can be located by palpating the borders of the cubital fossa (such as the epicondyles of the humerus) and then looking for the superficial signs of the vein, such as size, prominence, ability to refill after depression, and feel of surrounding tissue support. As another example, in a subluxation (dislocation) of the glenohumeral joint, the bony structure becomes pronounced with the deltoid muscle failing to cover the glenohumeral joint allowing the edges of the scapula to be superficially visible. Here, the superficial anatomy is the visible edges of the scapula, implying the underlying dislocation of the joint (the related anatomical structure).",
   :rdfs/label "SuperficialAnatomy",
   :rdfs/subClassOf :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Surgical
  {:db/ident :schema/Surgical,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that pertains to treating diseases, injuries and deformities by manual and instrumental means.",
   :rdfs/label "Surgical",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def SurgicalProcedure
  {:db/ident :schema/SurgicalProcedure,
   :owl/equivalentClass
   {:xsd/anyURI "http://purl.bioontology.org/ontology/SNOMEDCT/387713003"},
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A medical procedure involving an incision with instruments; performed for diagnose, or therapeutic purposes.",
   :rdfs/label "SurgicalProcedure",
   :rdfs/subClassOf :schema/MedicalProcedure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def SuspendAction
  {:db/ident :schema/SuspendAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of momentarily pausing a device or application (e.g. pause music playback or pause a timer).",
   :rdfs/label "SuspendAction",
   :rdfs/subClassOf :schema/ControlAction})

(def Suspended
  {:db/ident        :schema/Suspended,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Suspended.",
   :rdfs/label      "Suspended",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Syllabus
  {:db/ident :schema/Syllabus,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A syllabus that describes the material covered in a course, often with several such sections per [[Course]] so that a distinct [[timeRequired]] can be provided for that section of the [[Course]].",
   :rdfs/label "Syllabus",
   :rdfs/subClassOf :schema/LearningResource,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3281"}})

(def SymptomsHealthAspect
  {:db/ident        :schema/SymptomsHealthAspect,
   :rdf/type        :schema/HealthAspectEnumeration,
   :rdfs/comment    "Symptoms or related symptoms of a Topic.",
   :rdfs/label      "SymptomsHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def Synagogue
  {:db/ident        :schema/Synagogue,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A synagogue.",
   :rdfs/label      "Synagogue",
   :rdfs/subClassOf :schema/PlaceOfWorship})

(def TVClip
  {:db/ident        :schema/TVClip,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A short TV program or a segment/part of a TV program.",
   :rdfs/label      "TVClip",
   :rdfs/subClassOf :schema/Clip})

(def TVEpisode
  {:db/ident        :schema/TVEpisode,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A TV episode which can be part of a series or season.",
   :rdfs/label      "TVEpisode",
   :rdfs/subClassOf :schema/Episode})

(def TVSeason
  {:db/ident :schema/TVSeason,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Season dedicated to TV broadcast and associated online delivery.",
   :rdfs/label "TVSeason",
   :rdfs/subClassOf #{:schema/CreativeWorkSeason :schema/CreativeWork}})

(def TVSeries
  {:db/ident :schema/TVSeries,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "CreativeWorkSeries dedicated to TV broadcast and associated online delivery.",
   :rdfs/label "TVSeries",
   :rdfs/subClassOf #{:schema/CreativeWork :schema/CreativeWorkSeries}})

(def Table
  {:db/ident        :schema/Table,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A table on a Web page.",
   :rdfs/label      "Table",
   :rdfs/subClassOf :schema/WebPageElement})

(def TakeAction
  {:db/ident :schema/TakeAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of gaining ownership of an object from an origin. Reciprocal of GiveAction.\\n\\nRelated actions:\\n\\n* [[GiveAction]]: The reciprocal of TakeAction.\\n* [[ReceiveAction]]: Unlike ReceiveAction, TakeAction implies that ownership has been transferred.",
   :rdfs/label "TakeAction",
   :rdfs/subClassOf :schema/TransferAction})

(def TattooParlor
  {:db/ident        :schema/TattooParlor,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A tattoo parlor.",
   :rdfs/label      "TattooParlor",
   :rdfs/subClassOf :schema/HealthAndBeautyBusiness})

(def Taxi
  {:db/ident            :schema/Taxi,
   :rdf/type            :rdfs/Class,
   :rdfs/comment        "A taxi.",
   :rdfs/label          "Taxi",
   :rdfs/subClassOf     :schema/Service,
   :schema/supersededBy :schema/TaxiService})

(def TaxiReservation
  {:db/ident :schema/TaxiReservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservation for a taxi.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].",
   :rdfs/label "TaxiReservation",
   :rdfs/subClassOf :schema/Reservation})

(def TaxiService
  {:db/ident :schema/TaxiService,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A service for a vehicle for hire with a driver for local travel. Fares are usually calculated based on distance traveled.",
   :rdfs/label "TaxiService",
   :rdfs/subClassOf :schema/Service})

(def TaxiStand
  {:db/ident        :schema/TaxiStand,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A taxi stand.",
   :rdfs/label      "TaxiStand",
   :rdfs/subClassOf :schema/CivicStructure})

(def TaxiVehicleUsage
  {:db/ident :schema/TaxiVehicleUsage,
   :rdf/type :schema/CarUsageType,
   :rdfs/comment "Indicates the usage of the car as a taxi.",
   :rdfs/label "TaxiVehicleUsage",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"}})

(def Taxon
  {:db/ident :schema/Taxon,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A set of organisms asserted to represent a natural cohesive biological unit.",
   :rdfs/label "Taxon",
   :rdfs/subClassOf :schema/Thing,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI "http://bioschemas.org"}})

(def TechArticle
  {:db/ident :schema/TechArticle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A technical article - Example: How-to (task) topics, step-by-step, procedural troubleshooting, specifications, etc.",
   :rdfs/label "TechArticle",
   :rdfs/subClassOf :schema/Article})

(def TelevisionChannel
  {:db/ident :schema/TelevisionChannel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A unique instance of a television BroadcastService on a CableOrSatelliteService lineup.",
   :rdfs/label "TelevisionChannel",
   :rdfs/subClassOf :schema/BroadcastChannel})

(def TelevisionStation
  {:db/ident        :schema/TelevisionStation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A television station.",
   :rdfs/label      "TelevisionStation",
   :rdfs/subClassOf :schema/LocalBusiness})

(def TennisComplex
  {:db/ident        :schema/TennisComplex,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A tennis complex.",
   :rdfs/label      "TennisComplex",
   :rdfs/subClassOf :schema/SportsActivityLocation})

(def Terminated
  {:db/ident        :schema/Terminated,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Terminated.",
   :rdfs/label      "Terminated",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Text
  {:db/ident     :schema/Text,
   :rdf/type     #{:schema/DataType :rdfs/Class},
   :rdfs/comment "Data type: Text.",
   :rdfs/label   "Text"})

(def TextDigitalDocument
  {:db/ident        :schema/TextDigitalDocument,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A file composed primarily of text.",
   :rdfs/label      "TextDigitalDocument",
   :rdfs/subClassOf :schema/DigitalDocument})

(def TextObject
  {:db/ident :schema/TextObject,
   :owl/equivalentClass :dcmitype/Text,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A text file. The text can be unformatted or contain markup, html, etc.",
   :rdfs/label "TextObject",
   :rdfs/subClassOf :schema/MediaObject})

(def TheaterEvent
  {:db/ident        :schema/TheaterEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Theater performance.",
   :rdfs/label      "TheaterEvent",
   :rdfs/subClassOf :schema/Event})

(def TheaterGroup
  {:db/ident :schema/TheaterGroup,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A theater group or company, for example, the Royal Shakespeare Company or Druid Theatre.",
   :rdfs/label "TheaterGroup",
   :rdfs/subClassOf :schema/PerformingGroup})

(def Therapeutic
  {:db/ident        :schema/Therapeutic,
   :rdf/type        :schema/MedicalDevicePurpose,
   :rdfs/comment    "A medical device used for therapeutic purposes.",
   :rdfs/label      "Therapeutic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def TherapeuticProcedure
  {:db/ident :schema/TherapeuticProcedure,
   :owl/equivalentClass
   {:xsd/anyURI "http://purl.bioontology.org/ontology/SNOMEDCT/277132007"},
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A medical procedure intended primarily for therapeutic purposes, aimed at improving a health condition.",
   :rdfs/label "TherapeuticProcedure",
   :rdfs/subClassOf :schema/MedicalProcedure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Thesis
  {:db/ident :schema/Thesis,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A thesis or dissertation document submitted in support of candidature for an academic degree or professional qualification.",
   :rdfs/label "Thesis",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/source {:xsd/anyURI "http://www.productontology.org/id/Thesis"}})

(def Thing
  {:db/ident     :schema/Thing,
   :rdf/type     :rdfs/Class,
   :rdfs/comment "The most generic type of item.",
   :rdfs/label   "Thing"})

(def Throat
  {:db/ident        :schema/Throat,
   :rdf/type        :schema/PhysicalExam,
   :rdfs/comment    "Throat assessment with  clinical examination.",
   :rdfs/label      "Throat",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Thursday
  {:db/ident      :schema/Thursday,
   :rdf/type      :schema/DayOfWeek,
   :rdfs/comment  "The day of the week between Wednesday and Friday.",
   :rdfs/label    "Thursday",
   :schema/sameAs {:xsd/anyURI "http://www.wikidata.org/entity/Q129"}})

(def Ticket
  {:db/ident :schema/Ticket,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Used to describe a ticket to an event, a flight, a bus ride, etc.",
   :rdfs/label "Ticket",
   :rdfs/subClassOf :schema/Intangible})

(def TieAction
  {:db/ident        :schema/TieAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of reaching a draw in a competitive activity.",
   :rdfs/label      "TieAction",
   :rdfs/subClassOf :schema/AchieveAction})

(def Time
  {:db/ident :schema/Time,
   :rdf/type #{:schema/DataType :rdfs/Class},
   :rdfs/comment
   "A point in time recurring on multiple days in the form hh:mm:ss[Z|(+|-)hh:mm] (see [XML schema for details](http://www.w3.org/TR/xmlschema-2/#time)).",
   :rdfs/label "Time"})

(def TipAction
  {:db/ident :schema/TipAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of giving money voluntarily to a beneficiary in recognition of services rendered.",
   :rdfs/label "TipAction",
   :rdfs/subClassOf :schema/TradeAction})

(def TireShop
  {:db/ident        :schema/TireShop,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A tire shop.",
   :rdfs/label      "TireShop",
   :rdfs/subClassOf :schema/Store})

(def TobaccoNicotineConsideration
  {:db/ident :schema/TobaccoNicotineConsideration,
   :rdf/type :schema/AdultOrientedEnumeration,
   :rdfs/comment
   "Item contains tobacco and/or nicotine, for example cigars, cigarettes, chewing tobacco, e-cigarettes, or hookahs.",
   :rdfs/label "TobaccoNicotineConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def TollFree
  {:db/ident     :schema/TollFree,
   :rdf/type     :schema/ContactPointOption,
   :rdfs/comment "The associated telephone number is toll free.",
   :rdfs/label   "TollFree"})

(def TouristAttraction
  {:db/ident :schema/TouristAttraction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A tourist attraction.  In principle any Thing can be a [[TouristAttraction]], from a [[Mountain]] and [[LandmarksOrHistoricalBuildings]] to a [[LocalBusiness]].  This Type can be used on its own to describe a general [[TouristAttraction]], or be used as an [[additionalType]] to add tourist attraction properties to any other type.  (See examples below)",
   :rdfs/label "TouristAttraction",
   :rdfs/subClassOf :schema/Place,
   :schema/contributor
   #{{:xsd/anyURI "http://schema.org/docs/collab/IIT-CNR.it"}
     {:xsd/anyURI "http://schema.org/docs/collab/Tourism"}}})

(def TouristDestination
  {:db/ident :schema/TouristDestination,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A tourist destination. In principle any [[Place]] can be a [[TouristDestination]] from a [[City]], Region or [[Country]] to an [[AmusementPark]] or [[Hotel]]. This Type can be used on its own to describe a general [[TouristDestination]], or be used as an [[additionalType]] to add tourist relevant properties to any other [[Place]].  A [[TouristDestination]] is defined as a [[Place]] that contains, or is colocated with, one or more [[TouristAttraction]]s, often linked by a similar theme or interest to a particular [[touristType]]. The [UNWTO](http://www2.unwto.org/) defines Destination (main destination of a tourism trip) as the place visited that is central to the decision to take the trip.\n  (See examples below.)",
   :rdfs/label "TouristDestination",
   :rdfs/subClassOf :schema/Place,
   :schema/contributor #{{:xsd/anyURI
                          "http://schema.org/docs/collab/IIT-CNR.it"}
                         {:xsd/anyURI "http://schema.org/docs/collab/Tourism"}},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1810"}})

(def TouristInformationCenter
  {:db/ident        :schema/TouristInformationCenter,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A tourist information center.",
   :rdfs/label      "TouristInformationCenter",
   :rdfs/subClassOf :schema/LocalBusiness})

(def TouristTrip
  {:db/ident :schema/TouristTrip,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A tourist trip. A created itinerary of visits to one or more places of interest ([[TouristAttraction]]/[[TouristDestination]]) often linked by a similar theme, geographic area, or interest to a particular [[touristType]]. The [UNWTO](http://www2.unwto.org/) defines tourism trip as the Trip taken by visitors.\n  (See examples below.)",
   :rdfs/label "TouristTrip",
   :rdfs/subClassOf :schema/Trip,
   :schema/contributor #{{:xsd/anyURI
                          "http://schema.org/docs/collab/IIT-CNR.it"}
                         {:xsd/anyURI "http://schema.org/docs/collab/Tourism"}},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1810"}})

(def Toxicologic
  {:db/ident :schema/Toxicologic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that is concerned with poisons, their nature, effects and detection and involved in the treatment of poisoning.",
   :rdfs/label "Toxicologic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ToyStore
  {:db/ident        :schema/ToyStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A toy store.",
   :rdfs/label      "ToyStore",
   :rdfs/subClassOf :schema/Store})

(def TrackAction
  {:db/ident :schema/TrackAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An agent tracks an object for updates.\\n\\nRelated actions:\\n\\n* [[FollowAction]]: Unlike FollowAction, TrackAction refers to the interest on the location of innanimates objects.\\n* [[SubscribeAction]]: Unlike SubscribeAction, TrackAction refers to  the interest on the location of innanimate objects.",
   :rdfs/label "TrackAction",
   :rdfs/subClassOf :schema/FindAction})

(def TradeAction
  {:db/ident :schema/TradeAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of participating in an exchange of goods and services for monetary compensation. An agent trades an object, product or service with a participant in exchange for a one time or periodic payment.",
   :rdfs/label "TradeAction",
   :rdfs/subClassOf :schema/Action})

(def TraditionalChinese
  {:db/ident :schema/TraditionalChinese,
   :rdf/type :schema/MedicineSystem,
   :rdfs/comment
   "A system of medicine based on common theoretical concepts that originated in China and evolved over thousands of years, that uses herbs, acupuncture, exercise, massage, dietary therapy, and other methods to treat a wide range of conditions.",
   :rdfs/label "TraditionalChinese",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def TrainReservation
  {:db/ident :schema/TrainReservation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A reservation for train travel.\\n\\nNote: This type is for information about actual reservations, e.g. in confirmation emails or HTML pages with individual confirmations of reservations. For offers of tickets, use [[Offer]].",
   :rdfs/label "TrainReservation",
   :rdfs/subClassOf :schema/Reservation})

(def TrainStation
  {:db/ident        :schema/TrainStation,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A train station.",
   :rdfs/label      "TrainStation",
   :rdfs/subClassOf :schema/CivicStructure})

(def TrainTrip
  {:db/ident        :schema/TrainTrip,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A trip on a commercial train line.",
   :rdfs/label      "TrainTrip",
   :rdfs/subClassOf :schema/Trip})

(def TransferAction
  {:db/ident :schema/TransferAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of transferring/moving (abstract or concrete) animate or inanimate objects from one place to another.",
   :rdfs/label "TransferAction",
   :rdfs/subClassOf :schema/Action})

(def TransformedContent
  {:db/ident :schema/TransformedContent,
   :rdf/type :schema/MediaManipulationRatingEnumeration,
   :rdfs/comment
   "Content coded 'transformed content' in a [[MediaReview]], considered in the context of how it was published or shared.\n\nFor a [[VideoObject]] to be 'transformed content':  or all of the video has been manipulated to transform the footage itself. This category includes using tools like the Adobe Suite to change the speed of the video, add or remove visual elements or dub audio. Deepfakes are also a subset of transformation.\n\nFor an [[ImageObject]] to be 'transformed content': Adding or deleting visual elements to give the image a different meaning with the intention to mislead.\n\nFor an [[ImageObject]] with embedded text to be 'transformed content': Adding or deleting visual elements to give the image a different meaning with the intention to mislead.\n\nFor an [[AudioObject]] to be 'transformed content': Part or all of the audio has been manipulated to alter the words or sounds, or the audio has been synthetically generated, such as to create a sound-alike voice.\n",
   :rdfs/label "TransformedContent",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def TransitMap
  {:db/ident     :schema/TransitMap,
   :rdf/type     :schema/MapCategoryType,
   :rdfs/comment "A transit map.",
   :rdfs/label   "TransitMap"})

(def TravelAction
  {:db/ident :schema/TravelAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of traveling from a fromLocation to a destination by a specified mode of transport, optionally with participants.",
   :rdfs/label "TravelAction",
   :rdfs/subClassOf :schema/MoveAction})

(def TravelAgency
  {:db/ident        :schema/TravelAgency,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A travel agency.",
   :rdfs/label      "TravelAgency",
   :rdfs/subClassOf :schema/LocalBusiness})

(def TreatmentIndication
  {:db/ident :schema/TreatmentIndication,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An indication for treating an underlying condition, symptom, etc.",
   :rdfs/label "TreatmentIndication",
   :rdfs/subClassOf :schema/MedicalIndication,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def TreatmentsHealthAspect
  {:db/ident        :schema/TreatmentsHealthAspect,
   :rdf/type        :schema/HealthAspectEnumeration,
   :rdfs/comment    "Treatments or related therapies for a Topic.",
   :rdfs/label      "TreatmentsHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def Trip
  {:db/ident :schema/Trip,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A trip or journey. An itinerary of visits to one or more places.",
   :rdfs/label "Trip",
   :rdfs/subClassOf :schema/Intangible,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/Tourism"}})

(def TripleBlindedTrial
  {:db/ident :schema/TripleBlindedTrial,
   :rdf/type :schema/MedicalTrialDesign,
   :rdfs/comment
   "A trial design in which neither the researcher, the person administering the therapy nor the patient knows the details of the treatment the patient was randomly assigned to.",
   :rdfs/label "TripleBlindedTrial",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def True
  {:db/ident     :schema/True,
   :rdf/type     :schema/Boolean,
   :rdfs/comment "The boolean value true.",
   :rdfs/label   "True"})

(def Tuesday
  {:db/ident      :schema/Tuesday,
   :rdf/type      :schema/DayOfWeek,
   :rdfs/comment  "The day of the week between Monday and Wednesday.",
   :rdfs/label    "Tuesday",
   :schema/sameAs {:xsd/anyURI "http://www.wikidata.org/entity/Q127"}})

(def TypeAndQuantityNode
  {:db/ident :schema/TypeAndQuantityNode,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A structured value indicating the quantity, unit of measurement, and business function of goods included in a bundle offer.",
   :rdfs/label "TypeAndQuantityNode",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def TypesHealthAspect
  {:db/ident        :schema/TypesHealthAspect,
   :rdf/type        :schema/HealthAspectEnumeration,
   :rdfs/comment    "Categorization and other types related to a topic.",
   :rdfs/label      "TypesHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def UKNonprofitType
  {:db/ident :schema/UKNonprofitType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UKNonprofitType: Non-profit organization type originating from the United Kingdom.",
   :rdfs/label "UKNonprofitType",
   :rdfs/subClassOf :schema/NonprofitType,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def UKTrust
  {:db/ident        :schema/UKTrust,
   :rdf/type        :schema/UKNonprofitType,
   :rdfs/comment    "UKTrust: Non-profit type referring to a UK trust.",
   :rdfs/label      "UKTrust",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def URL
  {:db/ident        :schema/URL,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Data type: URL.",
   :rdfs/label      "URL",
   :rdfs/subClassOf :schema/Text})

(def USNonprofitType
  {:db/ident :schema/USNonprofitType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "USNonprofitType: Non-profit organization type originating from the United States.",
   :rdfs/label "USNonprofitType",
   :rdfs/subClassOf :schema/NonprofitType,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def Ultrasound
  {:db/ident        :schema/Ultrasound,
   :rdf/type        :schema/MedicalImagingTechnique,
   :rdfs/comment    "Ultrasound imaging.",
   :rdfs/label      "Ultrasound",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def UnRegisterAction
  {:db/ident :schema/UnRegisterAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of un-registering from a service.\\n\\nRelated actions:\\n\\n* [[RegisterAction]]: antonym of UnRegisterAction.\\n* [[LeaveAction]]: Unlike LeaveAction, UnRegisterAction implies that you are unregistering from a service you were previously registered, rather than leaving a team/group of people.",
   :rdfs/label "UnRegisterAction",
   :rdfs/subClassOf :schema/InteractAction})

(def UnclassifiedAdultConsideration
  {:db/ident :schema/UnclassifiedAdultConsideration,
   :rdf/type :schema/AdultOrientedEnumeration,
   :rdfs/comment
   "The item is suitable only for adults, without indicating why. Due to widespread use of \"adult\" as a euphemism for \"sexual\", many such items are likely suited also for the SexualContentConsideration code.",
   :rdfs/label "UnclassifiedAdultConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def UnemploymentSupport
  {:db/ident :schema/UnemploymentSupport,
   :rdf/type :schema/GovernmentBenefitsType,
   :rdfs/comment
   "UnemploymentSupport: this is a benefit for unemployment support.",
   :rdfs/label "UnemploymentSupport",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def UnincorporatedAssociationCharity
  {:db/ident :schema/UnincorporatedAssociationCharity,
   :rdf/type :schema/UKNonprofitType,
   :rdfs/comment
   "UnincorporatedAssociationCharity: Non-profit type referring to a charitable company that is not incorporated (UK).",
   :rdfs/label "UnincorporatedAssociationCharity",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def UnitPriceSpecification
  {:db/ident :schema/UnitPriceSpecification,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The price asked for a given offer by the respective organization or person.",
   :rdfs/label "UnitPriceSpecification",
   :rdfs/subClassOf :schema/PriceSpecification,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def UnofficialLegalValue
  {:db/ident :schema/UnofficialLegalValue,
   :rdf/type :schema/LegalValueLevel,
   :rdfs/comment
   "Indicates that a document has no particular or special standing (e.g. a republication of a law by a private publisher).",
   :rdfs/label "UnofficialLegalValue",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch
   {:xsd/anyURI "http://data.europa.eu/eli/ontology#LegalValue-unofficial"}})

(def UpdateAction
  {:db/ident :schema/UpdateAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of managing by changing/editing the state of the object.",
   :rdfs/label "UpdateAction",
   :rdfs/subClassOf :schema/Action})

(def Urologic
  {:db/ident :schema/Urologic,
   :rdf/type :schema/MedicalSpecialty,
   :rdfs/comment
   "A specific branch of medical science that is concerned with the diagnosis and treatment of diseases pertaining to the urinary tract and the urogenital system.",
   :rdfs/label "Urologic",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def UsageOrScheduleHealthAspect
  {:db/ident        :schema/UsageOrScheduleHealthAspect,
   :rdf/type        :schema/HealthAspectEnumeration,
   :rdfs/comment    "Content about how, when, frequency and dosage of a topic.",
   :rdfs/label      "UsageOrScheduleHealthAspect",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2374"}})

(def UseAction
  {:db/ident        :schema/UseAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of applying an object to its intended purpose.",
   :rdfs/label      "UseAction",
   :rdfs/subClassOf :schema/ConsumeAction})

(def UsedCondition
  {:db/ident     :schema/UsedCondition,
   :rdf/type     :schema/OfferItemCondition,
   :rdfs/comment "Indicates that the item is used.",
   :rdfs/label   "UsedCondition"})

(def UserBlocks
  {:db/ident :schema/UserBlocks,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserBlocks",
   :rdfs/subClassOf :schema/UserInteraction,
   :schema/supersededBy :schema/InteractionCounter})

(def UserCheckins
  {:db/ident :schema/UserCheckins,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserCheckins",
   :rdfs/subClassOf :schema/UserInteraction,
   :schema/supersededBy :schema/InteractionCounter})

(def UserComments
  {:db/ident :schema/UserComments,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserComments",
   :rdfs/subClassOf :schema/UserInteraction,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/rNews"},
   :schema/supersededBy :schema/InteractionCounter})

(def UserDownloads
  {:db/ident :schema/UserDownloads,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserDownloads",
   :rdfs/subClassOf :schema/UserInteraction,
   :schema/supersededBy :schema/InteractionCounter})

(def UserInteraction
  {:db/ident :schema/UserInteraction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserInteraction",
   :rdfs/subClassOf :schema/Event,
   :schema/supersededBy :schema/InteractionCounter})

(def UserLikes
  {:db/ident :schema/UserLikes,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserLikes",
   :rdfs/subClassOf :schema/UserInteraction,
   :schema/supersededBy :schema/InteractionCounter})

(def UserPageVisits
  {:db/ident :schema/UserPageVisits,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserPageVisits",
   :rdfs/subClassOf :schema/UserInteraction,
   :schema/supersededBy :schema/InteractionCounter})

(def UserPlays
  {:db/ident :schema/UserPlays,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserPlays",
   :rdfs/subClassOf :schema/UserInteraction,
   :schema/supersededBy :schema/InteractionCounter})

(def UserPlusOnes
  {:db/ident :schema/UserPlusOnes,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserPlusOnes",
   :rdfs/subClassOf :schema/UserInteraction,
   :schema/supersededBy :schema/InteractionCounter})

(def UserReview
  {:db/ident :schema/UserReview,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A review created by an end-user (e.g. consumer, purchaser, attendee etc.), in contrast with [[CriticReview]].",
   :rdfs/label "UserReview",
   :rdfs/subClassOf :schema/Review,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1589"}})

(def UserTweets
  {:db/ident :schema/UserTweets,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "UserInteraction and its subtypes is an old way of talking about users interacting with pages. It is generally better to use [[Action]]-based vocabulary, alongside types such as [[Comment]].",
   :rdfs/label "UserTweets",
   :rdfs/subClassOf :schema/UserInteraction,
   :schema/supersededBy :schema/InteractionCounter})

(def VacationRental
  {:db/ident :schema/VacationRental,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A kind of lodging business that focuses on renting single properties for limited time.",
   :rdfs/label "VacationRental",
   :rdfs/subClassOf :schema/LodgingBusiness})

(def VeganDiet
  {:db/ident     :schema/VeganDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet exclusive of all animal products.",
   :rdfs/label   "VeganDiet"})

(def VegetarianDiet
  {:db/ident     :schema/VegetarianDiet,
   :rdf/type     :schema/RestrictedDiet,
   :rdfs/comment "A diet exclusive of animal meat.",
   :rdfs/label   "VegetarianDiet"})

(def Vehicle
  {:db/ident :schema/Vehicle,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A vehicle is a device that is designed or used to transport people or cargo over land, water, air, or through space.",
   :rdfs/label "Vehicle",
   :rdfs/subClassOf :schema/Product})

(def Vein
  {:db/ident :schema/Vein,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A type of blood vessel that specifically carries blood to the heart.",
   :rdfs/label "Vein",
   :rdfs/subClassOf :schema/Vessel,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def VenueMap
  {:db/ident     :schema/VenueMap,
   :rdf/type     :schema/MapCategoryType,
   :rdfs/comment "A venue map (e.g. for malls, auditoriums, museums, etc.).",
   :rdfs/label   "VenueMap"})

(def Vessel
  {:db/ident :schema/Vessel,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A component of the human body circulatory system comprised of an intricate network of hollow tubes that transport blood throughout the entire body.",
   :rdfs/label "Vessel",
   :rdfs/subClassOf :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def VeterinaryCare
  {:db/ident        :schema/VeterinaryCare,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A vet's office.",
   :rdfs/label      "VeterinaryCare",
   :rdfs/subClassOf :schema/MedicalOrganization,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def VideoGallery
  {:db/ident        :schema/VideoGallery,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Web page type: Video gallery page.",
   :rdfs/label      "VideoGallery",
   :rdfs/subClassOf :schema/MediaGallery})

(def VideoGame
  {:db/ident :schema/VideoGame,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A video game is an electronic game that involves human interaction with a user interface to generate visual feedback on a video device.",
   :rdfs/label "VideoGame",
   :rdfs/subClassOf #{:schema/Game :schema/SoftwareApplication}})

(def VideoGameClip
  {:db/ident        :schema/VideoGameClip,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A short segment/part of a video game.",
   :rdfs/label      "VideoGameClip",
   :rdfs/subClassOf :schema/Clip})

(def VideoGameSeries
  {:db/ident        :schema/VideoGameSeries,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A video game series.",
   :rdfs/label      "VideoGameSeries",
   :rdfs/subClassOf :schema/CreativeWorkSeries})

(def VideoObject
  {:db/ident           :schema/VideoObject,
   :rdf/type           :rdfs/Class,
   :rdfs/comment       "A video file.",
   :rdfs/label         "VideoObject",
   :rdfs/subClassOf    :schema/MediaObject,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/rNews"}})

(def VideoObjectSnapshot
  {:db/ident :schema/VideoObjectSnapshot,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A specific and exact (byte-for-byte) version of a [[VideoObject]]. Two byte-for-byte identical files, for the purposes of this type, considered identical. If they have different embedded metadata the files will differ. Different external facts about the files, e.g. creator or dateCreated that aren't represented in their actual content, do not affect this notion of identity.",
   :rdfs/label "VideoObjectSnapshot",
   :rdfs/subClassOf :schema/VideoObject,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def ViewAction
  {:db/ident        :schema/ViewAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of consuming static visual content.",
   :rdfs/label      "ViewAction",
   :rdfs/subClassOf :schema/ConsumeAction})

(def VinylFormat
  {:db/ident           :schema/VinylFormat,
   :rdf/type           :schema/MusicReleaseFormatType,
   :rdfs/comment       "VinylFormat.",
   :rdfs/label         "VinylFormat",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"}})

(def ViolenceConsideration
  {:db/ident        :schema/ViolenceConsideration,
   :rdf/type        :schema/AdultOrientedEnumeration,
   :rdfs/comment    "Item shows or promotes violence.",
   :rdfs/label      "ViolenceConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def VirtualLocation
  {:db/ident :schema/VirtualLocation,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An online or virtual location for attending events. For example, one may attend an online seminar or educational event. While a virtual location may be used as the location of an event, virtual locations should not be confused with physical locations in the real world.",
   :rdfs/label "VirtualLocation",
   :rdfs/subClassOf :schema/Intangible,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1842"}})

(def Virus
  {:db/ident        :schema/Virus,
   :rdf/type        :schema/InfectiousAgentClass,
   :rdfs/comment    "Pathogenic virus that causes viral infection.",
   :rdfs/label      "Virus",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def VisualArtsEvent
  {:db/ident        :schema/VisualArtsEvent,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Event type: Visual arts event.",
   :rdfs/label      "VisualArtsEvent",
   :rdfs/subClassOf :schema/Event})

(def VisualArtwork
  {:db/ident        :schema/VisualArtwork,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A work of art that is primarily visual in character.",
   :rdfs/label      "VisualArtwork",
   :rdfs/subClassOf :schema/CreativeWork})

(def VitalSign
  {:db/ident :schema/VitalSign,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Vital signs are measures of various physiological functions in order to assess the most basic body functions.",
   :rdfs/label "VitalSign",
   :rdfs/subClassOf :schema/MedicalSign,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Volcano
  {:db/ident        :schema/Volcano,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A volcano, like Fujisan.",
   :rdfs/label      "Volcano",
   :rdfs/subClassOf :schema/Landform})

(def VoteAction
  {:db/ident :schema/VoteAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of expressing a preference from a fixed/finite/structured set of choices/options.",
   :rdfs/label "VoteAction",
   :rdfs/subClassOf :schema/ChooseAction})

(def WPAdBlock
  {:db/ident        :schema/WPAdBlock,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "An advertising section of the page.",
   :rdfs/label      "WPAdBlock",
   :rdfs/subClassOf :schema/WebPageElement})

(def WPFooter
  {:db/ident        :schema/WPFooter,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The footer section of the page.",
   :rdfs/label      "WPFooter",
   :rdfs/subClassOf :schema/WebPageElement})

(def WPHeader
  {:db/ident        :schema/WPHeader,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The header section of the page.",
   :rdfs/label      "WPHeader",
   :rdfs/subClassOf :schema/WebPageElement})

(def WPSideBar
  {:db/ident        :schema/WPSideBar,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A sidebar section of the page.",
   :rdfs/label      "WPSideBar",
   :rdfs/subClassOf :schema/WebPageElement})

(def WantAction
  {:db/ident :schema/WantAction,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "The act of expressing a desire about the object. An agent wants an object.",
   :rdfs/label "WantAction",
   :rdfs/subClassOf :schema/ReactAction})

(def WarrantyPromise
  {:db/ident :schema/WarrantyPromise,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A structured value representing the duration and scope of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.",
   :rdfs/label "WarrantyPromise",
   :rdfs/subClassOf :schema/StructuredValue,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def WarrantyScope
  {:db/ident :schema/WarrantyScope,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A range of services that will be provided to a customer free of charge in case of a defect or malfunction of a product.\\n\\nCommonly used values:\\n\\n* http://purl.org/goodrelations/v1#Labor-BringIn\\n* http://purl.org/goodrelations/v1#PartsAndLabor-BringIn\\n* http://purl.org/goodrelations/v1#PartsAndLabor-PickUp\n      ",
   :rdfs/label "WarrantyScope",
   :rdfs/subClassOf :schema/Enumeration,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsClass"}})

(def WatchAction
  {:db/ident        :schema/WatchAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of consuming dynamic/moving visual content.",
   :rdfs/label      "WatchAction",
   :rdfs/subClassOf :schema/ConsumeAction})

(def Waterfall
  {:db/ident        :schema/Waterfall,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A waterfall, like Niagara.",
   :rdfs/label      "Waterfall",
   :rdfs/subClassOf :schema/BodyOfWater})

(def WeaponConsideration
  {:db/ident :schema/WeaponConsideration,
   :rdf/type :schema/AdultOrientedEnumeration,
   :rdfs/comment
   "The item is intended to induce bodily harm, for example guns, mace, combat knives, brass knuckles, nail or other bombs, and spears.",
   :rdfs/label "WeaponConsideration",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def WearAction
  {:db/ident        :schema/WearAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of dressing oneself in clothing.",
   :rdfs/label      "WearAction",
   :rdfs/subClassOf :schema/UseAction})

(def WearableMeasurementBack
  {:db/ident        :schema/WearableMeasurementBack,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Measurement of the back section, for example of a jacket.",
   :rdfs/label      "WearableMeasurementBack",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementChestOrBust
  {:db/ident :schema/WearableMeasurementChestOrBust,
   :rdf/type :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment
   "Measurement of the chest/bust section, for example of a suit.",
   :rdfs/label "WearableMeasurementChestOrBust",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementCollar
  {:db/ident        :schema/WearableMeasurementCollar,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Measurement of the collar, for example of a shirt.",
   :rdfs/label      "WearableMeasurementCollar",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementCup
  {:db/ident        :schema/WearableMeasurementCup,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Measurement of the cup, for example of a bra.",
   :rdfs/label      "WearableMeasurementCup",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementHeight
  {:db/ident :schema/WearableMeasurementHeight,
   :rdf/type :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment
   "Measurement of the height, for example the heel height of a shoe.",
   :rdfs/label "WearableMeasurementHeight",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementHips
  {:db/ident        :schema/WearableMeasurementHips,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Measurement of the hip section, for example of a skirt.",
   :rdfs/label      "WearableMeasurementHips",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementInseam
  {:db/ident        :schema/WearableMeasurementInseam,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Measurement of the inseam, for example of pants.",
   :rdfs/label      "WearableMeasurementInseam",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementLength
  {:db/ident        :schema/WearableMeasurementLength,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Represents the length, for example of a dress.",
   :rdfs/label      "WearableMeasurementLength",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementOutsideLeg
  {:db/ident        :schema/WearableMeasurementOutsideLeg,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Measurement of the outside leg, for example of pants.",
   :rdfs/label      "WearableMeasurementOutsideLeg",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementSleeve
  {:db/ident        :schema/WearableMeasurementSleeve,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Measurement of the sleeve length, for example of a shirt.",
   :rdfs/label      "WearableMeasurementSleeve",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementTypeEnumeration
  {:db/ident :schema/WearableMeasurementTypeEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates common types of measurement for wearables products.",
   :rdfs/label "WearableMeasurementTypeEnumeration",
   :rdfs/subClassOf :schema/MeasurementTypeEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementWaist
  {:db/ident        :schema/WearableMeasurementWaist,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Measurement of the waist section, for example of pants.",
   :rdfs/label      "WearableMeasurementWaist",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableMeasurementWidth
  {:db/ident        :schema/WearableMeasurementWidth,
   :rdf/type        :schema/WearableMeasurementTypeEnumeration,
   :rdfs/comment    "Measurement of the width, for example of shoes.",
   :rdfs/label      "WearableMeasurementWidth",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupBig
  {:db/ident        :schema/WearableSizeGroupBig,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Big\" for wearables.",
   :rdfs/label      "WearableSizeGroupBig",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupBoys
  {:db/ident        :schema/WearableSizeGroupBoys,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Boys\" for wearables.",
   :rdfs/label      "WearableSizeGroupBoys",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupEnumeration
  {:db/ident :schema/WearableSizeGroupEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates common size groups (also known as \"size types\") for wearable products.",
   :rdfs/label "WearableSizeGroupEnumeration",
   :rdfs/subClassOf :schema/SizeGroupEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupExtraShort
  {:db/ident        :schema/WearableSizeGroupExtraShort,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Extra Short\" for wearables.",
   :rdfs/label      "WearableSizeGroupExtraShort",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupExtraTall
  {:db/ident        :schema/WearableSizeGroupExtraTall,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Extra Tall\" for wearables.",
   :rdfs/label      "WearableSizeGroupExtraTall",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupGirls
  {:db/ident        :schema/WearableSizeGroupGirls,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Girls\" for wearables.",
   :rdfs/label      "WearableSizeGroupGirls",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupHusky
  {:db/ident        :schema/WearableSizeGroupHusky,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Husky\" (or \"Stocky\") for wearables.",
   :rdfs/label      "WearableSizeGroupHusky",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupInfants
  {:db/ident        :schema/WearableSizeGroupInfants,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Infants\" for wearables.",
   :rdfs/label      "WearableSizeGroupInfants",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupJuniors
  {:db/ident        :schema/WearableSizeGroupJuniors,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Juniors\" for wearables.",
   :rdfs/label      "WearableSizeGroupJuniors",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupMaternity
  {:db/ident        :schema/WearableSizeGroupMaternity,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Maternity\" for wearables.",
   :rdfs/label      "WearableSizeGroupMaternity",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupMens
  {:db/ident        :schema/WearableSizeGroupMens,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Mens\" for wearables.",
   :rdfs/label      "WearableSizeGroupMens",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupMisses
  {:db/ident :schema/WearableSizeGroupMisses,
   :rdf/type :schema/WearableSizeGroupEnumeration,
   :rdfs/comment
   "Size group \"Misses\" (also known as \"Missy\") for wearables.",
   :rdfs/label "WearableSizeGroupMisses",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupPetite
  {:db/ident        :schema/WearableSizeGroupPetite,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Petite\" for wearables.",
   :rdfs/label      "WearableSizeGroupPetite",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupPlus
  {:db/ident        :schema/WearableSizeGroupPlus,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Plus\" for wearables.",
   :rdfs/label      "WearableSizeGroupPlus",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupRegular
  {:db/ident        :schema/WearableSizeGroupRegular,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Regular\" for wearables.",
   :rdfs/label      "WearableSizeGroupRegular",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupShort
  {:db/ident        :schema/WearableSizeGroupShort,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Short\" for wearables.",
   :rdfs/label      "WearableSizeGroupShort",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupTall
  {:db/ident        :schema/WearableSizeGroupTall,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Tall\" for wearables.",
   :rdfs/label      "WearableSizeGroupTall",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeGroupWomens
  {:db/ident        :schema/WearableSizeGroupWomens,
   :rdf/type        :schema/WearableSizeGroupEnumeration,
   :rdfs/comment    "Size group \"Womens\" for wearables.",
   :rdfs/label      "WearableSizeGroupWomens",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemAU
  {:db/ident        :schema/WearableSizeSystemAU,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "Australian size system for wearables.",
   :rdfs/label      "WearableSizeSystemAU",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemBR
  {:db/ident        :schema/WearableSizeSystemBR,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "Brazilian size system for wearables.",
   :rdfs/label      "WearableSizeSystemBR",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemCN
  {:db/ident        :schema/WearableSizeSystemCN,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "Chinese size system for wearables.",
   :rdfs/label      "WearableSizeSystemCN",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemContinental
  {:db/ident        :schema/WearableSizeSystemContinental,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "Continental size system for wearables.",
   :rdfs/label      "WearableSizeSystemContinental",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemDE
  {:db/ident        :schema/WearableSizeSystemDE,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "German size system for wearables.",
   :rdfs/label      "WearableSizeSystemDE",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemEN13402
  {:db/ident :schema/WearableSizeSystemEN13402,
   :rdf/type :schema/WearableSizeSystemEnumeration,
   :rdfs/comment
   "EN 13402 (joint European standard for size labelling of clothes).",
   :rdfs/label "WearableSizeSystemEN13402",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemEnumeration
  {:db/ident :schema/WearableSizeSystemEnumeration,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Enumerates common size systems specific for wearable products.",
   :rdfs/label "WearableSizeSystemEnumeration",
   :rdfs/subClassOf :schema/SizeSystemEnumeration,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemEurope
  {:db/ident        :schema/WearableSizeSystemEurope,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "European size system for wearables.",
   :rdfs/label      "WearableSizeSystemEurope",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemFR
  {:db/ident        :schema/WearableSizeSystemFR,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "French size system for wearables.",
   :rdfs/label      "WearableSizeSystemFR",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemGS1
  {:db/ident        :schema/WearableSizeSystemGS1,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "GS1 (formerly NRF) size system for wearables.",
   :rdfs/label      "WearableSizeSystemGS1",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemIT
  {:db/ident        :schema/WearableSizeSystemIT,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "Italian size system for wearables.",
   :rdfs/label      "WearableSizeSystemIT",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemJP
  {:db/ident        :schema/WearableSizeSystemJP,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "Japanese size system for wearables.",
   :rdfs/label      "WearableSizeSystemJP",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemMX
  {:db/ident        :schema/WearableSizeSystemMX,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "Mexican size system for wearables.",
   :rdfs/label      "WearableSizeSystemMX",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemUK
  {:db/ident        :schema/WearableSizeSystemUK,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "United Kingdom size system for wearables.",
   :rdfs/label      "WearableSizeSystemUK",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WearableSizeSystemUS
  {:db/ident        :schema/WearableSizeSystemUS,
   :rdf/type        :schema/WearableSizeSystemEnumeration,
   :rdfs/comment    "United States size system for wearables.",
   :rdfs/label      "WearableSizeSystemUS",
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source   {:xsd/anyURI
                     "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def WebAPI
  {:db/ident :schema/WebAPI,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "An application programming interface accessible over Web/Internet technologies.",
   :rdfs/label "WebAPI",
   :rdfs/subClassOf :schema/Service,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1423"}})

(def WebApplication
  {:db/ident        :schema/WebApplication,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "Web applications.",
   :rdfs/label      "WebApplication",
   :rdfs/subClassOf :schema/SoftwareApplication})

(def WebContent
  {:db/ident :schema/WebContent,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "WebContent is a type representing all [[WebPage]], [[WebSite]] and [[WebPageElement]] content. It is sometimes the case that detailed distinctions between Web pages, sites and their parts are not always important or obvious. The  [[WebContent]] type makes it easier to describe Web-addressable content without requiring such distinctions to always be stated. (The intent is that the existing types [[WebPage]], [[WebSite]] and [[WebPageElement]] will eventually be declared as subtypes of [[WebContent]].)",
   :rdfs/label "WebContent",
   :rdfs/subClassOf :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2358"}})

(def WebPage
  {:db/ident :schema/WebPage,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A web page. Every web page is implicitly assumed to be declared to be of type WebPage, so the various properties about that webpage, such as <code>breadcrumb</code> may be used. We recommend explicit declaration if these properties are specified, but if they are found outside of an itemscope, they will be assumed to be about the page.",
   :rdfs/label "WebPage",
   :rdfs/subClassOf :schema/CreativeWork})

(def WebPageElement
  {:db/ident        :schema/WebPageElement,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A web page element, like a table or an image.",
   :rdfs/label      "WebPageElement",
   :rdfs/subClassOf :schema/CreativeWork})

(def WebSite
  {:db/ident :schema/WebSite,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A WebSite is a set of related web pages and other items typically served from a single web domain and accessible via URLs.",
   :rdfs/label "WebSite",
   :rdfs/subClassOf :schema/CreativeWork})

(def Wednesday
  {:db/ident      :schema/Wednesday,
   :rdf/type      :schema/DayOfWeek,
   :rdfs/comment  "The day of the week between Tuesday and Thursday.",
   :rdfs/label    "Wednesday",
   :schema/sameAs {:xsd/anyURI "http://www.wikidata.org/entity/Q128"}})

(def WesternConventional
  {:db/ident :schema/WesternConventional,
   :rdf/type :schema/MedicineSystem,
   :rdfs/comment
   "The conventional Western system of medicine, that aims to apply the best available evidence gained from the scientific method to clinical decision making. Also known as conventional or Western medicine.",
   :rdfs/label "WesternConventional",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def Wholesale
  {:db/ident :schema/Wholesale,
   :rdf/type :schema/DrugCostCategory,
   :rdfs/comment
   "The drug's cost represents the wholesale acquisition cost of the drug.",
   :rdfs/label "Wholesale",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def WholesaleStore
  {:db/ident        :schema/WholesaleStore,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A wholesale store.",
   :rdfs/label      "WholesaleStore",
   :rdfs/subClassOf :schema/Store})

(def WinAction
  {:db/ident        :schema/WinAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of achieving victory in a competitive activity.",
   :rdfs/label      "WinAction",
   :rdfs/subClassOf :schema/AchieveAction})

(def Winery
  {:db/ident        :schema/Winery,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A winery.",
   :rdfs/label      "Winery",
   :rdfs/subClassOf :schema/FoodEstablishment})

(def Withdrawn
  {:db/ident        :schema/Withdrawn,
   :rdf/type        :schema/MedicalStudyStatus,
   :rdfs/comment    "Withdrawn.",
   :rdfs/label      "Withdrawn",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def WorkBasedProgram
  {:db/ident :schema/WorkBasedProgram,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A program with both an educational and employment component. Typically based at a workplace and structured around work-based learning, with the aim of instilling competencies related to an occupation. WorkBasedProgram is used to distinguish programs such as apprenticeships from school, college or other classroom based educational programs.",
   :rdfs/label "WorkBasedProgram",
   :rdfs/subClassOf :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2289"}})

(def WorkersUnion
  {:db/ident :schema/WorkersUnion,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A Workers Union (also known as a Labor Union, Labour Union, or Trade Union) is an organization that promotes the interests of its worker members by collectively bargaining with management, organizing, and political lobbying.",
   :rdfs/label "WorkersUnion",
   :rdfs/subClassOf :schema/Organization,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/243"}})

(def WriteAction
  {:db/ident        :schema/WriteAction,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "The act of authoring written creative content.",
   :rdfs/label      "WriteAction",
   :rdfs/subClassOf :schema/CreateAction})

(def WritePermission
  {:db/ident     :schema/WritePermission,
   :rdf/type     :schema/DigitalDocumentPermissionType,
   :rdfs/comment "Permission to write or edit the document.",
   :rdfs/label   "WritePermission"})

(def XPathType
  {:db/ident :schema/XPathType,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "Text representing an XPath (typically but not necessarily version 1.0).",
   :rdfs/label "XPathType",
   :rdfs/subClassOf :schema/Text,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1672"}})

(def XRay
  {:db/ident        :schema/XRay,
   :rdf/type        :schema/MedicalImagingTechnique,
   :rdfs/comment    "X-ray imaging.",
   :rdfs/label      "XRay",
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"}})

(def ZoneBoardingPolicy
  {:db/ident     :schema/ZoneBoardingPolicy,
   :rdf/type     :schema/BoardingPolicyType,
   :rdfs/comment "The airline boards by zones of the plane.",
   :rdfs/label   "ZoneBoardingPolicy"})

(def Zoo
  {:db/ident        :schema/Zoo,
   :rdf/type        :rdfs/Class,
   :rdfs/comment    "A zoo.",
   :rdfs/label      "Zoo",
   :rdfs/subClassOf :schema/CivicStructure})

(def about
  {:db/ident :schema/about,
   :rdf/type :rdf/Property,
   :rdfs/comment "The subject matter of the content.",
   :rdfs/label "about",
   :schema/domainIncludes #{:schema/CreativeWork :schema/Event
                            :schema/CommunicateAction},
   :schema/inverseOf :schema/subjectOf,
   :schema/rangeIncludes :schema/Thing,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1670"}})

(def abridged
  {:db/ident             :schema/abridged,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Indicates whether the book is an abridged edition.",
   :rdfs/label           "abridged",
   :schema/domainIncludes :schema/Book,
   :schema/isPartOf      {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Boolean})

(def abstract
  {:db/ident :schema/abstract,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An abstract is a short description that summarizes a [[CreativeWork]].",
   :rdfs/label "abstract",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/276"}})

(def accelerationTime
  {:db/ident :schema/accelerationTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The time needed to accelerate the vehicle from a given start velocity to a given target velocity.\\n\\nTypical unit code(s): SEC for seconds\\n\\n* Note: There are unfortunately no standard unit codes for seconds/0..100 km/h or seconds/0..60 mph. Simply use \"SEC\" for seconds and indicate the velocities in the [[name]] of the [[QuantitativeValue]], or use [[valueReference]] with a [[QuantitativeValue]] of 0..60 mph or 0..100 km/h to specify the reference speeds.",
   :rdfs/label "accelerationTime",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def acceptedAnswer
  {:db/ident :schema/acceptedAnswer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The answer(s) that has been accepted as best, typically on a Question/Answer site. Sites vary in their selection mechanisms, e.g. drawing on community opinion and/or the view of the Question author.",
   :rdfs/label "acceptedAnswer",
   :rdfs/subPropertyOf :schema/suggestedAnswer,
   :schema/domainIncludes :schema/Question,
   :schema/rangeIncludes #{:schema/ItemList :schema/Answer}})

(def acceptedOffer
  {:db/ident :schema/acceptedOffer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The offer(s) -- e.g., product, quantity and price combinations -- included in the order.",
   :rdfs/label "acceptedOffer",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes :schema/Offer})

(def acceptedPaymentMethod
  {:db/ident :schema/acceptedPaymentMethod,
   :rdf/type :rdf/Property,
   :rdfs/comment "The payment method(s) accepted by seller for this offer.",
   :rdfs/label "acceptedPaymentMethod",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/rangeIncludes #{:schema/PaymentMethod :schema/LoanOrCredit}})

(def acceptsReservations
  {:db/ident :schema/acceptsReservations,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether a FoodEstablishment accepts reservations. Values can be Boolean, an URL at which reservations can be made or (for backwards compatibility) the strings ```Yes``` or ```No```.",
   :rdfs/label "acceptsReservations",
   :schema/domainIncludes :schema/FoodEstablishment,
   :schema/rangeIncludes #{:schema/Boolean :schema/Text :schema/URL}})

(def accessCode
  {:db/ident :schema/accessCode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Password, PIN, or access code needed for delivery (e.g. from a locker).",
   :rdfs/label "accessCode",
   :schema/domainIncludes :schema/DeliveryEvent,
   :schema/rangeIncludes :schema/Text})

(def accessMode
  {:db/ident :schema/accessMode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The human sensory perceptual system or cognitive faculty through which a person may process or perceive information. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessMode-vocabulary).",
   :rdfs/label "accessMode",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1100"}})

(def accessModeSufficient
  {:db/ident :schema/accessModeSufficient,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A list of single or combined accessModes that are sufficient to understand all the intellectual content of a resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessModeSufficient-vocabulary).",
   :rdfs/label "accessModeSufficient",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/ItemList,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1100"}})

(def accessibilityAPI
  {:db/ident :schema/accessibilityAPI,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates that the resource is compatible with the referenced accessibility API. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityAPI-vocabulary).",
   :rdfs/label "accessibilityAPI",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text})

(def accessibilityControl
  {:db/ident :schema/accessibilityControl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Identifies input methods that are sufficient to fully control the described resource. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityControl-vocabulary).",
   :rdfs/label "accessibilityControl",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text})

(def accessibilityFeature
  {:db/ident :schema/accessibilityFeature,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Content features of the resource, such as accessible media, alternatives and supported enhancements for accessibility. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityFeature-vocabulary).",
   :rdfs/label "accessibilityFeature",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text})

(def accessibilityHazard
  {:db/ident :schema/accessibilityHazard,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A characteristic of the described resource that is physiologically dangerous to some users. Related to WCAG 2.0 guideline 2.3. Values should be drawn from the [approved vocabulary](https://www.w3.org/2021/a11y-discov-vocab/latest/#accessibilityHazard-vocabulary).",
   :rdfs/label "accessibilityHazard",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text})

(def accessibilitySummary
  {:db/ident :schema/accessibilitySummary,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A human-readable summary of specific accessibility features or deficiencies, consistent with the other accessibility metadata but expressing subtleties such as \"short descriptions are present but long descriptions will be needed for non-visual users\" or \"short descriptions are present and no long descriptions are needed\".",
   :rdfs/label "accessibilitySummary",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1100"}})

(def accommodationCategory
  {:db/ident :schema/accommodationCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Category of an [[Accommodation]], following real estate conventions, e.g. RESO (see [PropertySubType](https://ddwiki.reso.org/display/DDW17/PropertySubType+Field), and [PropertyType](https://ddwiki.reso.org/display/DDW17/PropertyType+Field) fields  for suggested values).",
   :rdfs/label "accommodationCategory",
   :rdfs/subPropertyOf :schema/category,
   :schema/domainIncludes :schema/Accommodation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def accommodationFloorPlan
  {:db/ident :schema/accommodationFloorPlan,
   :rdf/type :rdf/Property,
   :rdfs/comment "A floorplan of some [[Accommodation]].",
   :rdfs/label "accommodationFloorPlan",
   :schema/domainIncludes #{:schema/Residence :schema/Accommodation},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/FloorPlan,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def accountId
  {:db/ident :schema/accountId,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The identifier for the account the payment will be applied to.",
   :rdfs/label "accountId",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes :schema/Invoice,
   :schema/rangeIncludes :schema/Text})

(def accountMinimumInflow
  {:db/ident :schema/accountMinimumInflow,
   :rdf/type :rdf/Property,
   :rdfs/comment "A minimum amount that has to be paid in every month.",
   :rdfs/label "accountMinimumInflow",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/BankAccount,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def accountOverdraftLimit
  {:db/ident :schema/accountOverdraftLimit,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An overdraft is an extension of credit from a lending institution when an account reaches zero. An overdraft allows the individual to continue withdrawing money even if the account has no funds in it. Basically the bank allows people to borrow a set amount of money.",
   :rdfs/label "accountOverdraftLimit",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/BankAccount,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def accountablePerson
  {:db/ident :schema/accountablePerson,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies the Person that is legally accountable for the CreativeWork.",
   :rdfs/label "accountablePerson",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Person})

(def acquireLicensePage
  {:db/ident :schema/acquireLicensePage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a page documenting how licenses can be purchased or otherwise acquired, for the current item.",
   :rdfs/label "acquireLicensePage",
   :rdfs/subPropertyOf :schema/usageInfo,
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2454"}})

(def acquiredFrom
  {:db/ident :schema/acquiredFrom,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The organization or person from which the product was acquired.",
   :rdfs/label "acquiredFrom",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/OwnershipInfo,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def acrissCode
  {:db/ident :schema/acrissCode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The ACRISS Car Classification Code is a code used by many car rental companies, for classifying vehicles. ACRISS stands for Association of Car Rental Industry Systems and Standards.",
   :rdfs/label "acrissCode",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes #{:schema/BusOrCoach :schema/Car},
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def actionAccessibilityRequirement
  {:db/ident :schema/actionAccessibilityRequirement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A set of requirements that must be fulfilled in order to perform an Action. If more than one value is specified, fulfilling one set of requirements will allow the Action to be performed.",
   :rdfs/label "actionAccessibilityRequirement",
   :schema/domainIncludes :schema/ConsumeAction,
   :schema/rangeIncludes :schema/ActionAccessSpecification,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1741"}})

(def actionApplication
  {:db/ident             :schema/actionApplication,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An application that can complete the request.",
   :rdfs/label           "actionApplication",
   :schema/domainIncludes :schema/EntryPoint,
   :schema/rangeIncludes :schema/SoftwareApplication})

(def actionOption
  {:db/ident :schema/actionOption,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of object. The options subject to this action.",
   :rdfs/label "actionOption",
   :rdfs/subPropertyOf :schema/object,
   :schema/domainIncludes :schema/ChooseAction,
   :schema/rangeIncludes #{:schema/Thing :schema/Text}})

(def actionPlatform
  {:db/ident :schema/actionPlatform,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The high level platform(s) where the Action can be performed for the given URL. To specify a specific application or operating system instance, use actionApplication.",
   :rdfs/label "actionPlatform",
   :schema/domainIncludes :schema/EntryPoint,
   :schema/rangeIncludes #{:schema/Text :schema/DigitalPlatformEnumeration
                           :schema/URL}})

(def actionStatus
  {:db/ident             :schema/actionStatus,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Indicates the current disposition of the Action.",
   :rdfs/label           "actionStatus",
   :schema/domainIncludes :schema/Action,
   :schema/rangeIncludes :schema/ActionStatusType})

(def actionableFeedbackPolicy
  {:db/ident :schema/actionableFeedbackPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement about public engagement activities (for news media, the newsroom’s), including involving the public - digitally or otherwise -- in coverage decisions, reporting and activities after publication.",
   :rdfs/label "actionableFeedbackPolicy",
   :rdfs/subPropertyOf :schema/publishingPrinciples,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes #{:schema/NewsMediaOrganization :schema/Organization},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def activeIngredient
  {:db/ident :schema/activeIngredient,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An active ingredient, typically chemical compounds and/or biologic substances.",
   :rdfs/label "activeIngredient",
   :schema/domainIncludes #{:schema/DietarySupplement :schema/Drug
                            :schema/Substance :schema/DrugStrength},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def activityDuration
  {:db/ident             :schema/activityDuration,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Length of time to engage in the activity.",
   :rdfs/label           "activityDuration",
   :schema/domainIncludes :schema/ExercisePlan,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Duration}})

(def activityFrequency
  {:db/ident             :schema/activityFrequency,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "How often one should engage in the activity.",
   :rdfs/label           "activityFrequency",
   :schema/domainIncludes :schema/ExercisePlan,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Text}})

(def actor
  {:db/ident :schema/actor,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An actor, e.g. in TV, radio, movie, video games etc., or in an event. Actors can be associated with individual items or with a series, episode, clip.",
   :rdfs/label "actor",
   :schema/domainIncludes
   #{:schema/Episode :schema/VideoObject :schema/CreativeWorkSeason
     :schema/TVSeries :schema/MovieSeries :schema/PodcastSeries :schema/Event
     :schema/Clip :schema/Movie :schema/VideoGame :schema/VideoGameSeries
     :schema/RadioSeries},
   :schema/rangeIncludes :schema/Person})

(def actors
  {:db/ident :schema/actors,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An actor, e.g. in TV, radio, movie, video games etc. Actors can be associated with individual items or with a series, episode, clip.",
   :rdfs/label "actors",
   :schema/domainIncludes #{:schema/Episode :schema/VideoObject :schema/TVSeries
                            :schema/MovieSeries :schema/Clip :schema/Movie
                            :schema/VideoGame :schema/VideoGameSeries
                            :schema/RadioSeries},
   :schema/rangeIncludes :schema/Person,
   :schema/supersededBy :schema/actor})

(def addOn
  {:db/ident :schema/addOn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An additional offer that can only be obtained in combination with the first base offer (e.g. supplements and extensions that are available for a surcharge).",
   :rdfs/label "addOn",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/Offer,
   :schema/rangeIncludes :schema/Offer})

(def additionalName
  {:db/ident :schema/additionalName,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An additional name for a Person, can be used for a middle name.",
   :rdfs/label "additionalName",
   :rdfs/subPropertyOf :schema/alternateName,
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Text})

(def additionalNumberOfGuests
  {:db/ident :schema/additionalNumberOfGuests,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "If responding yes, the number of guests who will attend in addition to the invitee.",
   :rdfs/label "additionalNumberOfGuests",
   :schema/domainIncludes :schema/RsvpAction,
   :schema/rangeIncludes :schema/Number})

(def additionalProperty
  {:db/ident :schema/additionalProperty,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A property-value pair representing an additional characteristic of the entity, e.g. a product feature or another characteristic for which there is no matching property in schema.org.\\n\\nNote: Publishers should be aware that applications designed to use specific schema.org properties (e.g. http://schema.org/width, http://schema.org/color, http://schema.org/gtin13, ...) will typically expect such data to be provided using those properties, rather than using the generic property/value mechanism.\n",
   :rdfs/label "additionalProperty",
   :schema/domainIncludes #{:schema/Place :schema/Product
                            :schema/MerchantReturnPolicy
                            :schema/QuantitativeValue :schema/QualitativeValue},
   :schema/rangeIncludes :schema/PropertyValue})

(def additionalType
  {:db/ident :schema/additionalType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An additional type for the item, typically used for adding more specific types from external vocabularies in microdata syntax. This is a relationship between something and a class that the thing is in. Typically the value is a URI-identified RDF class, and in this case corresponds to the\n    use of rdf:type in RDF. Text values can be used sparingly, for cases where useful information can be added without their being an appropriate schema to reference. In the case of text values, the class label should follow the schema.org <a href=\"http://schema.org/docs/styleguide.html\">style guide</a>.",
   :rdfs/label "additionalType",
   :rdfs/subPropertyOf :rdf/type,
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def additionalVariable
  {:db/ident :schema/additionalVariable,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any additional component of the exercise prescription that may need to be articulated to the patient. This may include the order of exercises, the number of repetitions of movement, quantitative distance, progressions over time, etc.",
   :rdfs/label "additionalVariable",
   :schema/domainIncludes :schema/ExercisePlan,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def address
  {:db/ident             :schema/address,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Physical address of the item.",
   :rdfs/label           "address",
   :schema/domainIncludes #{:schema/Place :schema/GeoCoordinates
                            :schema/GeoShape :schema/Organization
                            :schema/Person},
   :schema/rangeIncludes #{:schema/PostalAddress :schema/Text}})

(def addressCountry
  {:db/ident :schema/addressCountry,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The country. For example, USA. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1).",
   :rdfs/label "addressCountry",
   :schema/domainIncludes #{:schema/PostalAddress :schema/GeoCoordinates
                            :schema/DefinedRegion :schema/GeoShape},
   :schema/rangeIncludes #{:schema/Text :schema/Country},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def addressLocality
  {:db/ident :schema/addressLocality,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The locality in which the street address is, and which is in the region. For example, Mountain View.",
   :rdfs/label "addressLocality",
   :schema/domainIncludes :schema/PostalAddress,
   :schema/rangeIncludes :schema/Text})

(def addressRegion
  {:db/ident :schema/addressRegion,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The region in which the locality is, and which is in the country. For example, California or another appropriate first-level [Administrative division](https://en.wikipedia.org/wiki/List_of_administrative_divisions_by_country).",
   :rdfs/label "addressRegion",
   :schema/domainIncludes #{:schema/PostalAddress :schema/DefinedRegion},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def administrationRoute
  {:db/ident :schema/administrationRoute,
   :rdf/type :rdf/Property,
   :rdfs/comment "A route by which this drug may be administered, e.g. 'oral'.",
   :rdfs/label "administrationRoute",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def advanceBookingRequirement
  {:db/ident :schema/advanceBookingRequirement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The amount of time that is required between accepting the offer and the actual usage of the resource or service.",
   :rdfs/label "advanceBookingRequirement",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def adverseOutcome
  {:db/ident :schema/adverseOutcome,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A possible complication and/or side effect of this therapy. If it is known that an adverse outcome is serious (resulting in death, disability, or permanent damage; requiring hospitalization; or otherwise life-threatening or requiring immediate medical attention), tag it as a seriousAdverseOutcome instead.",
   :rdfs/label "adverseOutcome",
   :schema/domainIncludes #{:schema/TherapeuticProcedure :schema/MedicalDevice},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalEntity})

(def affectedBy
  {:db/ident             :schema/affectedBy,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Drugs that affect the test's results.",
   :rdfs/label           "affectedBy",
   :schema/domainIncludes :schema/MedicalTest,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Drug})

(def affiliation
  {:db/ident :schema/affiliation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An organization that this person is affiliated with. For example, a school/university, a club, or a team.",
   :rdfs/label "affiliation",
   :rdfs/subPropertyOf :schema/memberOf,
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Organization})

(def afterMedia
  {:db/ident :schema/afterMedia,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A media object representing the circumstances after performing this direction.",
   :rdfs/label "afterMedia",
   :schema/domainIncludes :schema/HowToDirection,
   :schema/rangeIncludes #{:schema/MediaObject :schema/URL}})

(def agent
  {:db/ident :schema/agent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The direct performer or driver of the action (animate or inanimate). E.g. *John* wrote a book.",
   :rdfs/label "agent",
   :schema/domainIncludes :schema/Action,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def agentInteractionStatistic
  {:db/ident :schema/agentInteractionStatistic,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of completed interactions for this entity, in a particular role (the 'agent'), in a particular action (indicated in the statistic), and in a particular context (i.e. interactionService).",
   :rdfs/label "agentInteractionStatistic",
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/InteractionCounter,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2858"}})

(def aggregateRating
  {:db/ident :schema/aggregateRating,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The overall rating, based on a collection of reviews or ratings, of the item.",
   :rdfs/label "aggregateRating",
   :schema/domainIncludes #{:schema/Place :schema/Product :schema/CreativeWork
                            :schema/Brand :schema/Event :schema/Offer
                            :schema/Organization :schema/Service},
   :schema/rangeIncludes :schema/AggregateRating})

(def aircraft
  {:db/ident             :schema/aircraft,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The kind of aircraft (e.g., \"Boeing 747\").",
   :rdfs/label           "aircraft",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes #{:schema/Vehicle :schema/Text}})

(def album
  {:db/ident             :schema/album,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A music album.",
   :rdfs/label           "album",
   :schema/domainIncludes :schema/MusicGroup,
   :schema/rangeIncludes :schema/MusicAlbum})

(def albumProductionType
  {:db/ident :schema/albumProductionType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Classification of the album by its type of content: soundtrack, live album, studio album, etc.",
   :rdfs/label "albumProductionType",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicAlbum,
   :schema/rangeIncludes :schema/MusicAlbumProductionType})

(def albumRelease
  {:db/ident             :schema/albumRelease,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A release of this album.",
   :rdfs/label           "albumRelease",
   :schema/domainIncludes :schema/MusicAlbum,
   :schema/inverseOf     :schema/releaseOf,
   :schema/rangeIncludes :schema/MusicRelease})

(def albumReleaseType
  {:db/ident :schema/albumReleaseType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The kind of release which this album is: single, EP or album.",
   :rdfs/label "albumReleaseType",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicAlbum,
   :schema/rangeIncludes :schema/MusicAlbumReleaseType})

(def albums
  {:db/ident            :schema/albums,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A collection of music albums.",
   :rdfs/label          "albums",
   :schema/domainIncludes :schema/MusicGroup,
   :schema/rangeIncludes :schema/MusicAlbum,
   :schema/supersededBy :schema/album})

(def alcoholWarning
  {:db/ident :schema/alcoholWarning,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any precaution, guidance, contraindication, etc. related to consumption of alcohol while taking this drug.",
   :rdfs/label "alcoholWarning",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def algorithm
  {:db/ident :schema/algorithm,
   :rdf/type :rdf/Property,
   :rdfs/comment "The algorithm or rules to follow to compute the score.",
   :rdfs/label "algorithm",
   :schema/domainIncludes :schema/MedicalRiskScore,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def alignmentType
  {:db/ident :schema/alignmentType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A category of alignment between the learning resource and the framework node. Recommended values include: 'requires', 'textComplexity', 'readingLevel', and 'educationalSubject'.",
   :rdfs/label "alignmentType",
   :schema/domainIncludes :schema/AlignmentObject,
   :schema/rangeIncludes :schema/Text})

(def alternateName
  {:db/ident             :schema/alternateName,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An alias for the item.",
   :rdfs/label           "alternateName",
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes :schema/Text})

(def alternativeHeadline
  {:db/ident             :schema/alternativeHeadline,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A secondary title of the CreativeWork.",
   :rdfs/label           "alternativeHeadline",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text})

(def alternativeOf
  {:db/ident             :schema/alternativeOf,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Another gene which is a variation of this one.",
   :rdfs/label           "alternativeOf",
   :schema/domainIncludes :schema/Gene,
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Gene,
   :schema/source        {:xsd/anyURI "http://www.bioschemas.org/Gene"}})

(def alumni
  {:db/ident             :schema/alumni,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Alumni of an organization.",
   :rdfs/label           "alumni",
   :schema/domainIncludes #{:schema/EducationalOrganization
                            :schema/Organization},
   :schema/inverseOf     :schema/alumniOf,
   :schema/rangeIncludes :schema/Person})

(def alumniOf
  {:db/ident             :schema/alumniOf,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An organization that the person is an alumni of.",
   :rdfs/label           "alumniOf",
   :schema/domainIncludes :schema/Person,
   :schema/inverseOf     :schema/alumni,
   :schema/rangeIncludes #{:schema/EducationalOrganization
                           :schema/Organization}})

(def amenityFeature
  {:db/ident :schema/amenityFeature,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An amenity feature (e.g. a characteristic or service) of the Accommodation. This generic property does not make a statement about whether the feature is included in an offer for the main accommodation or available at extra costs.",
   :rdfs/label "amenityFeature",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes #{:schema/Place :schema/FloorPlan
                            :schema/LodgingBusiness :schema/Accommodation},
   :schema/rangeIncludes :schema/LocationFeatureSpecification})

(def amount
  {:db/ident :schema/amount,
   :rdf/type :rdf/Property,
   :rdfs/comment "The amount of money.",
   :rdfs/label "amount",
   :schema/domainIncludes #{:schema/DatedMoneySpecification
                            :schema/MoneyTransfer :schema/InvestmentOrDeposit
                            :schema/MonetaryGrant :schema/LoanOrCredit},
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/Number},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1253"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1698"}}})

(def amountOfThisGood
  {:db/ident           :schema/amountOfThisGood,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The quantity of the goods included in the offer.",
   :rdfs/label         "amountOfThisGood",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/TypeAndQuantityNode,
   :schema/rangeIncludes :schema/Number})

(def announcementLocation
  {:db/ident :schema/announcementLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a specific [[CivicStructure]] or [[LocalBusiness]] associated with the SpecialAnnouncement. For example, a specific testing facility or business with special opening hours. For a larger geographic region like a quarantine of an entire region, use [[spatialCoverage]].",
   :rdfs/label "announcementLocation",
   :rdfs/subPropertyOf :schema/spatialCoverage,
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/LocalBusiness :schema/CivicStructure},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2514"}})

(def annualPercentageRate
  {:db/ident :schema/annualPercentageRate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The annual rate that is charged for borrowing (or made by investing), expressed as a single percentage number that represents the actual yearly cost of funds over the term of a loan. This includes any fees or additional costs associated with the transaction.",
   :rdfs/label "annualPercentageRate",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/FinancialProduct,
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def answerCount
  {:db/ident             :schema/answerCount,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of answers this question has received.",
   :rdfs/label           "answerCount",
   :schema/domainIncludes :schema/Question,
   :schema/rangeIncludes :schema/Integer})

(def answerExplanation
  {:db/ident :schema/answerExplanation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A step-by-step or full explanation about Answer. Can outline how this Answer was achieved or contain more broad clarification or statement about it. ",
   :rdfs/label "answerExplanation",
   :schema/domainIncludes :schema/Answer,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/WebContent :schema/Comment},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2636"}})

(def antagonist
  {:db/ident :schema/antagonist,
   :rdf/type :rdf/Property,
   :rdfs/comment "The muscle whose action counteracts the specified muscle.",
   :rdfs/label "antagonist",
   :schema/domainIncludes :schema/Muscle,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Muscle})

(def appearance
  {:db/ident :schema/appearance,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates an occurrence of a [[Claim]] in some [[CreativeWork]].",
   :rdfs/label "appearance",
   :rdfs/subPropertyOf :schema/workExample,
   :schema/domainIncludes :schema/Claim,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/CreativeWork,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1828"}})

(def applicableCountry
  {:db/ident :schema/applicableCountry,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A country where a particular merchant return policy applies to, for example the two-letter ISO 3166-1 alpha-2 country code.",
   :rdfs/label "applicableCountry",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/Country},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3001"}})

(def applicableLocation
  {:db/ident             :schema/applicableLocation,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The location in which the status applies.",
   :rdfs/label           "applicableLocation",
   :schema/domainIncludes #{:schema/DrugCost :schema/DrugLegalStatus},
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AdministrativeArea})

(def applicantLocationRequirements
  {:db/ident :schema/applicantLocationRequirements,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The location(s) applicants can apply from. This is usually used for telecommuting jobs where the applicant does not need to be in a physical office. Note: This should not be used for citizenship or work visa requirements.",
   :rdfs/label "applicantLocationRequirements",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/AdministrativeArea,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2083"}})

(def application
  {:db/ident            :schema/application,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "An application that can complete the request.",
   :rdfs/label          "application",
   :schema/domainIncludes :schema/EntryPoint,
   :schema/rangeIncludes :schema/SoftwareApplication,
   :schema/supersededBy :schema/actionApplication})

(def applicationCategory
  {:db/ident :schema/applicationCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment "Type of software application, e.g. 'Game, Multimedia'.",
   :rdfs/label "applicationCategory",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def applicationContact
  {:db/ident :schema/applicationContact,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Contact details for further information relevant to this job posting.",
   :rdfs/label "applicationContact",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ContactPoint,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2396"}})

(def applicationDeadline
  {:db/ident :schema/applicationDeadline,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date at which the program stops collecting applications for the next enrollment cycle.",
   :rdfs/label "applicationDeadline",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Date,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2419"}})

(def applicationStartDate
  {:db/ident :schema/applicationStartDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date at which the program begins collecting applications for the next enrollment cycle.",
   :rdfs/label "applicationStartDate",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Date,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2419"}})

(def applicationSubCategory
  {:db/ident             :schema/applicationSubCategory,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Subcategory of the application, e.g. 'Arcade Game'.",
   :rdfs/label           "applicationSubCategory",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def applicationSuite
  {:db/ident :schema/applicationSuite,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The name of the application suite to which the application belongs (e.g. Excel belongs to Office).",
   :rdfs/label "applicationSuite",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text})

(def appliesToDeliveryMethod
  {:db/ident :schema/appliesToDeliveryMethod,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The delivery method(s) to which the delivery charge or payment charge specification applies.",
   :rdfs/label "appliesToDeliveryMethod",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/DeliveryChargeSpecification
                            :schema/PaymentChargeSpecification},
   :schema/rangeIncludes :schema/DeliveryMethod})

(def appliesToPaymentMethod
  {:db/ident :schema/appliesToPaymentMethod,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The payment method(s) to which the payment charge specification applies.",
   :rdfs/label "appliesToPaymentMethod",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/PaymentChargeSpecification,
   :schema/rangeIncludes :schema/PaymentMethod})

(def archiveHeld
  {:db/ident :schema/archiveHeld,
   :rdf/type :rdf/Property,
   :rdfs/comment
   {:rdf/language "en",
    :rdf/value
    "Collection, [fonds](https://en.wikipedia.org/wiki/Fonds), or item held, kept or maintained by an [[ArchiveOrganization]]."},
   :rdfs/label {:rdf/language "en",
                :rdf/value    "archiveHeld"},
   :schema/domainIncludes :schema/ArchiveOrganization,
   :schema/inverseOf :schema/holdingArchive,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ArchiveComponent,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1758"}})

(def archivedAt
  {:db/ident :schema/archivedAt,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a page or other link involved in archival of a [[CreativeWork]]. In the case of [[MediaReview]], the items in a [[MediaReviewItem]] may often become inaccessible, but be archived by archival, journalistic, activist, or law enforcement organizations. In such cases, the referenced page may not directly publish the content.",
   :rdfs/label "archivedAt",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/WebPage :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def area
  {:db/ident :schema/area,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The area within which users can expect to reach the broadcast service.",
   :rdfs/label "area",
   :schema/domainIncludes :schema/BroadcastService,
   :schema/rangeIncludes :schema/Place,
   :schema/supersededBy :schema/serviceArea})

(def areaServed
  {:db/ident :schema/areaServed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The geographic area where a service or offered item is provided.",
   :rdfs/label "areaServed",
   :schema/domainIncludes #{:schema/DeliveryChargeSpecification
                            :schema/ContactPoint :schema/Demand :schema/Offer
                            :schema/Organization :schema/Service},
   :schema/rangeIncludes #{:schema/Place :schema/AdministrativeArea
                           :schema/GeoShape :schema/Text}})

(def arrivalAirport
  {:db/ident             :schema/arrivalAirport,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The airport where the flight terminates.",
   :rdfs/label           "arrivalAirport",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes :schema/Airport})

(def arrivalBoatTerminal
  {:db/ident :schema/arrivalBoatTerminal,
   :rdf/type :rdf/Property,
   :rdfs/comment "The terminal or port from which the boat arrives.",
   :rdfs/label "arrivalBoatTerminal",
   :schema/domainIncludes :schema/BoatTrip,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/BoatTerminal,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1755"}})

(def arrivalBusStop
  {:db/ident             :schema/arrivalBusStop,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The stop or station from which the bus arrives.",
   :rdfs/label           "arrivalBusStop",
   :schema/domainIncludes :schema/BusTrip,
   :schema/rangeIncludes #{:schema/BusStop :schema/BusStation}})

(def arrivalGate
  {:db/ident             :schema/arrivalGate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Identifier of the flight's arrival gate.",
   :rdfs/label           "arrivalGate",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes :schema/Text})

(def arrivalPlatform
  {:db/ident             :schema/arrivalPlatform,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The platform where the train arrives.",
   :rdfs/label           "arrivalPlatform",
   :schema/domainIncludes :schema/TrainTrip,
   :schema/rangeIncludes :schema/Text})

(def arrivalStation
  {:db/ident             :schema/arrivalStation,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The station where the train trip ends.",
   :rdfs/label           "arrivalStation",
   :schema/domainIncludes :schema/TrainTrip,
   :schema/rangeIncludes :schema/TrainStation})

(def arrivalTerminal
  {:db/ident             :schema/arrivalTerminal,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Identifier of the flight's arrival terminal.",
   :rdfs/label           "arrivalTerminal",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes :schema/Text})

(def arrivalTime
  {:db/ident             :schema/arrivalTime,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The expected arrival time.",
   :rdfs/label           "arrivalTime",
   :schema/domainIncludes :schema/Trip,
   :schema/rangeIncludes #{:schema/Time :schema/DateTime}})

(def artEdition
  {:db/ident :schema/artEdition,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of copies when multiple copies of a piece of artwork are produced - e.g. for a limited edition of 20 prints, 'artEdition' refers to the total number of copies (in this example \"20\").",
   :rdfs/label "artEdition",
   :schema/domainIncludes :schema/VisualArtwork,
   :schema/rangeIncludes #{:schema/Integer :schema/Text}})

(def artMedium
  {:db/ident :schema/artMedium,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The material used. (E.g. Oil, Watercolour, Acrylic, Linoprint, Marble, Cyanotype, Digital, Lithograph, DryPoint, Intaglio, Pastel, Woodcut, Pencil, Mixed Media, etc.)",
   :rdfs/label "artMedium",
   :rdfs/subPropertyOf :schema/material,
   :schema/domainIncludes :schema/VisualArtwork,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def arterialBranch
  {:db/ident             :schema/arterialBranch,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The branches that comprise the arterial structure.",
   :rdfs/label           "arterialBranch",
   :schema/domainIncludes :schema/Artery,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AnatomicalStructure})

(def artform
  {:db/ident :schema/artform,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "e.g. Painting, Drawing, Sculpture, Print, Photograph, Assemblage, Collage, etc.",
   :rdfs/label "artform",
   :schema/domainIncludes :schema/VisualArtwork,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def articleBody
  {:db/ident             :schema/articleBody,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The actual body of the article.",
   :rdfs/label           "articleBody",
   :schema/domainIncludes :schema/Article,
   :schema/rangeIncludes :schema/Text})

(def articleSection
  {:db/ident :schema/articleSection,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Articles may belong to one or more 'sections' in a magazine or newspaper, such as Sports, Lifestyle, etc.",
   :rdfs/label "articleSection",
   :schema/domainIncludes :schema/Article,
   :schema/rangeIncludes :schema/Text})

(def artist
  {:db/ident :schema/artist,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The primary artist for a work\n    \tin a medium other than pencils or digital line art--for example, if the\n    \tprimary artwork is done in watercolors or digital paints.",
   :rdfs/label "artist",
   :schema/domainIncludes #{:schema/VisualArtwork :schema/ComicStory
                            :schema/ComicIssue},
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Person})

(def artworkSurface
  {:db/ident :schema/artworkSurface,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The supporting materials for the artwork, e.g. Canvas, Paper, Wood, Board, etc.",
   :rdfs/label "artworkSurface",
   :schema/domainIncludes :schema/VisualArtwork,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def asin
  {:db/ident :schema/asin,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An Amazon Standard Identification Number (ASIN) is a 10-character alphanumeric unique identifier assigned by Amazon.com and its partners for product identification within the Amazon organization (summary from [Wikipedia](https://en.wikipedia.org/wiki/Amazon_Standard_Identification_Number)'s article).\n\nNote also that this is a definition for how to include ASINs in Schema.org data, and not a definition of ASINs in general - see documentation from Amazon for authoritative details.\nASINs are most commonly encoded as text strings, but the [asin] property supports URL/URI as potential values too.",
   :rdfs/label "asin",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes #{:schema/Product :schema/Demand :schema/Offer},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def aspect
  {:db/ident :schema/aspect,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An aspect of medical practice that is considered on the page, such as 'diagnosis', 'treatment', 'causes', 'prognosis', 'etiology', 'epidemiology', etc.",
   :rdfs/label "aspect",
   :schema/domainIncludes :schema/MedicalWebPage,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/mainContentOfPage})

(def assembly
  {:db/ident :schema/assembly,
   :rdf/type :rdf/Property,
   :rdfs/comment "Library file name, e.g., mscorlib.dll, system.web.dll.",
   :rdfs/label "assembly",
   :schema/domainIncludes :schema/APIReference,
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/executableLibraryName})

(def assemblyVersion
  {:db/ident :schema/assemblyVersion,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Associated product/technology version. E.g., .NET Framework 4.5.",
   :rdfs/label "assemblyVersion",
   :schema/domainIncludes :schema/APIReference,
   :schema/rangeIncludes :schema/Text})

(def assesses
  {:db/ident :schema/assesses,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The item being described is intended to assess the competency or learning outcome defined by the referenced term.",
   :rdfs/label "assesses",
   :schema/domainIncludes #{:schema/LearningResource :schema/EducationEvent
                            :schema/CreativeWork},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2427"}})

(def associatedAnatomy
  {:db/ident :schema/associatedAnatomy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The anatomy of the underlying organ system or structures associated with this entity.",
   :rdfs/label "associatedAnatomy",
   :schema/domainIncludes #{:schema/PhysicalActivity :schema/MedicalCondition},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/SuperficialAnatomy
                           :schema/AnatomicalStructure
                           :schema/AnatomicalSystem}})

(def associatedArticle
  {:db/ident             :schema/associatedArticle,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A NewsArticle associated with the Media Object.",
   :rdfs/label           "associatedArticle",
   :schema/domainIncludes :schema/MediaObject,
   :schema/rangeIncludes :schema/NewsArticle})

(def associatedClaimReview
  {:db/ident :schema/associatedClaimReview,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An associated [[ClaimReview]], related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case [[relatedMediaReview]] would commonly be used on a [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].",
   :rdfs/label "associatedClaimReview",
   :rdfs/subPropertyOf :schema/associatedReview,
   :schema/domainIncludes :schema/Review,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Review,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def associatedDisease
  {:db/ident :schema/associatedDisease,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Disease associated to this BioChemEntity. Such disease can be a MedicalCondition or a URL. If you want to add an evidence supporting the association, please use PropertyValue.",
   :rdfs/label "associatedDisease",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/PropertyValue :schema/MedicalCondition
                           :schema/URL},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/BioChemEntity"}})

(def associatedMedia
  {:db/ident :schema/associatedMedia,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A media object that encodes this CreativeWork. This property is a synonym for encoding.",
   :rdfs/label "associatedMedia",
   :schema/domainIncludes #{:schema/HyperTocEntry :schema/HyperToc
                            :schema/CreativeWork},
   :schema/rangeIncludes :schema/MediaObject})

(def associatedMediaReview
  {:db/ident :schema/associatedMediaReview,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An associated [[MediaReview]], related by specific common content, topic or claim. The expectation is that this property would be most typically used in cases where a single activity is conducting both claim reviews and media reviews, in which case [[relatedMediaReview]] would commonly be used on a [[ClaimReview]], while [[relatedClaimReview]] would be used on [[MediaReview]].",
   :rdfs/label "associatedMediaReview",
   :rdfs/subPropertyOf :schema/associatedReview,
   :schema/domainIncludes :schema/Review,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Review,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def associatedPathophysiology
  {:db/ident :schema/associatedPathophysiology,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "If applicable, a description of the pathophysiology associated with the anatomical system, including potential abnormal changes in the mechanical, physical, and biochemical functions of the system.",
   :rdfs/label "associatedPathophysiology",
   :schema/domainIncludes #{:schema/SuperficialAnatomy
                            :schema/AnatomicalStructure
                            :schema/AnatomicalSystem},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def associatedReview
  {:db/ident :schema/associatedReview,
   :rdf/type :rdf/Property,
   :rdfs/comment "An associated [[Review]].",
   :rdfs/label "associatedReview",
   :schema/domainIncludes :schema/Review,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Review,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def athlete
  {:db/ident :schema/athlete,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A person that acts as performing member of a sports team; a player as opposed to a coach.",
   :rdfs/label "athlete",
   :schema/domainIncludes :schema/SportsTeam,
   :schema/rangeIncludes :schema/Person})

(def attendee
  {:db/ident             :schema/attendee,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A person or organization attending the event.",
   :rdfs/label           "attendee",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def attendees
  {:db/ident            :schema/attendees,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A person attending the event.",
   :rdfs/label          "attendees",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/supersededBy :schema/attendee})

(def audience
  {:db/ident :schema/audience,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An intended audience, i.e. a group for whom something was created.",
   :rdfs/label "audience",
   :schema/domainIncludes #{:schema/Product :schema/CreativeWork :schema/Event
                            :schema/LodgingBusiness :schema/PlayAction
                            :schema/Service},
   :schema/rangeIncludes :schema/Audience})

(def audienceType
  {:db/ident :schema/audienceType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The target group associated with a given audience (e.g. veterans, car owners, musicians, etc.).",
   :rdfs/label "audienceType",
   :schema/domainIncludes :schema/Audience,
   :schema/rangeIncludes :schema/Text})

(def audio
  {:db/ident :schema/audio,
   :rdf/type :rdf/Property,
   :rdfs/comment "An embedded audio object.",
   :rdfs/label "audio",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/MusicRecording :schema/AudioObject
                           :schema/Clip},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2420"}})

(def authenticator
  {:db/ident :schema/authenticator,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Organization responsible for authenticating the user's subscription. For example, many media apps require a cable/satellite provider to authenticate your subscription before playing media.",
   :rdfs/label "authenticator",
   :schema/domainIncludes :schema/MediaSubscription,
   :schema/rangeIncludes :schema/Organization,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1741"}})

(def author
  {:db/ident :schema/author,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The author of this content or rating. Please note that author is special in that HTML 5 provides a special mechanism for indicating authorship via the rel tag. That is equivalent to this and may be used interchangeably.",
   :rdfs/label "author",
   :schema/domainIncludes #{:schema/Rating :schema/CreativeWork},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def availability
  {:db/ident :schema/availability,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The availability of this item&#x2014;for example In stock, Out of stock, Pre-order, etc.",
   :rdfs/label "availability",
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/ItemAvailability})

(def availabilityEnds
  {:db/ident :schema/availabilityEnds,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The end of the availability of the product or service included in the offer.",
   :rdfs/label "availabilityEnds",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer
                            :schema/ActionAccessSpecification},
   :schema/rangeIncludes #{:schema/Date :schema/Time :schema/DateTime},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1741"}})

(def availabilityStarts
  {:db/ident :schema/availabilityStarts,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The beginning of the availability of the product or service included in the offer.",
   :rdfs/label "availabilityStarts",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer
                            :schema/ActionAccessSpecification},
   :schema/rangeIncludes #{:schema/Date :schema/Time :schema/DateTime},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1741"}})

(def availableAtOrFrom
  {:db/ident :schema/availableAtOrFrom,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The place(s) from which the offer can be obtained (e.g. store locations).",
   :rdfs/label "availableAtOrFrom",
   :rdfs/subPropertyOf :schema/areaServed,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/Place})

(def availableChannel
  {:db/ident :schema/availableChannel,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A means of accessing the service (e.g. a phone bank, a web site, a location, etc.).",
   :rdfs/label "availableChannel",
   :schema/domainIncludes :schema/Service,
   :schema/rangeIncludes :schema/ServiceChannel})

(def availableDeliveryMethod
  {:db/ident           :schema/availableDeliveryMethod,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The delivery method(s) available for this offer.",
   :rdfs/label         "availableDeliveryMethod",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/DeliveryMethod})

(def availableFrom
  {:db/ident :schema/availableFrom,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "When the item is available for pickup from the store, locker, etc.",
   :rdfs/label "availableFrom",
   :schema/domainIncludes :schema/DeliveryEvent,
   :schema/rangeIncludes :schema/DateTime})

(def availableIn
  {:db/ident             :schema/availableIn,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The location in which the strength is available.",
   :rdfs/label           "availableIn",
   :schema/domainIncludes :schema/DrugStrength,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AdministrativeArea})

(def availableLanguage
  {:db/ident :schema/availableLanguage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A language someone may use with or at the item, service or place. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[inLanguage]].",
   :rdfs/label "availableLanguage",
   :schema/domainIncludes #{:schema/Course :schema/ContactPoint
                            :schema/LodgingBusiness :schema/ServiceChannel
                            :schema/TouristAttraction},
   :schema/rangeIncludes #{:schema/Text :schema/Language}})

(def availableOnDevice
  {:db/ident :schema/availableOnDevice,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Device required to run the application. Used in cases where a specific make/model is required to run the application.",
   :rdfs/label "availableOnDevice",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text})

(def availableService
  {:db/ident             :schema/availableService,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A medical service available from this provider.",
   :rdfs/label           "availableService",
   :schema/domainIncludes #{:schema/Hospital :schema/Physician
                            :schema/MedicalClinic},
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/MedicalProcedure :schema/MedicalTherapy
                           :schema/MedicalTest}})

(def availableStrength
  {:db/ident             :schema/availableStrength,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An available dosage strength for the drug.",
   :rdfs/label           "availableStrength",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/DrugStrength})

(def availableTest
  {:db/ident             :schema/availableTest,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A diagnostic test or procedure offered by this lab.",
   :rdfs/label           "availableTest",
   :schema/domainIncludes :schema/DiagnosticLab,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTest})

(def availableThrough
  {:db/ident :schema/availableThrough,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "After this date, the item will no longer be available for pickup.",
   :rdfs/label "availableThrough",
   :schema/domainIncludes :schema/DeliveryEvent,
   :schema/rangeIncludes :schema/DateTime})

(def award
  {:db/ident             :schema/award,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An award won by or for this item.",
   :rdfs/label           "award",
   :schema/domainIncludes #{:schema/Product :schema/CreativeWork
                            :schema/Organization :schema/Service
                            :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def awards
  {:db/ident            :schema/awards,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "Awards won by or for this item.",
   :rdfs/label          "awards",
   :schema/domainIncludes #{:schema/Product :schema/CreativeWork
                            :schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/award})

(def awayTeam
  {:db/ident           :schema/awayTeam,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The away team in a sports event.",
   :rdfs/label         "awayTeam",
   :rdfs/subPropertyOf :schema/competitor,
   :schema/domainIncludes :schema/SportsEvent,
   :schema/rangeIncludes #{:schema/SportsTeam :schema/Person}})

(def backstory
  {:db/ident :schema/backstory,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For an [[Article]], typically a [[NewsArticle]], the backstory property provides a textual summary giving a brief explanation of why and how an article was created. In a journalistic setting this could include information about reporting process, methods, interviews, data sources, etc.",
   :rdfs/label "backstory",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes :schema/Article,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1688"}})

(def bankAccountType
  {:db/ident :schema/bankAccountType,
   :rdf/type :rdf/Property,
   :rdfs/comment "The type of a bank account.",
   :rdfs/label "bankAccountType",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/BankAccount,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def baseSalary
  {:db/ident :schema/baseSalary,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The base salary of the job or of an employee in an EmployeeRole.",
   :rdfs/label "baseSalary",
   :schema/domainIncludes #{:schema/JobPosting :schema/EmployeeRole},
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/PriceSpecification
                           :schema/Number}})

(def bccRecipient
  {:db/ident :schema/bccRecipient,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of recipient. The recipient blind copied on a message.",
   :rdfs/label "bccRecipient",
   :rdfs/subPropertyOf :schema/recipient,
   :schema/domainIncludes :schema/Message,
   :schema/rangeIncludes #{:schema/ContactPoint :schema/Organization
                           :schema/Person}})

(def bed
  {:db/ident :schema/bed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of bed or beds included in the accommodation. For the single case of just one bed of a certain type, you use bed directly with a text.\n      If you want to indicate the quantity of a certain kind of bed, use an instance of BedDetails. For more detailed information, use the amenityFeature property.",
   :rdfs/label "bed",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes #{:schema/HotelRoom :schema/Suite
                            :schema/Accommodation},
   :schema/rangeIncludes #{:schema/Text :schema/BedType :schema/BedDetails}})

(def beforeMedia
  {:db/ident :schema/beforeMedia,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A media object representing the circumstances before performing this direction.",
   :rdfs/label "beforeMedia",
   :schema/domainIncludes :schema/HowToDirection,
   :schema/rangeIncludes #{:schema/MediaObject :schema/URL}})

(def beneficiaryBank
  {:db/ident :schema/beneficiaryBank,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A bank or bank’s branch, financial institution or international financial institution operating the beneficiary’s bank account or releasing funds for the beneficiary.",
   :rdfs/label "beneficiaryBank",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/MoneyTransfer,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/BankOrCreditUnion},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def benefits
  {:db/ident            :schema/benefits,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "Description of benefits associated with the job.",
   :rdfs/label          "benefits",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/jobBenefits})

(def benefitsSummaryUrl
  {:db/ident :schema/benefitsSummaryUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The URL that goes directly to the summary of benefits and coverage for the specific standard plan or plan variation.",
   :rdfs/label "benefitsSummaryUrl",
   :schema/domainIncludes :schema/HealthInsurancePlan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/URL,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def bestRating
  {:db/ident :schema/bestRating,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The highest value allowed in this rating system. If bestRating is omitted, 5 is assumed.",
   :rdfs/label "bestRating",
   :schema/domainIncludes :schema/Rating,
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def billingAddress
  {:db/ident             :schema/billingAddress,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The billing address for the order.",
   :rdfs/label           "billingAddress",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes :schema/PostalAddress})

(def billingDuration
  {:db/ident :schema/billingDuration,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies for how long this price (or price component) will be billed. Can be used, for example, to model the contractual duration of a subscription or payment plan. Type can be either a Duration or a Number (in which case the unit of measurement, for example month, is specified by the unitCode property).",
   :rdfs/label "billingDuration",
   :schema/domainIncludes :schema/UnitPriceSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue
                           :schema/Duration},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def billingIncrement
  {:db/ident :schema/billingIncrement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This property specifies the minimal quantity and rounding increment that will be the basis for the billing. The unit of measurement is specified by the unitCode property.",
   :rdfs/label "billingIncrement",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/UnitPriceSpecification,
   :schema/rangeIncludes :schema/Number})

(def billingPeriod
  {:db/ident             :schema/billingPeriod,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The time interval used to compute the invoice.",
   :rdfs/label           "billingPeriod",
   :schema/domainIncludes :schema/Invoice,
   :schema/rangeIncludes :schema/Duration})

(def billingStart
  {:db/ident :schema/billingStart,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies after how much time this price (or price component) becomes valid and billing starts. Can be used, for example, to model a price increase after the first year of a subscription. The unit of measurement is specified by the unitCode property.",
   :rdfs/label "billingStart",
   :schema/domainIncludes :schema/UnitPriceSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def bioChemInteraction
  {:db/ident :schema/bioChemInteraction,
   :rdf/type :rdf/Property,
   :rdfs/comment "A BioChemEntity that is known to interact with this item.",
   :rdfs/label "bioChemInteraction",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/BioChemEntity,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org"}})

(def bioChemSimilarity
  {:db/ident :schema/bioChemSimilarity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A similar BioChemEntity, e.g., obtained by fingerprint similarity algorithms.",
   :rdfs/label "bioChemSimilarity",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/BioChemEntity,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org"}})

(def biologicalRole
  {:db/ident :schema/biologicalRole,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A role played by the BioChemEntity within a biological context.",
   :rdfs/label "biologicalRole",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/DefinedTerm,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org"}})

(def biomechnicalClass
  {:db/ident             :schema/biomechnicalClass,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The biomechanical properties of the bone.",
   :rdfs/label           "biomechnicalClass",
   :schema/domainIncludes :schema/Joint,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def birthDate
  {:db/ident             :schema/birthDate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Date of birth.",
   :rdfs/label           "birthDate",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Date})

(def birthPlace
  {:db/ident             :schema/birthPlace,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The place where the person was born.",
   :rdfs/label           "birthPlace",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Place})

(def bitrate
  {:db/ident             :schema/bitrate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The bitrate of the media object.",
   :rdfs/label           "bitrate",
   :schema/domainIncludes :schema/MediaObject,
   :schema/rangeIncludes :schema/Text})

(def blogPost
  {:db/ident             :schema/blogPost,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A posting that is part of this blog.",
   :rdfs/label           "blogPost",
   :schema/domainIncludes :schema/Blog,
   :schema/rangeIncludes :schema/BlogPosting})

(def blogPosts
  {:db/ident :schema/blogPosts,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a post that is part of a [[Blog]]. Note that historically, what we term a \"Blog\" was once known as a \"weblog\", and that what we term a \"BlogPosting\" is now often colloquially referred to as a \"blog\".",
   :rdfs/label "blogPosts",
   :schema/domainIncludes :schema/Blog,
   :schema/rangeIncludes :schema/BlogPosting,
   :schema/supersededBy :schema/blogPost})

(def bloodSupply
  {:db/ident :schema/bloodSupply,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The blood vessel that carries blood from the heart to the muscle.",
   :rdfs/label "bloodSupply",
   :schema/domainIncludes :schema/Muscle,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Vessel})

(def boardingGroup
  {:db/ident :schema/boardingGroup,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The airline-specific indicator of boarding order / preference.",
   :rdfs/label "boardingGroup",
   :schema/domainIncludes :schema/FlightReservation,
   :schema/rangeIncludes :schema/Text})

(def boardingPolicy
  {:db/ident :schema/boardingPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of boarding policy used by the airline (e.g. zone-based or group-based).",
   :rdfs/label "boardingPolicy",
   :schema/domainIncludes #{:schema/Flight :schema/Airline},
   :schema/rangeIncludes :schema/BoardingPolicyType})

(def bodyLocation
  {:db/ident             :schema/bodyLocation,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Location in the body of the anatomical structure.",
   :rdfs/label           "bodyLocation",
   :schema/domainIncludes #{:schema/MedicalProcedure
                            :schema/AnatomicalStructure},
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def bodyType
  {:db/ident :schema/bodyType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the design and body style of the vehicle (e.g. station wagon, hatchback, etc.).",
   :rdfs/label "bodyType",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/QualitativeValue :schema/URL}})

(def bookEdition
  {:db/ident             :schema/bookEdition,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The edition of the book.",
   :rdfs/label           "bookEdition",
   :schema/domainIncludes :schema/Book,
   :schema/rangeIncludes :schema/Text})

(def bookFormat
  {:db/ident             :schema/bookFormat,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The format of the book.",
   :rdfs/label           "bookFormat",
   :schema/domainIncludes :schema/Book,
   :schema/rangeIncludes :schema/BookFormatType})

(def bookingAgent
  {:db/ident :schema/bookingAgent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "'bookingAgent' is an out-dated term indicating a 'broker' that serves as a booking agent.",
   :rdfs/label "bookingAgent",
   :schema/domainIncludes :schema/Reservation,
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/supersededBy :schema/broker})

(def bookingTime
  {:db/ident             :schema/bookingTime,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The date and time the reservation was booked.",
   :rdfs/label           "bookingTime",
   :schema/domainIncludes :schema/Reservation,
   :schema/rangeIncludes :schema/DateTime})

(def borrower
  {:db/ident :schema/borrower,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of participant. The person that borrows the object being lent.",
   :rdfs/label "borrower",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/LendAction,
   :schema/rangeIncludes :schema/Person})

(def box
  {:db/ident :schema/box,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A box is the area enclosed by the rectangle formed by two points. The first point is the lower corner, the second point is the upper corner. A box is expressed as two points separated by a space character.",
   :rdfs/label "box",
   :schema/domainIncludes :schema/GeoShape,
   :schema/rangeIncludes :schema/Text})

(def branch
  {:db/ident :schema/branch,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The branches that delineate from the nerve bundle. Not to be confused with [[branchOf]].",
   :rdfs/label "branch",
   :schema/domainIncludes :schema/Nerve,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AnatomicalStructure,
   :schema/supersededBy :schema/arterialBranch})

(def branchCode
  {:db/ident :schema/branchCode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A short textual code (also called \"store code\") that uniquely identifies a place of business. The code is typically assigned by the parentOrganization and used in structured URLs.\\n\\nFor example, in the URL http://www.starbucks.co.uk/store-locator/etc/detail/3047 the code \"3047\" is a branchCode for a particular branch.\n      ",
   :rdfs/label "branchCode",
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes :schema/Text})

(def branchOf
  {:db/ident :schema/branchOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The larger organization that this local business is a branch of, if any. Not to be confused with (anatomical) [[branch]].",
   :rdfs/label "branchOf",
   :schema/domainIncludes :schema/LocalBusiness,
   :schema/rangeIncludes :schema/Organization,
   :schema/supersededBy :schema/parentOrganization})

(def brand
  {:db/ident :schema/brand,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The brand(s) associated with a product or service, or the brand(s) maintained by an organization or business person.",
   :rdfs/label "brand",
   :schema/domainIncludes #{:schema/Product :schema/Organization :schema/Service
                            :schema/Person},
   :schema/rangeIncludes #{:schema/Brand :schema/Organization}})

(def breadcrumb
  {:db/ident :schema/breadcrumb,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A set of links that can help a user understand and navigate a website hierarchy.",
   :rdfs/label "breadcrumb",
   :schema/domainIncludes :schema/WebPage,
   :schema/rangeIncludes #{:schema/BreadcrumbList :schema/Text}})

(def breastfeedingWarning
  {:db/ident :schema/breastfeedingWarning,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any precaution, guidance, contraindication, etc. related to this drug's use by breastfeeding mothers.",
   :rdfs/label "breastfeedingWarning",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def broadcastAffiliateOf
  {:db/ident :schema/broadcastAffiliateOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The media network(s) whose content is broadcast on this station.",
   :rdfs/label "broadcastAffiliateOf",
   :schema/domainIncludes :schema/BroadcastService,
   :schema/rangeIncludes :schema/Organization})

(def broadcastChannelId
  {:db/ident :schema/broadcastChannelId,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The unique address by which the BroadcastService can be identified in a provider lineup. In US, this is typically a number.",
   :rdfs/label "broadcastChannelId",
   :schema/domainIncludes :schema/BroadcastChannel,
   :schema/rangeIncludes :schema/Text})

(def broadcastDisplayName
  {:db/ident :schema/broadcastDisplayName,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The name displayed in the channel guide. For many US affiliates, it is the network name.",
   :rdfs/label "broadcastDisplayName",
   :schema/domainIncludes :schema/BroadcastService,
   :schema/rangeIncludes :schema/Text})

(def broadcastFrequency
  {:db/ident :schema/broadcastFrequency,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The frequency used for over-the-air broadcasts. Numeric values or simple ranges, e.g. 87-99. In addition a shortcut idiom is supported for frequences of AM and FM radio channels, e.g. \"87 FM\".",
   :rdfs/label "broadcastFrequency",
   :schema/domainIncludes #{:schema/BroadcastChannel :schema/BroadcastService},
   :schema/rangeIncludes #{:schema/BroadcastFrequencySpecification
                           :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1004"}})

(def broadcastFrequencyValue
  {:db/ident :schema/broadcastFrequencyValue,
   :rdf/type :rdf/Property,
   :rdfs/comment "The frequency in MHz for a particular broadcast.",
   :rdfs/label "broadcastFrequencyValue",
   :schema/domainIncludes :schema/BroadcastFrequencySpecification,
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1004"}})

(def broadcastOfEvent
  {:db/ident :schema/broadcastOfEvent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The event being broadcast such as a sporting event or awards ceremony.",
   :rdfs/label "broadcastOfEvent",
   :schema/domainIncludes :schema/BroadcastEvent,
   :schema/rangeIncludes :schema/Event})

(def broadcastServiceTier
  {:db/ident :schema/broadcastServiceTier,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of service required to have access to the channel (e.g. Standard or Premium).",
   :rdfs/label "broadcastServiceTier",
   :schema/domainIncludes :schema/BroadcastChannel,
   :schema/rangeIncludes :schema/Text})

(def broadcastSignalModulation
  {:db/ident :schema/broadcastSignalModulation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The modulation (e.g. FM, AM, etc) used by a particular broadcast service.",
   :rdfs/label "broadcastSignalModulation",
   :schema/domainIncludes :schema/BroadcastFrequencySpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/QualitativeValue},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2111"}})

(def broadcastSubChannel
  {:db/ident :schema/broadcastSubChannel,
   :rdf/type :rdf/Property,
   :rdfs/comment "The subchannel used for the broadcast.",
   :rdfs/label "broadcastSubChannel",
   :schema/domainIncludes :schema/BroadcastFrequencySpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2111"}})

(def broadcastTimezone
  {:db/ident :schema/broadcastTimezone,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The timezone in [ISO 8601 format](http://en.wikipedia.org/wiki/ISO_8601) for which the service bases its broadcasts.",
   :rdfs/label "broadcastTimezone",
   :schema/domainIncludes :schema/BroadcastService,
   :schema/rangeIncludes :schema/Text})

(def broadcaster
  {:db/ident :schema/broadcaster,
   :rdf/type :rdf/Property,
   :rdfs/comment "The organization owning or operating the broadcast service.",
   :rdfs/label "broadcaster",
   :schema/domainIncludes :schema/BroadcastService,
   :schema/rangeIncludes :schema/Organization})

(def broker
  {:db/ident :schema/broker,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An entity that arranges for an exchange between a buyer and a seller.  In most cases a broker never acquires or releases ownership of a product or service involved in an exchange.  If it is not clear whether an entity is a broker, seller, or buyer, the latter two terms are preferred.",
   :rdfs/label "broker",
   :schema/domainIncludes #{:schema/Invoice :schema/Order :schema/Reservation
                            :schema/Service},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def browserRequirements
  {:db/ident :schema/browserRequirements,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies browser requirements in human-readable text. For example, 'requires HTML5 support'.",
   :rdfs/label "browserRequirements",
   :schema/domainIncludes :schema/WebApplication,
   :schema/rangeIncludes :schema/Text})

(def busName
  {:db/ident             :schema/busName,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The name of the bus (e.g. Bolt Express).",
   :rdfs/label           "busName",
   :schema/domainIncludes :schema/BusTrip,
   :schema/rangeIncludes :schema/Text})

(def busNumber
  {:db/ident             :schema/busNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The unique identifier for the bus.",
   :rdfs/label           "busNumber",
   :schema/domainIncludes :schema/BusTrip,
   :schema/rangeIncludes :schema/Text})

(def businessDays
  {:db/ident :schema/businessDays,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Days of the week when the merchant typically operates, indicated via opening hours markup.",
   :rdfs/label "businessDays",
   :schema/domainIncludes :schema/ShippingDeliveryTime,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/OpeningHoursSpecification,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def businessFunction
  {:db/ident :schema/businessFunction,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The business function (e.g. sell, lease, repair, dispose) of the offer or component of a bundle (TypeAndQuantityNode). The default is http://purl.org/goodrelations/v1#Sell.",
   :rdfs/label "businessFunction",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/TypeAndQuantityNode :schema/Demand
                            :schema/Offer},
   :schema/rangeIncludes :schema/BusinessFunction})

(def buyer
  {:db/ident :schema/buyer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of participant. The participant/person/organization that bought the object.",
   :rdfs/label "buyer",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/SellAction,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def byArtist
  {:db/ident             :schema/byArtist,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The artist that performed this album or recording.",
   :rdfs/label           "byArtist",
   :schema/domainIncludes #{:schema/MusicRecording :schema/MusicAlbum},
   :schema/rangeIncludes #{:schema/MusicGroup :schema/Person}})

(def byDay
  {:db/ident :schema/byDay,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines the day(s) of the week on which a recurring [[Event]] takes place. May be specified using either [[DayOfWeek]], or alternatively [[Text]] conforming to iCal's syntax for byDay recurrence rules.",
   :rdfs/label "byDay",
   :schema/domainIncludes :schema/Schedule,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DayOfWeek :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1457"}})

(def byMonth
  {:db/ident :schema/byMonth,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines the month(s) of the year on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-12. January is 1.",
   :rdfs/label "byMonth",
   :schema/domainIncludes :schema/Schedule,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1457"}})

(def byMonthDay
  {:db/ident :schema/byMonthDay,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines the day(s) of the month on which a recurring [[Event]] takes place. Specified as an [[Integer]] between 1-31.",
   :rdfs/label "byMonthDay",
   :schema/domainIncludes :schema/Schedule,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1457"}})

(def byMonthWeek
  {:db/ident :schema/byMonthWeek,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines the week(s) of the month on which a recurring Event takes place. Specified as an Integer between 1-5. For clarity, byMonthWeek is best used in conjunction with byDay to indicate concepts like the first and third Mondays of a month.",
   :rdfs/label "byMonthWeek",
   :schema/domainIncludes :schema/Schedule,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2599"}})

(def callSign
  {:db/ident :schema/callSign,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A [callsign](https://en.wikipedia.org/wiki/Call_sign), as used in broadcasting and radio communications to identify people, radio and TV stations, or vehicles.",
   :rdfs/label "callSign",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes #{:schema/Vehicle :schema/Person
                            :schema/BroadcastService},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2109"}})

(def calories
  {:db/ident             :schema/calories,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of calories.",
   :rdfs/label           "calories",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Energy})

(def candidate
  {:db/ident :schema/candidate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of object. The candidate subject of this action.",
   :rdfs/label "candidate",
   :rdfs/subPropertyOf :schema/object,
   :schema/domainIncludes :schema/VoteAction,
   :schema/rangeIncludes :schema/Person})

(def caption
  {:db/ident :schema/caption,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The caption for this object. For downloadable machine formats (closed caption, subtitles etc.) use MediaObject and indicate the [[encodingFormat]].",
   :rdfs/label "caption",
   :schema/domainIncludes #{:schema/ImageObject :schema/VideoObject
                            :schema/AudioObject},
   :schema/rangeIncludes #{:schema/MediaObject :schema/Text}})

(def carbohydrateContent
  {:db/ident             :schema/carbohydrateContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of grams of carbohydrates.",
   :rdfs/label           "carbohydrateContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def cargoVolume
  {:db/ident :schema/cargoVolume,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The available volume for cargo or luggage. For automobiles, this is usually the trunk volume.\\n\\nTypical unit code(s): LTR for liters, FTQ for cubic foot/feet\\n\\nNote: You can use [[minValue]] and [[maxValue]] to indicate ranges.",
   :rdfs/label "cargoVolume",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/QuantitativeValue})

(def carrier
  {:db/ident :schema/carrier,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "'carrier' is an out-dated term indicating the 'provider' for parcel delivery and flights.",
   :rdfs/label "carrier",
   :schema/domainIncludes #{:schema/ParcelDelivery :schema/Flight},
   :schema/rangeIncludes :schema/Organization,
   :schema/supersededBy :schema/provider})

(def carrierRequirements
  {:db/ident :schema/carrierRequirements,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies specific carrier(s) requirements for the application (e.g. an application may only work on a specific carrier network).",
   :rdfs/label "carrierRequirements",
   :schema/domainIncludes :schema/MobileApplication,
   :schema/rangeIncludes :schema/Text})

(def cashBack
  {:db/ident :schema/cashBack,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A cardholder benefit that pays the cardholder a small percentage of their net expenditures.",
   :rdfs/label "cashBack",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/PaymentCard,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Number :schema/Boolean},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def catalog
  {:db/ident            :schema/catalog,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A data catalog which contains this dataset.",
   :rdfs/label          "catalog",
   :schema/domainIncludes :schema/Dataset,
   :schema/rangeIncludes :schema/DataCatalog,
   :schema/supersededBy :schema/includedInDataCatalog})

(def catalogNumber
  {:db/ident           :schema/catalogNumber,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The catalog number for the release.",
   :rdfs/label         "catalogNumber",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicRelease,
   :schema/rangeIncludes :schema/Text})

(def category
  {:db/ident :schema/category,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A category for the item. Greater signs or slashes can be used to informally indicate a category hierarchy.",
   :rdfs/label "category",
   :schema/domainIncludes #{:schema/Recommendation :schema/SpecialAnnouncement
                            :schema/Product :schema/Invoice
                            :schema/PhysicalActivity :schema/Offer
                            :schema/ActionAccessSpecification :schema/Service},
   :schema/rangeIncludes #{:schema/CategoryCode :schema/Thing
                           :schema/PhysicalActivityCategory :schema/Text
                           :schema/URL},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1741"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2490"}}})

(def causeOf
  {:db/ident :schema/causeOf,
   :rdf/type :rdf/Property,
   :rdfs/comment "The condition, complication, symptom, sign, etc. caused.",
   :rdfs/label "causeOf",
   :schema/domainIncludes :schema/MedicalCause,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalEntity})

(def ccRecipient
  {:db/ident :schema/ccRecipient,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of recipient. The recipient copied on a message.",
   :rdfs/label "ccRecipient",
   :rdfs/subPropertyOf :schema/recipient,
   :schema/domainIncludes :schema/Message,
   :schema/rangeIncludes #{:schema/ContactPoint :schema/Organization
                           :schema/Person}})

(def character
  {:db/ident             :schema/character,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Fictional person connected with a creative work.",
   :rdfs/label           "character",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Person})

(def characterAttribute
  {:db/ident :schema/characterAttribute,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A piece of data that represents a particular aspect of a fictional character (skill, power, character points, advantage, disadvantage).",
   :rdfs/label "characterAttribute",
   :schema/domainIncludes #{:schema/Game :schema/VideoGameSeries},
   :schema/rangeIncludes :schema/Thing})

(def characterName
  {:db/ident :schema/characterName,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The name of a character played in some acting or performing role, i.e. in a PerformanceRole.",
   :rdfs/label "characterName",
   :schema/domainIncludes :schema/PerformanceRole,
   :schema/rangeIncludes :schema/Text})

(def cheatCode
  {:db/ident             :schema/cheatCode,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Cheat codes to the game.",
   :rdfs/label           "cheatCode",
   :schema/domainIncludes #{:schema/VideoGame :schema/VideoGameSeries},
   :schema/rangeIncludes :schema/CreativeWork})

(def checkinTime
  {:db/ident :schema/checkinTime,
   :rdf/type :rdf/Property,
   :rdfs/comment "The earliest someone may check into a lodging establishment.",
   :rdfs/label "checkinTime",
   :schema/domainIncludes #{:schema/LodgingBusiness :schema/LodgingReservation},
   :schema/rangeIncludes #{:schema/Time :schema/DateTime}})

(def checkoutPageURLTemplate
  {:db/ident :schema/checkoutPageURLTemplate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A URL template (RFC 6570) for a checkout page for an offer. This approach allows merchants to specify a URL for online checkout of the offered product, by interpolating parameters such as the logged in user ID, product ID, quantity, discount code etc. Parameter naming and standardization are not specified here.",
   :rdfs/label "checkoutPageURLTemplate",
   :schema/domainIncludes :schema/Offer,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3135"}})

(def checkoutTime
  {:db/ident :schema/checkoutTime,
   :rdf/type :rdf/Property,
   :rdfs/comment "The latest someone may check out of a lodging establishment.",
   :rdfs/label "checkoutTime",
   :schema/domainIncludes #{:schema/LodgingBusiness :schema/LodgingReservation},
   :schema/rangeIncludes #{:schema/Time :schema/DateTime}})

(def chemicalComposition
  {:db/ident :schema/chemicalComposition,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The chemical composition describes the identity and relative ratio of the chemical elements that make up the substance.",
   :rdfs/label "chemicalComposition",
   :schema/domainIncludes :schema/ChemicalSubstance,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/ChemicalSubstance"}})

(def chemicalRole
  {:db/ident :schema/chemicalRole,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A role played by the BioChemEntity within a chemical context.",
   :rdfs/label "chemicalRole",
   :schema/domainIncludes #{:schema/MolecularEntity :schema/ChemicalSubstance},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/DefinedTerm,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/ChemicalSubstance"}})

(def childMaxAge
  {:db/ident             :schema/childMaxAge,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Maximal age of the child.",
   :rdfs/label           "childMaxAge",
   :schema/domainIncludes :schema/ParentAudience,
   :schema/rangeIncludes :schema/Number})

(def childMinAge
  {:db/ident             :schema/childMinAge,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Minimal age of the child.",
   :rdfs/label           "childMinAge",
   :schema/domainIncludes :schema/ParentAudience,
   :schema/rangeIncludes :schema/Number})

(def childTaxon
  {:db/ident             :schema/childTaxon,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Closest child taxa of the taxon in question.",
   :rdfs/label           "childTaxon",
   :schema/domainIncludes :schema/Taxon,
   :schema/inverseOf     :schema/parentTaxon,
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Taxon :schema/Text :schema/URL},
   :schema/source        {:xsd/anyURI "http://www.bioschemas.org/Taxon"}})

(def children
  {:db/ident             :schema/children,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A child of the person.",
   :rdfs/label           "children",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person})

(def cholesterolContent
  {:db/ident             :schema/cholesterolContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of milligrams of cholesterol.",
   :rdfs/label           "cholesterolContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def circle
  {:db/ident :schema/circle,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A circle is the circular region of a specified radius centered at a specified latitude and longitude. A circle is expressed as a pair followed by a radius in meters.",
   :rdfs/label "circle",
   :schema/domainIncludes :schema/GeoShape,
   :schema/rangeIncludes :schema/Text})

(def citation
  {:db/ident :schema/citation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A citation or reference to another creative work, such as another publication, web page, scholarly article, etc.",
   :rdfs/label "citation",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/CreativeWork :schema/Text}})

(def claimInterpreter
  {:db/ident :schema/claimInterpreter,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For a [[Claim]] interpreted from [[MediaObject]] content\n    sed to indicate a claim contained, implied or refined from the content of a [[MediaObject]].",
   :rdfs/label "claimInterpreter",
   :schema/domainIncludes :schema/Claim,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def claimReviewed
  {:db/ident :schema/claimReviewed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A short summary of the specific claims reviewed in a ClaimReview.",
   :rdfs/label "claimReviewed",
   :schema/domainIncludes :schema/ClaimReview,
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1061"}})

(def clincalPharmacology
  {:db/ident :schema/clincalPharmacology,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).",
   :rdfs/label "clincalPharmacology",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/clinicalPharmacology})

(def clinicalPharmacology
  {:db/ident :schema/clinicalPharmacology,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Description of the absorption and elimination of drugs, including their concentration (pharmacokinetics, pK) and biological effects (pharmacodynamics, pD).",
   :rdfs/label "clinicalPharmacology",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def clipNumber
  {:db/ident           :schema/clipNumber,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "Position of the clip within an ordered group of clips.",
   :rdfs/label         "clipNumber",
   :rdfs/subPropertyOf :schema/position,
   :schema/domainIncludes :schema/Clip,
   :schema/rangeIncludes #{:schema/Integer :schema/Text}})

(def closes
  {:db/ident :schema/closes,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The closing hour of the place or service on the given day(s) of the week.",
   :rdfs/label "closes",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/OpeningHoursSpecification,
   :schema/rangeIncludes :schema/Time})

(def coach
  {:db/ident :schema/coach,
   :rdf/type :rdf/Property,
   :rdfs/comment "A person that acts in a coaching role for a sports team.",
   :rdfs/label "coach",
   :schema/domainIncludes :schema/SportsTeam,
   :schema/rangeIncludes :schema/Person})

(def code
  {:db/ident :schema/code,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A medical code for the entity, taken from a controlled vocabulary or ontology such as ICD-9, DiseasesDB, MeSH, SNOMED-CT, RxNorm, etc.",
   :rdfs/label "code",
   :schema/domainIncludes :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalCode})

(def codeRepository
  {:db/ident :schema/codeRepository,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Link to the repository where the un-compiled, human readable code and related code is located (SVN, GitHub, CodePlex).",
   :rdfs/label "codeRepository",
   :schema/domainIncludes :schema/SoftwareSourceCode,
   :schema/rangeIncludes :schema/URL})

(def codeSampleType
  {:db/ident :schema/codeSampleType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.",
   :rdfs/label "codeSampleType",
   :schema/domainIncludes :schema/SoftwareSourceCode,
   :schema/rangeIncludes :schema/Text})

(def codeValue
  {:db/ident :schema/codeValue,
   :rdf/type :rdf/Property,
   :rdfs/comment "A short textual code that uniquely identifies the value.",
   :rdfs/label "codeValue",
   :rdfs/subPropertyOf :schema/termCode,
   :schema/domainIncludes #{:schema/CategoryCode :schema/MedicalCode},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/894"}})

(def codingSystem
  {:db/ident             :schema/codingSystem,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The coding system, e.g. 'ICD-10'.",
   :rdfs/label           "codingSystem",
   :schema/domainIncludes :schema/MedicalCode,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def colleague
  {:db/ident             :schema/colleague,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A colleague of the person.",
   :rdfs/label           "colleague",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes #{:schema/URL :schema/Person}})

(def colleagues
  {:db/ident            :schema/colleagues,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A colleague of the person.",
   :rdfs/label          "colleagues",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person,
   :schema/supersededBy :schema/colleague})

(def collection
  {:db/ident :schema/collection,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of object. The collection target of the action.",
   :rdfs/label "collection",
   :rdfs/subPropertyOf :schema/object,
   :schema/domainIncludes :schema/UpdateAction,
   :schema/rangeIncludes :schema/Thing,
   :schema/supersededBy :schema/targetCollection})

(def collectionSize
  {:db/ident :schema/collectionSize,
   :rdf/type :rdf/Property,
   :rdfs/comment {:rdf/language "en",
                  :rdf/value    "The number of items in the [[Collection]]."},
   :rdfs/label {:rdf/language "en",
                :rdf/value    "collectionSize"},
   :schema/domainIncludes :schema/Collection,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1759"}})

(def color
  {:db/ident           :schema/color,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The color of the product.",
   :rdfs/label         "color",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/Product,
   :schema/rangeIncludes :schema/Text})

(def colorist
  {:db/ident             :schema/colorist,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The individual who adds color to inked drawings.",
   :rdfs/label           "colorist",
   :schema/domainIncludes #{:schema/VisualArtwork :schema/ComicStory
                            :schema/ComicIssue},
   :schema/isPartOf      {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Person})

(def comment
  {:db/ident             :schema/comment,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Comments, typically from users.",
   :rdfs/label           "comment",
   :schema/domainIncludes #{:schema/CreativeWork :schema/RsvpAction},
   :schema/rangeIncludes :schema/Comment})

(def commentCount
  {:db/ident :schema/commentCount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of comments this CreativeWork (e.g. Article, Question or Answer) has received. This is most applicable to works published in Web sites with commenting system; additional comments may exist elsewhere.",
   :rdfs/label "commentCount",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Integer})

(def commentText
  {:db/ident             :schema/commentText,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The text of the UserComment.",
   :rdfs/label           "commentText",
   :schema/domainIncludes :schema/UserComments,
   :schema/rangeIncludes :schema/Text})

(def commentTime
  {:db/ident             :schema/commentTime,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The time at which the UserComment was made.",
   :rdfs/label           "commentTime",
   :schema/domainIncludes :schema/UserComments,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def competencyRequired
  {:db/ident :schema/competencyRequired,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Knowledge, skill, ability or personal attribute that must be demonstrated by a person or other entity in order to do something such as earn an Educational Occupational Credential or understand a LearningResource.",
   :rdfs/label "competencyRequired",
   :schema/domainIncludes #{:schema/LearningResource
                            :schema/EducationalOccupationalCredential},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1779"}})

(def competitor
  {:db/ident             :schema/competitor,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A competitor in a sports event.",
   :rdfs/label           "competitor",
   :schema/domainIncludes :schema/SportsEvent,
   :schema/rangeIncludes #{:schema/SportsTeam :schema/Person}})

(def composer
  {:db/ident :schema/composer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The person or organization who wrote a composition, or who is the composer of a work performed at some event.",
   :rdfs/label "composer",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes #{:schema/Event :schema/MusicComposition},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def comprisedOf
  {:db/ident :schema/comprisedOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifying something physically contained by something else. Typically used here for the underlying anatomical structures, such as organs, that comprise the anatomical system.",
   :rdfs/label "comprisedOf",
   :schema/domainIncludes :schema/AnatomicalSystem,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/AnatomicalStructure
                           :schema/AnatomicalSystem}})

(def conditionsOfAccess
  {:db/ident :schema/conditionsOfAccess,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Conditions that affect the availability of, or method(s) of access to, an item. Typically used for real world items such as an [[ArchiveComponent]] held by an [[ArchiveOrganization]]. This property is not suitable for use as a general Web access control mechanism. It is expressed only in natural language.\\n\\nFor example \"Available by appointment from the Reading Room\" or \"Accessible only from logged-in accounts \". ",
   :rdfs/label "conditionsOfAccess",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2173"}})

(def confirmationNumber
  {:db/ident :schema/confirmationNumber,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A number that confirms the given order or payment has been received.",
   :rdfs/label "confirmationNumber",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes #{:schema/Invoice :schema/Order},
   :schema/rangeIncludes :schema/Text})

(def connectedTo
  {:db/ident :schema/connectedTo,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Other anatomical structures to which this structure is connected.",
   :rdfs/label "connectedTo",
   :schema/domainIncludes :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AnatomicalStructure})

(def constraintProperty
  {:db/ident :schema/constraintProperty,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a property used as a constraint. For example, in the definition of a [[StatisticalVariable]]. The value is a property, either from within Schema.org or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org. ",
   :rdfs/label "constraintProperty",
   :schema/domainIncludes :schema/ConstraintNode,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Property :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2291"}})

(def contactOption
  {:db/ident :schema/contactOption,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An option available on this contact point (e.g. a toll-free number or support for hearing-impaired callers).",
   :rdfs/label "contactOption",
   :schema/domainIncludes :schema/ContactPoint,
   :schema/rangeIncludes :schema/ContactPointOption})

(def contactPoint
  {:db/ident             :schema/contactPoint,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A contact point for a person or organization.",
   :rdfs/label           "contactPoint",
   :schema/domainIncludes #{:schema/HealthInsurancePlan :schema/Organization
                            :schema/Person},
   :schema/rangeIncludes :schema/ContactPoint})

(def contactPoints
  {:db/ident            :schema/contactPoints,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A contact point for a person or organization.",
   :rdfs/label          "contactPoints",
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/ContactPoint,
   :schema/supersededBy :schema/contactPoint})

(def contactType
  {:db/ident :schema/contactType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A person or organization can have different contact points, for different purposes. For example, a sales contact point, a PR contact point and so on. This property is used to specify the kind of contact point.",
   :rdfs/label "contactType",
   :schema/domainIncludes :schema/ContactPoint,
   :schema/rangeIncludes :schema/Text})

(def contactlessPayment
  {:db/ident :schema/contactlessPayment,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A secure method for consumers to purchase products or services via debit, credit or smartcards by using RFID or NFC technology.",
   :rdfs/label "contactlessPayment",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/PaymentCard,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def containedIn
  {:db/ident :schema/containedIn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The basic containment relation between a place and one that contains it.",
   :rdfs/label "containedIn",
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes :schema/Place,
   :schema/supersededBy :schema/containedInPlace})

(def containedInPlace
  {:db/ident :schema/containedInPlace,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The basic containment relation between a place and one that contains it.",
   :rdfs/label "containedInPlace",
   :schema/domainIncludes :schema/Place,
   :schema/inverseOf :schema/containsPlace,
   :schema/rangeIncludes :schema/Place})

(def containsPlace
  {:db/ident :schema/containsPlace,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The basic containment relation between a place and another that it contains.",
   :rdfs/label "containsPlace",
   :schema/domainIncludes :schema/Place,
   :schema/inverseOf :schema/containedInPlace,
   :schema/rangeIncludes :schema/Place})

(def containsSeason
  {:db/ident           :schema/containsSeason,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "A season that is part of the media series.",
   :rdfs/label         "containsSeason",
   :rdfs/subPropertyOf :schema/hasPart,
   :schema/domainIncludes #{:schema/TVSeries :schema/VideoGameSeries
                            :schema/RadioSeries},
   :schema/rangeIncludes :schema/CreativeWorkSeason})

(def contentLocation
  {:db/ident :schema/contentLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The location depicted or described in the content. For example, the location in a photograph or painting.",
   :rdfs/label "contentLocation",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Place})

(def contentRating
  {:db/ident :schema/contentRating,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Official rating of a piece of content&#x2014;for example, 'MPAA PG-13'.",
   :rdfs/label "contentRating",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Rating :schema/Text}})

(def contentReferenceTime
  {:db/ident :schema/contentReferenceTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The specific time described by a creative work, for works (e.g. articles, video objects etc.) that emphasise a particular moment within an Event.",
   :rdfs/label "contentReferenceTime",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/DateTime,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1050"}})

(def contentSize
  {:db/ident             :schema/contentSize,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "File size in (mega/kilo)bytes.",
   :rdfs/label           "contentSize",
   :schema/domainIncludes :schema/MediaObject,
   :schema/rangeIncludes :schema/Text})

(def contentType
  {:db/ident :schema/contentType,
   :rdf/type :rdf/Property,
   :rdfs/comment "The supported content type(s) for an EntryPoint response.",
   :rdfs/label "contentType",
   :schema/domainIncludes :schema/EntryPoint,
   :schema/rangeIncludes :schema/Text})

(def contentUrl
  {:db/ident :schema/contentUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Actual bytes of the media object, for example the image file or video file.",
   :rdfs/label "contentUrl",
   :schema/domainIncludes :schema/MediaObject,
   :schema/rangeIncludes :schema/URL})

(def contraindication
  {:db/ident             :schema/contraindication,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A contraindication for this therapy.",
   :rdfs/label           "contraindication",
   :schema/domainIncludes #{:schema/MedicalTherapy :schema/MedicalDevice},
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/MedicalContraindication :schema/Text}})

(def contributor
  {:db/ident :schema/contributor,
   :rdf/type :rdf/Property,
   :rdfs/comment "A secondary contributor to the CreativeWork or Event.",
   :rdfs/label "contributor",
   :schema/domainIncludes #{:schema/CreativeWork :schema/Event},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def cookTime
  {:db/ident :schema/cookTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The time it takes to actually cook the dish, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).",
   :rdfs/label "cookTime",
   :rdfs/subPropertyOf :schema/performTime,
   :schema/domainIncludes :schema/Recipe,
   :schema/rangeIncludes :schema/Duration})

(def cookingMethod
  {:db/ident             :schema/cookingMethod,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The method of cooking, such as Frying, Steaming, ...",
   :rdfs/label           "cookingMethod",
   :schema/domainIncludes :schema/Recipe,
   :schema/rangeIncludes :schema/Text})

(def copyrightHolder
  {:db/ident :schema/copyrightHolder,
   :rdf/type :rdf/Property,
   :rdfs/comment "The party holding the legal copyright to the CreativeWork.",
   :rdfs/label "copyrightHolder",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def copyrightNotice
  {:db/ident :schema/copyrightNotice,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Text of a notice appropriate for describing the copyright aspects of this Creative Work, ideally indicating the owner of the copyright for the Work.",
   :rdfs/label "copyrightNotice",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2659"}})

(def copyrightYear
  {:db/ident :schema/copyrightYear,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The year during which the claimed copyright for the CreativeWork was first asserted.",
   :rdfs/label "copyrightYear",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Number})

(def correction
  {:db/ident :schema/correction,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a correction to a [[CreativeWork]], either via a [[CorrectionComment]], textually or in another document.",
   :rdfs/label "correction",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CorrectionComment :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1950"}})

(def correctionsPolicy
  {:db/ident :schema/correctionsPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For an [[Organization]] (e.g. [[NewsMediaOrganization]]), a statement describing (in news media, the newsroom’s) disclosure and correction policy for errors.",
   :rdfs/label "correctionsPolicy",
   :rdfs/subPropertyOf :schema/publishingPrinciples,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes #{:schema/NewsMediaOrganization :schema/Organization},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def costCategory
  {:db/ident :schema/costCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The category of cost, such as wholesale, retail, reimbursement cap, etc.",
   :rdfs/label "costCategory",
   :schema/domainIncludes :schema/DrugCost,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/DrugCostCategory})

(def costCurrency
  {:db/ident :schema/costCurrency,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The currency (in 3-letter) of the drug cost. See: http://en.wikipedia.org/wiki/ISO_4217. ",
   :rdfs/label "costCurrency",
   :schema/domainIncludes :schema/DrugCost,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def costOrigin
  {:db/ident :schema/costOrigin,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Additional details to capture the origin of the cost data. For example, 'Medicare Part B'.",
   :rdfs/label "costOrigin",
   :schema/domainIncludes :schema/DrugCost,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def costPerUnit
  {:db/ident             :schema/costPerUnit,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The cost per unit of the drug.",
   :rdfs/label           "costPerUnit",
   :schema/domainIncludes :schema/DrugCost,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/Number :schema/Text
                           :schema/QualitativeValue}})

(def countriesNotSupported
  {:db/ident :schema/countriesNotSupported,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Countries for which the application is not supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
   :rdfs/label "countriesNotSupported",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text})

(def countriesSupported
  {:db/ident :schema/countriesSupported,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Countries for which the application is supported. You can also provide the two-letter ISO 3166-1 alpha-2 country code.",
   :rdfs/label "countriesSupported",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text})

(def countryOfAssembly
  {:db/ident             :schema/countryOfAssembly,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The place where the product was assembled.",
   :rdfs/label           "countryOfAssembly",
   :schema/domainIncludes :schema/Product,
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source        {:xsd/anyURI
                          "https://github.com/schemaorg/schemaorg/issues/991"}})

(def countryOfLastProcessing
  {:db/ident :schema/countryOfLastProcessing,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The place where the item (typically [[Product]]) was last processed and tested before importation.",
   :rdfs/label "countryOfLastProcessing",
   :schema/domainIncludes :schema/Product,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/991"}})

(def countryOfOrigin
  {:db/ident :schema/countryOfOrigin,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The country of origin of something, including products as well as creative  works such as movie and TV content.\n\nIn the case of TV and movie, this would be the country of the principle offices of the production company or individual responsible for the movie. For other kinds of [[CreativeWork]] it is difficult to provide fully general guidance, and properties such as [[contentLocation]] and [[locationCreated]] may be more applicable.\n\nIn the case of products, the country of origin of the product. The exact interpretation of this may vary by context and product type, and cannot be fully enumerated here.",
   :rdfs/label "countryOfOrigin",
   :schema/domainIncludes #{:schema/Product :schema/TVSeries :schema/TVEpisode
                            :schema/CreativeWork :schema/Movie
                            :schema/TVSeason},
   :schema/rangeIncludes :schema/Country})

(def course
  {:db/ident :schema/course,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of location. The course where this action was taken.",
   :rdfs/label "course",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/ExerciseAction,
   :schema/rangeIncludes :schema/Place,
   :schema/supersededBy :schema/exerciseCourse})

(def courseCode
  {:db/ident :schema/courseCode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The identifier for the [[Course]] used by the course [[provider]] (e.g. CS101 or 6.001).",
   :rdfs/label "courseCode",
   :schema/domainIncludes :schema/Course,
   :schema/rangeIncludes :schema/Text})

(def courseMode
  {:db/ident :schema/courseMode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The medium or means of delivery of the course instance or the mode of study, either as a text label (e.g. \"online\", \"onsite\" or \"blended\"; \"synchronous\" or \"asynchronous\"; \"full-time\" or \"part-time\") or as a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous).",
   :rdfs/label "courseMode",
   :schema/domainIncludes :schema/CourseInstance,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def coursePrerequisites
  {:db/ident :schema/coursePrerequisites,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Requirements for taking the Course. May be completion of another [[Course]] or a textual description like \"permission of instructor\". Requirements may be a pre-requisite competency, referenced using [[AlignmentObject]].",
   :rdfs/label "coursePrerequisites",
   :schema/domainIncludes :schema/Course,
   :schema/rangeIncludes #{:schema/Course :schema/Text
                           :schema/AlignmentObject}})

(def courseSchedule
  {:db/ident :schema/courseSchedule,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents the length and pace of a course, expressed as a [[Schedule]].",
   :rdfs/label "courseSchedule",
   :schema/domainIncludes :schema/CourseInstance,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Schedule,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3281"}})

(def courseWorkload
  {:db/ident :schema/courseWorkload,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The amount of work expected of students taking the course, often provided as a figure per week or per month, and may be broken down by type. For example, \"2 hours of lectures, 1 hour of lab work and 3 hours of independent study per week\".",
   :rdfs/label "courseWorkload",
   :schema/domainIncludes :schema/CourseInstance,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1909"}})

(def coverageEndTime
  {:db/ident :schema/coverageEndTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The time when the live blog will stop covering the Event. Note that coverage may continue after the Event concludes.",
   :rdfs/label "coverageEndTime",
   :schema/domainIncludes :schema/LiveBlogPosting,
   :schema/rangeIncludes :schema/DateTime})

(def coverageStartTime
  {:db/ident :schema/coverageStartTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The time when the live blog will begin covering the Event. Note that coverage may begin before the Event's start time. The LiveBlogPosting may also be created before coverage begins.",
   :rdfs/label "coverageStartTime",
   :schema/domainIncludes :schema/LiveBlogPosting,
   :schema/rangeIncludes :schema/DateTime})

(def creativeWorkStatus
  {:db/ident :schema/creativeWorkStatus,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The status of a creative work in terms of its stage in a lifecycle. Example terms include Incomplete, Draft, Published, Obsolete. Some organizations define a set of terms for the stages of their publication lifecycle.",
   :rdfs/label "creativeWorkStatus",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/987"}})

(def creator
  {:db/ident :schema/creator,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The creator/author of this CreativeWork. This is the same as the Author property for CreativeWork.",
   :rdfs/label "creator",
   :schema/domainIncludes #{:schema/CreativeWork :schema/UserComments},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def credentialCategory
  {:db/ident :schema/credentialCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The category or type of credential being described, for example \"degree”, “certificate”, “badge”, or more specific term.",
   :rdfs/label "credentialCategory",
   :schema/domainIncludes :schema/EducationalOccupationalCredential,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1779"}})

(def creditText
  {:db/ident :schema/creditText,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Text that can be used to credit person(s) and/or organization(s) associated with a published Creative Work.",
   :rdfs/label "creditText",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2659"}})

(def creditedTo
  {:db/ident :schema/creditedTo,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The group the release is credited to if different than the byArtist. For example, Red and Blue is credited to \"Stefani Germanotta Band\", but by Lady Gaga.",
   :rdfs/label "creditedTo",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicRelease,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def cssSelector
  {:db/ident :schema/cssSelector,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A CSS selector, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual \"Web page element\".",
   :rdfs/label "cssSelector",
   :schema/domainIncludes #{:schema/SpeakableSpecification
                            :schema/WebPageElement},
   :schema/rangeIncludes :schema/CssSelectorType,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1389"}})

(def currenciesAccepted
  {:db/ident :schema/currenciesAccepted,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The currency accepted.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".",
   :rdfs/label "currenciesAccepted",
   :schema/domainIncludes :schema/LocalBusiness,
   :schema/rangeIncludes :schema/Text})

(def currency
  {:db/ident :schema/currency,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The currency in which the monetary amount is expressed.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".",
   :rdfs/label "currency",
   :schema/domainIncludes
   #{:schema/MonetaryAmount :schema/DatedMoneySpecification
     :schema/MonetaryAmountDistribution :schema/LoanOrCredit
     :schema/ExchangeRateSpecification},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def currentExchangeRate
  {:db/ident :schema/currentExchangeRate,
   :rdf/type :rdf/Property,
   :rdfs/comment "The current price of a currency.",
   :rdfs/label "currentExchangeRate",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/ExchangeRateSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/UnitPriceSpecification,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def customer
  {:db/ident             :schema/customer,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Party placing the order or paying the invoice.",
   :rdfs/label           "customer",
   :schema/domainIncludes #{:schema/Invoice :schema/Order},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def customerRemorseReturnFees
  {:db/ident :schema/customerRemorseReturnFees,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of return fees if the product is returned due to customer remorse.",
   :rdfs/label "customerRemorseReturnFees",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ReturnFeesEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def customerRemorseReturnLabelSource
  {:db/ident :schema/customerRemorseReturnLabelSource,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The method (from an enumeration) by which the customer obtains a return shipping label for a product returned due to customer remorse.",
   :rdfs/label "customerRemorseReturnLabelSource",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ReturnLabelSourceEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def customerRemorseReturnShippingFeesAmount
  {:db/ident :schema/customerRemorseReturnShippingFeesAmount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The amount of shipping costs if a product is returned due to customer remorse. Applicable when property [[customerRemorseReturnFees]] equals [[ReturnShippingFees]].",
   :rdfs/label "customerRemorseReturnShippingFeesAmount",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def cutoffTime
  {:db/ident :schema/cutoffTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Order cutoff time allows merchants to describe the time after which they will no longer process orders received on that day. For orders processed after cutoff time, one day gets added to the delivery time estimate. This property is expected to be most typically used via the [[ShippingRateSettings]] publication pattern. The time is indicated using the ISO-8601 Time format, e.g. \"23:30:00-05:00\" would represent 6:30 pm Eastern Standard Time (EST) which is 5 hours behind Coordinated Universal Time (UTC).",
   :rdfs/label "cutoffTime",
   :schema/domainIncludes :schema/ShippingDeliveryTime,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Time,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def cvdCollectionDate
  {:db/ident :schema/cvdCollectionDate,
   :rdf/type :rdf/Property,
   :rdfs/comment "collectiondate - Date for which patient counts are reported.",
   :rdfs/label "cvdCollectionDate",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/DateTime},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdFacilityCounty
  {:db/ident :schema/cvdFacilityCounty,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Name of the County of the NHSN facility that this data record applies to. Use [[cvdFacilityId]] to identify the facility. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.",
   :rdfs/label "cvdFacilityCounty",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdFacilityId
  {:db/ident :schema/cvdFacilityId,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Identifier of the NHSN facility that this data record applies to. Use [[cvdFacilityCounty]] to indicate the county. To provide other details, [[healthcareReportingData]] can be used on a [[Hospital]] entry.",
   :rdfs/label "cvdFacilityId",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumBeds
  {:db/ident :schema/cvdNumBeds,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numbeds - HOSPITAL INPATIENT BEDS: Inpatient beds, including all staffed, licensed, and overflow (surge) beds used for inpatients.",
   :rdfs/label "cvdNumBeds",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumBedsOcc
  {:db/ident :schema/cvdNumBedsOcc,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numbedsocc - HOSPITAL INPATIENT BED OCCUPANCY: Total number of staffed inpatient beds that are occupied.",
   :rdfs/label "cvdNumBedsOcc",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumC19Died
  {:db/ident :schema/cvdNumC19Died,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numc19died - DEATHS: Patients with suspected or confirmed COVID-19 who died in the hospital, ED, or any overflow location.",
   :rdfs/label "cvdNumC19Died",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumC19HOPats
  {:db/ident :schema/cvdNumC19HOPats,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numc19hopats - HOSPITAL ONSET: Patients hospitalized in an NHSN inpatient care location with onset of suspected or confirmed COVID-19 14 or more days after hospitalization.",
   :rdfs/label "cvdNumC19HOPats",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumC19HospPats
  {:db/ident :schema/cvdNumC19HospPats,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numc19hosppats - HOSPITALIZED: Patients currently hospitalized in an inpatient care location who have suspected or confirmed COVID-19.",
   :rdfs/label "cvdNumC19HospPats",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumC19MechVentPats
  {:db/ident :schema/cvdNumC19MechVentPats,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numc19mechventpats - HOSPITALIZED and VENTILATED: Patients hospitalized in an NHSN inpatient care location who have suspected or confirmed COVID-19 and are on a mechanical ventilator.",
   :rdfs/label "cvdNumC19MechVentPats",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumC19OFMechVentPats
  {:db/ident :schema/cvdNumC19OFMechVentPats,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numc19ofmechventpats - ED/OVERFLOW and VENTILATED: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed and on a mechanical ventilator.",
   :rdfs/label "cvdNumC19OFMechVentPats",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumC19OverflowPats
  {:db/ident :schema/cvdNumC19OverflowPats,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numc19overflowpats - ED/OVERFLOW: Patients with suspected or confirmed COVID-19 who are in the ED or any overflow location awaiting an inpatient bed.",
   :rdfs/label "cvdNumC19OverflowPats",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumICUBeds
  {:db/ident :schema/cvdNumICUBeds,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numicubeds - ICU BEDS: Total number of staffed inpatient intensive care unit (ICU) beds.",
   :rdfs/label "cvdNumICUBeds",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumICUBedsOcc
  {:db/ident :schema/cvdNumICUBedsOcc,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numicubedsocc - ICU BED OCCUPANCY: Total number of staffed inpatient ICU beds that are occupied.",
   :rdfs/label "cvdNumICUBedsOcc",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumTotBeds
  {:db/ident :schema/cvdNumTotBeds,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numtotbeds - ALL HOSPITAL BEDS: Total number of all inpatient and outpatient beds, including all staffed, ICU, licensed, and overflow (surge) beds used for inpatients or outpatients.",
   :rdfs/label "cvdNumTotBeds",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumVent
  {:db/ident :schema/cvdNumVent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numvent - MECHANICAL VENTILATORS: Total number of ventilators available.",
   :rdfs/label "cvdNumVent",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def cvdNumVentUse
  {:db/ident :schema/cvdNumVentUse,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "numventuse - MECHANICAL VENTILATORS IN USE: Total number of ventilators in use.",
   :rdfs/label "cvdNumVentUse",
   :schema/domainIncludes :schema/CDCPMDRecord,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def dataFeedElement
  {:db/ident :schema/dataFeedElement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An item within a data feed. Data feeds may have many elements.",
   :rdfs/label "dataFeedElement",
   :schema/domainIncludes :schema/DataFeed,
   :schema/rangeIncludes #{:schema/DataFeedItem :schema/Thing :schema/Text}})

(def dataset
  {:db/ident             :schema/dataset,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A dataset contained in this catalog.",
   :rdfs/label           "dataset",
   :schema/domainIncludes :schema/DataCatalog,
   :schema/inverseOf     :schema/includedInDataCatalog,
   :schema/rangeIncludes :schema/Dataset})

(def datasetTimeInterval
  {:db/ident :schema/datasetTimeInterval,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The range of temporal applicability of a dataset, e.g. for a 2011 census dataset, the year 2011 (in ISO 8601 time interval format).",
   :rdfs/label "datasetTimeInterval",
   :schema/domainIncludes :schema/Dataset,
   :schema/rangeIncludes :schema/DateTime,
   :schema/supersededBy :schema/temporalCoverage})

(def dateCreated
  {:db/ident :schema/dateCreated,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date on which the CreativeWork was created or the item was added to a DataFeed.",
   :rdfs/label "dateCreated",
   :schema/domainIncludes #{:schema/CreativeWork :schema/DataFeedItem},
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def dateDeleted
  {:db/ident             :schema/dateDeleted,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The datetime the item was removed from the DataFeed.",
   :rdfs/label           "dateDeleted",
   :schema/domainIncludes :schema/DataFeedItem,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def dateIssued
  {:db/ident             :schema/dateIssued,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The date the ticket was issued.",
   :rdfs/label           "dateIssued",
   :schema/domainIncludes :schema/Ticket,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def dateModified
  {:db/ident :schema/dateModified,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date on which the CreativeWork was most recently modified or when the item's entry was modified within a DataFeed.",
   :rdfs/label "dateModified",
   :schema/domainIncludes #{:schema/CreativeWork :schema/DataFeedItem},
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def datePosted
  {:db/ident :schema/datePosted,
   :rdf/type :rdf/Property,
   :rdfs/comment "Publication date of an online listing.",
   :rdfs/label "datePosted",
   :schema/domainIncludes #{:schema/SpecialAnnouncement :schema/JobPosting
                            :schema/RealEstateListing :schema/CDCPMDRecord},
   :schema/rangeIncludes #{:schema/Date :schema/DateTime},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2521"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2490"}}})

(def datePublished
  {:db/ident             :schema/datePublished,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Date of first broadcast/publication.",
   :rdfs/label           "datePublished",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def dateRead
  {:db/ident :schema/dateRead,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date/time at which the message has been read by the recipient if a single recipient exists.",
   :rdfs/label "dateRead",
   :schema/domainIncludes :schema/Message,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def dateReceived
  {:db/ident :schema/dateReceived,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date/time the message was received if a single recipient exists.",
   :rdfs/label "dateReceived",
   :schema/domainIncludes :schema/Message,
   :schema/rangeIncludes :schema/DateTime})

(def dateSent
  {:db/ident             :schema/dateSent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The date/time at which the message was sent.",
   :rdfs/label           "dateSent",
   :schema/domainIncludes :schema/Message,
   :schema/rangeIncludes :schema/DateTime})

(def dateVehicleFirstRegistered
  {:db/ident :schema/dateVehicleFirstRegistered,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date of the first registration of the vehicle with the respective public authorities.",
   :rdfs/label "dateVehicleFirstRegistered",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/Date})

(def dateline
  {:db/ident :schema/dateline,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A [dateline](https://en.wikipedia.org/wiki/Dateline) is a brief piece of text included in news articles that describes where and when the story was written or filed though the date is often omitted. Sometimes only a placename is provided.\n\nStructured representations of dateline-related information can also be expressed more explicitly using [[locationCreated]] (which represents where a work was created, e.g. where a news report was written).  For location depicted or described in the content, use [[contentLocation]].\n\nDateline summaries are oriented more towards human readers than towards automated processing, and can vary substantially. Some examples: \"BEIRUT, Lebanon, June 2.\", \"Paris, France\", \"December 19, 2017 11:43AM Reporting from Washington\", \"Beijing/Moscow\", \"QUEZON CITY, Philippines\".\n      ",
   :rdfs/label "dateline",
   :schema/domainIncludes :schema/NewsArticle,
   :schema/rangeIncludes :schema/Text})

(def dayOfWeek
  {:db/ident :schema/dayOfWeek,
   :rdf/type :rdf/Property,
   :rdfs/comment "The day of the week for which these opening hours are valid.",
   :rdfs/label "dayOfWeek",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/EducationalOccupationalProgram
                            :schema/OpeningHoursSpecification},
   :schema/rangeIncludes :schema/DayOfWeek})

(def deathDate
  {:db/ident             :schema/deathDate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Date of death.",
   :rdfs/label           "deathDate",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Date})

(def deathPlace
  {:db/ident             :schema/deathPlace,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The place where the person died.",
   :rdfs/label           "deathPlace",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Place})

(def defaultValue
  {:db/ident :schema/defaultValue,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The default value of the input.  For properties that expect a literal, the default is a literal value, for properties that expect an object, it's an ID reference to one of the current values.",
   :rdfs/label "defaultValue",
   :schema/domainIncludes :schema/PropertyValueSpecification,
   :schema/rangeIncludes #{:schema/Thing :schema/Text}})

(def deliveryAddress
  {:db/ident             :schema/deliveryAddress,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Destination address.",
   :rdfs/label           "deliveryAddress",
   :schema/domainIncludes :schema/ParcelDelivery,
   :schema/rangeIncludes :schema/PostalAddress})

(def deliveryLeadTime
  {:db/ident :schema/deliveryLeadTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup.",
   :rdfs/label "deliveryLeadTime",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def deliveryMethod
  {:db/ident           :schema/deliveryMethod,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "A sub property of instrument. The method of delivery.",
   :rdfs/label         "deliveryMethod",
   :rdfs/subPropertyOf :schema/instrument,
   :schema/domainIncludes #{:schema/OrderAction :schema/TrackAction
                            :schema/ReceiveAction :schema/SendAction},
   :schema/rangeIncludes :schema/DeliveryMethod})

(def deliveryStatus
  {:db/ident :schema/deliveryStatus,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "New entry added as the package passes through each leg of its journey (from shipment to final delivery).",
   :rdfs/label "deliveryStatus",
   :schema/domainIncludes :schema/ParcelDelivery,
   :schema/rangeIncludes :schema/DeliveryEvent})

(def deliveryTime
  {:db/ident :schema/deliveryTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total delay between the receipt of the order and the goods reaching the final customer.",
   :rdfs/label "deliveryTime",
   :schema/domainIncludes #{:schema/OfferShippingDetails
                            :schema/DeliveryTimeSettings},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ShippingDeliveryTime,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def department
  {:db/ident :schema/department,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A relationship between an organization and a department of that organization, also described as an organization (allowing different urls, logos, opening hours). For example: a store with a pharmacy, or a bakery with a cafe.",
   :rdfs/label "department",
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Organization})

(def departureAirport
  {:db/ident             :schema/departureAirport,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The airport where the flight originates.",
   :rdfs/label           "departureAirport",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes :schema/Airport})

(def departureBoatTerminal
  {:db/ident :schema/departureBoatTerminal,
   :rdf/type :rdf/Property,
   :rdfs/comment "The terminal or port from which the boat departs.",
   :rdfs/label "departureBoatTerminal",
   :schema/domainIncludes :schema/BoatTrip,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/BoatTerminal,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1755"}})

(def departureBusStop
  {:db/ident             :schema/departureBusStop,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The stop or station from which the bus departs.",
   :rdfs/label           "departureBusStop",
   :schema/domainIncludes :schema/BusTrip,
   :schema/rangeIncludes #{:schema/BusStop :schema/BusStation}})

(def departureGate
  {:db/ident             :schema/departureGate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Identifier of the flight's departure gate.",
   :rdfs/label           "departureGate",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes :schema/Text})

(def departurePlatform
  {:db/ident             :schema/departurePlatform,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The platform from which the train departs.",
   :rdfs/label           "departurePlatform",
   :schema/domainIncludes :schema/TrainTrip,
   :schema/rangeIncludes :schema/Text})

(def departureStation
  {:db/ident             :schema/departureStation,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The station from which the train departs.",
   :rdfs/label           "departureStation",
   :schema/domainIncludes :schema/TrainTrip,
   :schema/rangeIncludes :schema/TrainStation})

(def departureTerminal
  {:db/ident             :schema/departureTerminal,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Identifier of the flight's departure terminal.",
   :rdfs/label           "departureTerminal",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes :schema/Text})

(def departureTime
  {:db/ident             :schema/departureTime,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The expected departure time.",
   :rdfs/label           "departureTime",
   :schema/domainIncludes :schema/Trip,
   :schema/rangeIncludes #{:schema/Time :schema/DateTime}})

(def dependencies
  {:db/ident             :schema/dependencies,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Prerequisites needed to fulfill steps in article.",
   :rdfs/label           "dependencies",
   :schema/domainIncludes :schema/TechArticle,
   :schema/rangeIncludes :schema/Text})

(def depth
  {:db/ident           :schema/depth,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The depth of the item.",
   :rdfs/label         "depth",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/OfferShippingDetails :schema/Product
                            :schema/VisualArtwork},
   :schema/rangeIncludes #{:schema/Distance :schema/QuantitativeValue}})

(def description
  {:db/ident             :schema/description,
   :owl/equivalentProperty :dcterms/description,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A description of the item.",
   :rdfs/label           "description",
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes #{:schema/TextObject :schema/Text}})

(def device
  {:db/ident :schema/device,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Device required to run the application. Used in cases where a specific make/model is required to run the application.",
   :rdfs/label "device",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/availableOnDevice})

(def diagnosis
  {:db/ident :schema/diagnosis,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "One or more alternative conditions considered in the differential diagnosis process as output of a diagnosis process.",
   :rdfs/label "diagnosis",
   :schema/domainIncludes #{:schema/Patient :schema/DDxElement},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalCondition})

(def diagram
  {:db/ident :schema/diagram,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An image containing a diagram that illustrates the structure and/or its component substructures and/or connections with other structures.",
   :rdfs/label "diagram",
   :schema/domainIncludes :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/ImageObject})

(def diet
  {:db/ident :schema/diet,
   :rdf/type :rdf/Property,
   :rdfs/comment "A sub property of instrument. The diet used in this action.",
   :rdfs/label "diet",
   :rdfs/subPropertyOf :schema/instrument,
   :schema/domainIncludes :schema/ExerciseAction,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Diet})

(def dietFeatures
  {:db/ident :schema/dietFeatures,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Nutritional information specific to the dietary plan. May include dietary recommendations on what foods to avoid, what foods to consume, and specific alterations/deviations from the USDA or other regulatory body's approved dietary guidelines.",
   :rdfs/label "dietFeatures",
   :schema/domainIncludes :schema/Diet,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def differentialDiagnosis
  {:db/ident :schema/differentialDiagnosis,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "One of a set of differential diagnoses for the condition. Specifically, a closely-related or competing diagnosis typically considered later in the cognitive process whereby this medical condition is distinguished from others most likely responsible for a similar collection of signs and symptoms to reach the most parsimonious diagnosis or diagnoses in a patient.",
   :rdfs/label "differentialDiagnosis",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/DDxElement})

(def directApply
  {:db/ident :schema/directApply,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether an [[url]] that is associated with a [[JobPosting]] enables direct application for the job, via the posting website. A job posting is considered to have directApply of [[True]] if an application process for the specified job can be directly initiated via the url(s) given (noting that e.g. multiple internet domains might nevertheless be involved at an implementation level). A value of [[False]] is appropriate if there is no clear path to applying directly online for the specified job, navigating directly from the JobPosting url(s) supplied.",
   :rdfs/label "directApply",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2907"}})

(def director
  {:db/ident :schema/director,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A director of e.g. TV, radio, movie, video gaming etc. content, or of an event. Directors can be associated with individual items or with a series, episode, clip.",
   :rdfs/label "director",
   :schema/domainIncludes #{:schema/Episode :schema/VideoObject
                            :schema/CreativeWorkSeason :schema/TVSeries
                            :schema/MovieSeries :schema/Event :schema/Clip
                            :schema/Movie :schema/VideoGame
                            :schema/VideoGameSeries :schema/RadioSeries},
   :schema/rangeIncludes :schema/Person})

(def directors
  {:db/ident :schema/directors,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A director of e.g. TV, radio, movie, video games etc. content. Directors can be associated with individual items or with a series, episode, clip.",
   :rdfs/label "directors",
   :schema/domainIncludes #{:schema/Episode :schema/VideoObject :schema/TVSeries
                            :schema/MovieSeries :schema/Clip :schema/Movie
                            :schema/VideoGame :schema/VideoGameSeries
                            :schema/RadioSeries},
   :schema/rangeIncludes :schema/Person,
   :schema/supersededBy :schema/director})

(def disambiguatingDescription
  {:db/ident :schema/disambiguatingDescription,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of description. A short description of the item used to disambiguate from other, similar items. Information from other properties (in particular, name) may be necessary for the description to be useful for disambiguation.",
   :rdfs/label "disambiguatingDescription",
   :rdfs/subPropertyOf :schema/description,
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes :schema/Text})

(def discount
  {:db/ident             :schema/discount,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Any discount applied (to an Order).",
   :rdfs/label           "discount",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def discountCode
  {:db/ident             :schema/discountCode,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Code used to redeem a discount.",
   :rdfs/label           "discountCode",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes :schema/Text})

(def discountCurrency
  {:db/ident :schema/discountCurrency,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The currency of the discount.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".",
   :rdfs/label "discountCurrency",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes :schema/Text})

(def discusses
  {:db/ident :schema/discusses,
   :rdf/type :rdf/Property,
   :rdfs/comment "Specifies the CreativeWork associated with the UserComment.",
   :rdfs/label "discusses",
   :schema/domainIncludes :schema/UserComments,
   :schema/rangeIncludes :schema/CreativeWork})

(def discussionUrl
  {:db/ident :schema/discussionUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A link to the page containing the comments of the CreativeWork.",
   :rdfs/label "discussionUrl",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/URL})

(def diseasePreventionInfo
  {:db/ident :schema/diseasePreventionInfo,
   :rdf/type :rdf/Property,
   :rdfs/comment "Information about disease prevention.",
   :rdfs/label "diseasePreventionInfo",
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/WebContent :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def diseaseSpreadStatistics
  {:db/ident :schema/diseaseSpreadStatistics,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Statistical information about the spread of a disease, either as [[WebContent]], or\n  described directly as a [[Dataset]], or the specific [[Observation]]s in the dataset. When a [[WebContent]] URL is\n  provided, the page indicated might also contain more such markup.",
   :rdfs/label "diseaseSpreadStatistics",
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Observation :schema/WebContent :schema/URL
                           :schema/Dataset},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def dissolutionDate
  {:db/ident             :schema/dissolutionDate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The date that this organization was dissolved.",
   :rdfs/label           "dissolutionDate",
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Date})

(def distance
  {:db/ident :schema/distance,
   :rdf/type :rdf/Property,
   :rdfs/comment "The distance travelled, e.g. exercising or travelling.",
   :rdfs/label "distance",
   :schema/domainIncludes #{:schema/TravelAction :schema/ExerciseAction},
   :schema/rangeIncludes :schema/Distance})

(def distinguishingSign
  {:db/ident :schema/distinguishingSign,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "One of a set of signs and symptoms that can be used to distinguish this diagnosis from others in the differential diagnosis.",
   :rdfs/label "distinguishingSign",
   :schema/domainIncludes :schema/DDxElement,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalSignOrSymptom})

(def distribution
  {:db/ident :schema/distribution,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A downloadable form of this dataset, at a specific location, in a specific format. This property can be repeated if different variations are available. There is no expectation that different downloadable distributions must contain exactly equivalent information (see also [DCAT](https://www.w3.org/TR/vocab-dcat-3/#Class:Distribution) on this point). Different distributions might include or exclude different subsets of the entire dataset, for example.",
   :rdfs/label "distribution",
   :schema/domainIncludes :schema/Dataset,
   :schema/rangeIncludes :schema/DataDownload})

(def diversityPolicy
  {:db/ident :schema/diversityPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Statement on diversity policy by an [[Organization]] e.g. a [[NewsMediaOrganization]]. For a [[NewsMediaOrganization]], a statement describing the newsroom’s diversity policy on both staffing and sources, typically providing staffing data.",
   :rdfs/label "diversityPolicy",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes #{:schema/NewsMediaOrganization :schema/Organization},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def diversityStaffingReport
  {:db/ident :schema/diversityStaffingReport,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a report on staffing diversity issues. In a news context this might be for example ASNE or RTDNA (US) reports, or self-reported.",
   :rdfs/label "diversityStaffingReport",
   :rdfs/subPropertyOf :schema/publishingPrinciples,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes #{:schema/NewsMediaOrganization :schema/Organization},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Article :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def documentation
  {:db/ident :schema/documentation,
   :rdf/type :rdf/Property,
   :rdfs/comment "Further documentation describing the Web API in more detail.",
   :rdfs/label "documentation",
   :schema/domainIncludes :schema/WebAPI,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1423"}})

(def doesNotShip
  {:db/ident :schema/doesNotShip,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates when shipping to a particular [[shippingDestination]] is not available.",
   :rdfs/label "doesNotShip",
   :schema/domainIncludes #{:schema/OfferShippingDetails
                            :schema/ShippingRateSettings},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def domainIncludes
  {:db/ident :schema/domainIncludes,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Relates a property to a class that is (one of) the type(s) the property is expected to be used on.",
   :rdfs/label "domainIncludes",
   :schema/domainIncludes :schema/Property,
   :schema/isPartOf {:xsd/anyURI "http://meta.schema.org"},
   :schema/rangeIncludes :schema/Class})

(def domiciledMortgage
  {:db/ident :schema/domiciledMortgage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Whether borrower is a resident of the jurisdiction where the property is located.",
   :rdfs/label "domiciledMortgage",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/MortgageLoan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def doorTime
  {:db/ident             :schema/doorTime,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The time admission will commence.",
   :rdfs/label           "doorTime",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes #{:schema/Time :schema/DateTime}})

(def dosageForm
  {:db/ident :schema/dosageForm,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A dosage form in which this drug/supplement is available, e.g. 'tablet', 'suspension', 'injection'.",
   :rdfs/label "dosageForm",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def doseSchedule
  {:db/ident :schema/doseSchedule,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A dosing schedule for the drug for a given population, either observed, recommended, or maximum dose based on the type used.",
   :rdfs/label "doseSchedule",
   :schema/domainIncludes #{:schema/TherapeuticProcedure :schema/Drug},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/DoseSchedule})

(def doseUnit
  {:db/ident             :schema/doseUnit,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The unit of the dose, e.g. 'mg'.",
   :rdfs/label           "doseUnit",
   :schema/domainIncludes :schema/DoseSchedule,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def doseValue
  {:db/ident             :schema/doseValue,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The value of the dose, e.g. 500.",
   :rdfs/label           "doseValue",
   :schema/domainIncludes :schema/DoseSchedule,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/Number :schema/QualitativeValue}})

(def downPayment
  {:db/ident :schema/downPayment,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "a type of payment made in cash during the onset of the purchase of an expensive good/service. The payment typically represents only a percentage of the full purchase price.",
   :rdfs/label "downPayment",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/RepaymentSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/Number},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def downloadUrl
  {:db/ident :schema/downloadUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment "If the file can be downloaded, URL to download the binary.",
   :rdfs/label "downloadUrl",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/URL})

(def downvoteCount
  {:db/ident :schema/downvoteCount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of downvotes this question, answer or comment has received from the community.",
   :rdfs/label "downvoteCount",
   :schema/domainIncludes :schema/Comment,
   :schema/rangeIncludes :schema/Integer})

(def drainsTo
  {:db/ident             :schema/drainsTo,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The vasculature that the vein drains into.",
   :rdfs/label           "drainsTo",
   :schema/domainIncludes :schema/Vein,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Vessel})

(def driveWheelConfiguration
  {:db/ident :schema/driveWheelConfiguration,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The drive wheel configuration, i.e. which roadwheels will receive torque from the vehicle's engine via the drivetrain.",
   :rdfs/label "driveWheelConfiguration",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes #{:schema/Text :schema/DriveWheelConfigurationValue}})

(def dropoffLocation
  {:db/ident             :schema/dropoffLocation,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Where a rental car can be dropped off.",
   :rdfs/label           "dropoffLocation",
   :schema/domainIncludes :schema/RentalCarReservation,
   :schema/rangeIncludes :schema/Place})

(def dropoffTime
  {:db/ident             :schema/dropoffTime,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "When a rental car can be dropped off.",
   :rdfs/label           "dropoffTime",
   :schema/domainIncludes :schema/RentalCarReservation,
   :schema/rangeIncludes :schema/DateTime})

(def drug
  {:db/ident :schema/drug,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifying a drug or medicine used in a medication procedure.",
   :rdfs/label "drug",
   :schema/domainIncludes #{:schema/Patient :schema/TherapeuticProcedure
                            :schema/DrugClass :schema/MedicalCondition},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Drug})

(def drugClass
  {:db/ident             :schema/drugClass,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The class of drug this belongs to (e.g., statins).",
   :rdfs/label           "drugClass",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/DrugClass})

(def drugUnit
  {:db/ident :schema/drugUnit,
   :rdf/type :rdf/Property,
   :rdfs/comment "The unit in which the drug is measured, e.g. '5 mg tablet'.",
   :rdfs/label "drugUnit",
   :schema/domainIncludes #{:schema/DrugCost :schema/Drug},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def duns
  {:db/ident :schema/duns,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Dun & Bradstreet DUNS number for identifying an organization or business person.",
   :rdfs/label "duns",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def duplicateTherapy
  {:db/ident             :schema/duplicateTherapy,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A therapy that duplicates or overlaps this one.",
   :rdfs/label           "duplicateTherapy",
   :schema/domainIncludes :schema/MedicalTherapy,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTherapy})

(def duration
  {:db/ident :schema/duration,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The duration of the item (movie, audio recording, event, etc.) in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601).",
   :rdfs/label "duration",
   :schema/domainIncludes
   #{:schema/Episode :schema/MediaObject :schema/MusicRecording
     :schema/Audiobook :schema/Event :schema/MusicRelease
     :schema/QuantitativeValueDistribution :schema/Movie :schema/Schedule},
   :schema/rangeIncludes :schema/Duration,
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1457"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1698"}}})

(def durationOfWarranty
  {:db/ident :schema/durationOfWarranty,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The duration of the warranty promise. Common unitCode values are ANN for year, MON for months, or DAY for days.",
   :rdfs/label "durationOfWarranty",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/WarrantyPromise,
   :schema/rangeIncludes :schema/QuantitativeValue})

(def duringMedia
  {:db/ident :schema/duringMedia,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A media object representing the circumstances while performing this direction.",
   :rdfs/label "duringMedia",
   :schema/domainIncludes :schema/HowToDirection,
   :schema/rangeIncludes #{:schema/MediaObject :schema/URL}})

(def earlyPrepaymentPenalty
  {:db/ident :schema/earlyPrepaymentPenalty,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The amount to be paid as a penalty in the event of early payment of the loan.",
   :rdfs/label "earlyPrepaymentPenalty",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/RepaymentSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def editEIDR
  {:db/ident :schema/editEIDR,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing a specific edit / edition for a work of film or television.\n\nFor example, the motion picture known as \"Ghostbusters\" whose [[titleEIDR]] is \"10.5240/7EC7-228A-510A-053E-CBB8-J\" has several edits, e.g. \"10.5240/1F2A-E1C5-680A-14C6-E76B-I\" and \"10.5240/8A35-3BEE-6497-5D12-9E4F-3\".\n\nSince schema.org types like [[Movie]] and [[TVEpisode]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.\n",
   :rdfs/label "editEIDR",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2469"}})

(def editor
  {:db/ident             :schema/editor,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Specifies the Person who edited the CreativeWork.",
   :rdfs/label           "editor",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Person})

(def eduQuestionType
  {:db/ident :schema/eduQuestionType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For questions that are part of learning resources (e.g. Quiz), eduQuestionType indicates the format of question being given. Example: \"Multiple choice\", \"Open ended\", \"Flashcard\".",
   :rdfs/label "eduQuestionType",
   :schema/domainIncludes #{:schema/SolveMathAction :schema/Question},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2636"}})

(def educationRequirements
  {:db/ident :schema/educationRequirements,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Educational background needed for the position or Occupation.",
   :rdfs/label "educationRequirements",
   :schema/domainIncludes #{:schema/Occupation :schema/JobPosting},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/EducationalOccupationalCredential
                           :schema/Text},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1779"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1698"}}})

(def educationalAlignment
  {:db/ident :schema/educationalAlignment,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An alignment to an established educational framework.\n\nThis property should not be used where the nature of the alignment can be described using a simple property, for example to express that a resource [[teaches]] or [[assesses]] a competency.",
   :rdfs/label "educationalAlignment",
   :schema/domainIncludes #{:schema/LearningResource :schema/CreativeWork},
   :schema/rangeIncludes :schema/AlignmentObject})

(def educationalCredentialAwarded
  {:db/ident :schema/educationalCredentialAwarded,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of the qualification, award, certificate, diploma or other educational credential awarded as a consequence of successful completion of this course or program.",
   :rdfs/label "educationalCredentialAwarded",
   :schema/domainIncludes #{:schema/EducationalOccupationalProgram
                            :schema/Course},
   :schema/rangeIncludes #{:schema/EducationalOccupationalCredential
                           :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2289"}})

(def educationalFramework
  {:db/ident :schema/educationalFramework,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The framework to which the resource being described is aligned.",
   :rdfs/label "educationalFramework",
   :schema/domainIncludes :schema/AlignmentObject,
   :schema/rangeIncludes :schema/Text})

(def educationalLevel
  {:db/ident :schema/educationalLevel,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The level in terms of progression through an educational or training context. Examples of educational levels include 'beginner', 'intermediate' or 'advanced', and formal sets of level indicators.",
   :rdfs/label "educationalLevel",
   :schema/domainIncludes #{:schema/LearningResource :schema/EducationEvent
                            :schema/CreativeWork
                            :schema/EducationalOccupationalCredential},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1779"}})

(def educationalProgramMode
  {:db/ident :schema/educationalProgramMode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Similar to courseMode, the medium or means of delivery of the program as a whole. The value may either be a text label (e.g. \"online\", \"onsite\" or \"blended\"; \"synchronous\" or \"asynchronous\"; \"full-time\" or \"part-time\") or a URL reference to a term from a controlled vocabulary (e.g. https://ceds.ed.gov/element/001311#Asynchronous ).",
   :rdfs/label "educationalProgramMode",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2419"}})

(def educationalRole
  {:db/ident             :schema/educationalRole,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An educationalRole of an EducationalAudience.",
   :rdfs/label           "educationalRole",
   :schema/domainIncludes :schema/EducationalAudience,
   :schema/rangeIncludes :schema/Text})

(def educationalUse
  {:db/ident :schema/educationalUse,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The purpose of a work in the context of education; for example, 'assignment', 'group work'.",
   :rdfs/label "educationalUse",
   :schema/domainIncludes #{:schema/LearningResource :schema/CreativeWork},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text}})

(def elevation
  {:db/ident :schema/elevation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The elevation of a location ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)). Values may be of the form 'NUMBER UNIT\\_OF\\_MEASUREMENT' (e.g., '1,000 m', '3,200 ft') while numbers alone should be assumed to be a value in meters.",
   :rdfs/label "elevation",
   :schema/domainIncludes #{:schema/GeoCoordinates :schema/GeoShape},
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def eligibilityToWorkRequirement
  {:db/ident :schema/eligibilityToWorkRequirement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The legal requirements such as citizenship, visa and other documentation required for an applicant to this job.",
   :rdfs/label "eligibilityToWorkRequirement",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2384"}})

(def eligibleCustomerType
  {:db/ident :schema/eligibleCustomerType,
   :rdf/type :rdf/Property,
   :rdfs/comment "The type(s) of customers for which the given offer is valid.",
   :rdfs/label "eligibleCustomerType",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/BusinessEntityType})

(def eligibleDuration
  {:db/ident           :schema/eligibleDuration,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The duration for which the given offer is valid.",
   :rdfs/label         "eligibleDuration",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def eligibleQuantity
  {:db/ident :schema/eligibleQuantity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The interval and unit of measurement of ordering quantities for which the offer or price specification is valid. This allows e.g. specifying that a certain freight charge is valid only for a certain quantity.",
   :rdfs/label "eligibleQuantity",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/PriceSpecification :schema/Demand
                            :schema/Offer},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def eligibleRegion
  {:db/ident :schema/eligibleRegion,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is valid.\\n\\nSee also [[ineligibleRegion]].\n    ",
   :rdfs/label "eligibleRegion",
   :rdfs/subPropertyOf :schema/areaServed,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/DeliveryChargeSpecification :schema/Demand
                            :schema/Offer :schema/ActionAccessSpecification},
   :schema/rangeIncludes #{:schema/Place :schema/GeoShape :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1741"}})

(def eligibleTransactionVolume
  {:db/ident :schema/eligibleTransactionVolume,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The transaction volume, in a monetary unit, for which the offer or price specification is valid, e.g. for indicating a minimal purchasing volume, to express free shipping above a certain order volume, or to limit the acceptance of credit cards to purchases to a certain minimal amount.",
   :rdfs/label "eligibleTransactionVolume",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/PriceSpecification :schema/Demand
                            :schema/Offer},
   :schema/rangeIncludes :schema/PriceSpecification})

(def email
  {:db/ident             :schema/email,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Email address.",
   :rdfs/label           "email",
   :schema/domainIncludes #{:schema/ContactPoint :schema/Organization
                            :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def embedUrl
  {:db/ident :schema/embedUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A URL pointing to a player for a specific video. In general, this is the information in the ```src``` element of an ```embed``` tag and should not be the same as the content of the ```loc``` tag.",
   :rdfs/label "embedUrl",
   :schema/domainIncludes :schema/MediaObject,
   :schema/rangeIncludes :schema/URL})

(def embeddedTextCaption
  {:db/ident :schema/embeddedTextCaption,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents textual captioning from a [[MediaObject]], e.g. text of a 'meme'.",
   :rdfs/label "embeddedTextCaption",
   :rdfs/subPropertyOf :schema/caption,
   :schema/domainIncludes #{:schema/ImageObject :schema/VideoObject
                            :schema/AudioObject},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def emissionsCO2
  {:db/ident :schema/emissionsCO2,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The CO2 emissions in g/km. When used in combination with a QuantitativeValue, put \"g/km\" into the unitText property of that value, since there is no UN/CEFACT Common Code for \"g/km\".",
   :rdfs/label "emissionsCO2",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/Number})

(def employee
  {:db/ident             :schema/employee,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Someone working for this organization.",
   :rdfs/label           "employee",
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Person})

(def employees
  {:db/ident            :schema/employees,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "People working for this organization.",
   :rdfs/label          "employees",
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Person,
   :schema/supersededBy :schema/employee})

(def employerOverview
  {:db/ident :schema/employerOverview,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of the employer, career opportunities and work environment for this position.",
   :rdfs/label "employerOverview",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2396"}})

(def employmentType
  {:db/ident :schema/employmentType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Type of employment (e.g. full-time, part-time, contract, temporary, seasonal, internship).",
   :rdfs/label "employmentType",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Text})

(def employmentUnit
  {:db/ident :schema/employmentUnit,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the department, unit and/or facility where the employee reports and/or in which the job is to be performed.",
   :rdfs/label "employmentUnit",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Organization,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2296"}})

(def encodesBioChemEntity
  {:db/ident             :schema/encodesBioChemEntity,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Another BioChemEntity encoded by this one. ",
   :rdfs/label           "encodesBioChemEntity",
   :schema/domainIncludes :schema/Gene,
   :schema/inverseOf     :schema/isEncodedByBioChemEntity,
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/BioChemEntity,
   :schema/source        {:xsd/anyURI "http://www.bioschemas.org/Gene"}})

(def encodesCreativeWork
  {:db/ident             :schema/encodesCreativeWork,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The CreativeWork encoded by this media object.",
   :rdfs/label           "encodesCreativeWork",
   :schema/domainIncludes :schema/MediaObject,
   :schema/inverseOf     :schema/encoding,
   :schema/rangeIncludes :schema/CreativeWork})

(def encoding
  {:db/ident :schema/encoding,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A media object that encodes this CreativeWork. This property is a synonym for associatedMedia.",
   :rdfs/label "encoding",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/inverseOf :schema/encodesCreativeWork,
   :schema/rangeIncludes :schema/MediaObject})

(def encodingFormat
  {:db/ident :schema/encodingFormat,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Media type typically expressed using a MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml) and [MDN reference](https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/MIME_types)), e.g. application/zip for a SoftwareApplication binary, audio/mpeg for .mp3 etc.\n\nIn cases where a [[CreativeWork]] has several media type representations, [[encoding]] can be used to indicate each [[MediaObject]] alongside particular [[encodingFormat]] information.\n\nUnregistered or niche encoding and file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia/Wikidata entry.",
   :rdfs/label "encodingFormat",
   :schema/domainIncludes #{:schema/MediaObject :schema/CreativeWork},
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def encodingType
  {:db/ident :schema/encodingType,
   :rdf/type :rdf/Property,
   :rdfs/comment "The supported encoding type(s) for an EntryPoint request.",
   :rdfs/label "encodingType",
   :schema/domainIncludes :schema/EntryPoint,
   :schema/rangeIncludes :schema/Text})

(def encodings
  {:db/ident            :schema/encodings,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A media object that encodes this CreativeWork.",
   :rdfs/label          "encodings",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/MediaObject,
   :schema/supersededBy :schema/encoding})

(def endDate
  {:db/ident :schema/endDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The end date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).",
   :rdfs/label "endDate",
   :schema/domainIncludes
   #{:schema/MerchantReturnPolicySeasonalOverride
     :schema/EducationalOccupationalProgram :schema/CreativeWorkSeason
     :schema/DatedMoneySpecification :schema/Event :schema/CreativeWorkSeries
     :schema/Role :schema/Schedule},
   :schema/rangeIncludes #{:schema/Date :schema/DateTime},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2486"}})

(def endOffset
  {:db/ident :schema/endOffset,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The end time of the clip expressed as the number of seconds from the beginning of the work.",
   :rdfs/label "endOffset",
   :schema/domainIncludes :schema/Clip,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/HyperTocEntry :schema/Number},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2021"}})

(def endTime
  {:db/ident :schema/endTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The endTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to end. For actions that span a period of time, when the action was performed. E.g. John wrote a book from January to *December*. For media, including audio and video, it's the time offset of the end of a clip within a larger file.\\n\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
   :rdfs/label "endTime",
   :schema/domainIncludes #{:schema/MediaObject :schema/InteractionCounter
                            :schema/FoodEstablishmentReservation :schema/Action
                            :schema/Schedule},
   :schema/rangeIncludes #{:schema/Time :schema/DateTime},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2493"}})

(def endorsee
  {:db/ident :schema/endorsee,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of participant. The person/organization being supported.",
   :rdfs/label "endorsee",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/EndorseAction,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def endorsers
  {:db/ident             :schema/endorsers,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "People or organizations that endorse the plan.",
   :rdfs/label           "endorsers",
   :schema/domainIncludes :schema/Diet,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def energyEfficiencyScaleMax
  {:db/ident :schema/energyEfficiencyScaleMax,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies the most energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.",
   :rdfs/label "energyEfficiencyScaleMax",
   :schema/domainIncludes :schema/EnergyConsumptionDetails,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/EUEnergyEfficiencyEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def energyEfficiencyScaleMin
  {:db/ident :schema/energyEfficiencyScaleMin,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies the least energy efficient class on the regulated EU energy consumption scale for the product category a product belongs to. For example, energy consumption for televisions placed on the market after January 1, 2020 is scaled from D to A+++.",
   :rdfs/label "energyEfficiencyScaleMin",
   :schema/domainIncludes :schema/EnergyConsumptionDetails,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/EUEnergyEfficiencyEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def engineDisplacement
  {:db/ident :schema/engineDisplacement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The volume swept by all of the pistons inside the cylinders of an internal combustion engine in a single movement. \\n\\nTypical unit code(s): CMQ for cubic centimeter, LTR for liters, INQ for cubic inches\\n* Note 1: You can link to information about how the given value has been determined using the [[valueReference]] property.\\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.",
   :rdfs/label "engineDisplacement",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/EngineSpecification,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def enginePower
  {:db/ident :schema/enginePower,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The power of the vehicle's engine.\n    Typical unit code(s): KWT for kilowatt, BHP for brake horsepower, N12 for metric horsepower (PS, with 1 PS = 735,49875 W)\\n\\n* Note 1: There are many different ways of measuring an engine's power. For an overview, see  [http://en.wikipedia.org/wiki/Horsepower#Engine\\_power\\_test\\_codes](http://en.wikipedia.org/wiki/Horsepower#Engine_power_test_codes).\\n* Note 2: You can link to information about how the given value has been determined using the [[valueReference]] property.\\n* Note 3: You can use [[minValue]] and [[maxValue]] to indicate ranges.",
   :rdfs/label "enginePower",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/EngineSpecification,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def engineType
  {:db/ident :schema/engineType,
   :rdf/type :rdf/Property,
   :rdfs/comment "The type of engine or engines powering the vehicle.",
   :rdfs/label "engineType",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/EngineSpecification,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/QualitativeValue :schema/URL}})

(def entertainmentBusiness
  {:db/ident :schema/entertainmentBusiness,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of location. The entertainment business where the action occurred.",
   :rdfs/label "entertainmentBusiness",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/PerformAction,
   :schema/rangeIncludes :schema/EntertainmentBusiness})

(def epidemiology
  {:db/ident :schema/epidemiology,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The characteristics of associated patients, such as age, gender, race etc.",
   :rdfs/label "epidemiology",
   :schema/domainIncludes #{:schema/PhysicalActivity :schema/MedicalCondition},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def episode
  {:db/ident :schema/episode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An episode of a TV, radio or game media within a series or season.",
   :rdfs/label "episode",
   :rdfs/subPropertyOf :schema/hasPart,
   :schema/domainIncludes #{:schema/CreativeWorkSeason :schema/TVSeries
                            :schema/VideoGameSeries :schema/RadioSeries},
   :schema/rangeIncludes :schema/Episode})

(def episodeNumber
  {:db/ident :schema/episodeNumber,
   :rdf/type :rdf/Property,
   :rdfs/comment "Position of the episode within an ordered group of episodes.",
   :rdfs/label "episodeNumber",
   :rdfs/subPropertyOf :schema/position,
   :schema/domainIncludes :schema/Episode,
   :schema/rangeIncludes #{:schema/Integer :schema/Text}})

(def episodes
  {:db/ident            :schema/episodes,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "An episode of a TV/radio series or season.",
   :rdfs/label          "episodes",
   :schema/domainIncludes #{:schema/CreativeWorkSeason :schema/TVSeries
                            :schema/VideoGameSeries :schema/RadioSeries},
   :schema/rangeIncludes :schema/Episode,
   :schema/supersededBy :schema/episode})

(def equal
  {:db/ident :schema/equal,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This ordering relation for qualitative values indicates that the subject is equal to the object.",
   :rdfs/label "equal",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/QualitativeValue,
   :schema/rangeIncludes :schema/QualitativeValue})

(def error
  {:db/ident :schema/error,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For failed actions, more information on the cause of the failure.",
   :rdfs/label "error",
   :schema/domainIncludes :schema/Action,
   :schema/rangeIncludes :schema/Thing})

(def estimatedCost
  {:db/ident :schema/estimatedCost,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The estimated cost of the supply or supplies consumed when performing instructions.",
   :rdfs/label "estimatedCost",
   :schema/domainIncludes #{:schema/HowToSupply :schema/HowTo},
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/Text}})

(def estimatedFlightDuration
  {:db/ident             :schema/estimatedFlightDuration,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The estimated time the flight will take.",
   :rdfs/label           "estimatedFlightDuration",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes #{:schema/Duration :schema/Text}})

(def estimatedSalary
  {:db/ident :schema/estimatedSalary,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An estimated salary for a job posting or occupation, based on a variety of variables including, but not limited to industry, job title, and location. Estimated salaries  are often computed by outside organizations rather than the hiring organization, who may not have committed to the estimated value.",
   :rdfs/label "estimatedSalary",
   :schema/domainIncludes #{:schema/Occupation :schema/JobPosting},
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/Number
                           :schema/MonetaryAmountDistribution},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def estimatesRiskOf
  {:db/ident :schema/estimatesRiskOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The condition, complication, or symptom whose risk is being estimated.",
   :rdfs/label "estimatesRiskOf",
   :schema/domainIncludes :schema/MedicalRiskEstimator,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalEntity})

(def ethicsPolicy
  {:db/ident :schema/ethicsPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Statement about ethics policy, e.g. of a [[NewsMediaOrganization]] regarding journalistic and publishing practices, or of a [[Restaurant]], a page describing food source policies. In the case of a [[NewsMediaOrganization]], an ethicsPolicy is typically a statement describing the personal, organizational, and corporate standards of behavior expected by the organization.",
   :rdfs/label "ethicsPolicy",
   :schema/domainIncludes #{:schema/NewsMediaOrganization :schema/Organization},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def event
  {:db/ident :schema/event,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Upcoming or past event associated with this place, organization, or action.",
   :rdfs/label "event",
   :schema/domainIncludes
   #{:schema/Place :schema/JoinAction :schema/InformAction :schema/InviteAction
     :schema/LeaveAction :schema/PlayAction :schema/Organization},
   :schema/rangeIncludes :schema/Event})

(def eventAttendanceMode
  {:db/ident :schema/eventAttendanceMode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The eventAttendanceMode of an event indicates whether it occurs online, offline, or a mix.",
   :rdfs/label "eventAttendanceMode",
   :schema/domainIncludes :schema/Event,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/EventAttendanceModeEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1842"}})

(def eventSchedule
  {:db/ident :schema/eventSchedule,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Associates an [[Event]] with a [[Schedule]]. There are circumstances where it is preferable to share a schedule for a series of\n      repeating events rather than data on the individual events themselves. For example, a website or application might prefer to publish a schedule for a weekly\n      gym class rather than provide data on every event. A schedule could be processed by applications to add forthcoming events to a calendar. An [[Event]] that\n      is associated with a [[Schedule]] using this property should not have [[startDate]] or [[endDate]] properties. These are instead defined within the associated\n      [[Schedule]], this avoids any ambiguity for clients using the data. The property might have repeated values to specify different schedules, e.g. for different months\n      or seasons.",
   :rdfs/label "eventSchedule",
   :schema/domainIncludes :schema/Event,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Schedule,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1457"}})

(def eventStatus
  {:db/ident :schema/eventStatus,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An eventStatus of an event represents its status; particularly useful when an event is cancelled or rescheduled.",
   :rdfs/label "eventStatus",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes :schema/EventStatusType})

(def events
  {:db/ident :schema/events,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Upcoming or past events associated with this place or organization.",
   :rdfs/label "events",
   :schema/domainIncludes #{:schema/Place :schema/Organization},
   :schema/rangeIncludes :schema/Event,
   :schema/supersededBy :schema/event})

(def evidenceLevel
  {:db/ident :schema/evidenceLevel,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Strength of evidence of the data used to formulate the guideline (enumerated).",
   :rdfs/label "evidenceLevel",
   :schema/domainIncludes :schema/MedicalGuideline,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalEvidenceLevel})

(def evidenceOrigin
  {:db/ident :schema/evidenceOrigin,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Source of the data used to formulate the guidance, e.g. RCT, consensus opinion, etc.",
   :rdfs/label "evidenceOrigin",
   :schema/domainIncludes :schema/MedicalGuideline,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def exampleOfWork
  {:db/ident :schema/exampleOfWork,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A creative work that this work is an example/instance/realization/derivation of.",
   :rdfs/label "exampleOfWork",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"},
   :schema/domainIncludes :schema/CreativeWork,
   :schema/inverseOf :schema/workExample,
   :schema/rangeIncludes :schema/CreativeWork})

(def exceptDate
  {:db/ident :schema/exceptDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines a [[Date]] or [[DateTime]] during which a scheduled [[Event]] will not take place. The property allows exceptions to\n      a [[Schedule]] to be specified. If an exception is specified as a [[DateTime]] then only the event that would have started at that specific date and time\n      should be excluded from the schedule. If an exception is specified as a [[Date]] then any event that is scheduled for that 24 hour period should be\n      excluded from the schedule. This allows a whole day to be excluded from the schedule without having to itemise every scheduled event.",
   :rdfs/label "exceptDate",
   :schema/domainIncludes :schema/Schedule,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Date :schema/DateTime},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1457"}})

(def exchangeRateSpread
  {:db/ident :schema/exchangeRateSpread,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The difference between the price at which a broker or other intermediary buys and sells foreign currency.",
   :rdfs/label "exchangeRateSpread",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/ExchangeRateSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/Number},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def executableLibraryName
  {:db/ident :schema/executableLibraryName,
   :rdf/type :rdf/Property,
   :rdfs/comment "Library file name, e.g., mscorlib.dll, system.web.dll.",
   :rdfs/label "executableLibraryName",
   :schema/domainIncludes :schema/APIReference,
   :schema/rangeIncludes :schema/Text})

(def exerciseCourse
  {:db/ident :schema/exerciseCourse,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of location. The course where this action was taken.",
   :rdfs/label "exerciseCourse",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/ExerciseAction,
   :schema/rangeIncludes :schema/Place})

(def exercisePlan
  {:db/ident :schema/exercisePlan,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of instrument. The exercise plan used on this action.",
   :rdfs/label "exercisePlan",
   :rdfs/subPropertyOf :schema/instrument,
   :schema/domainIncludes :schema/ExerciseAction,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/ExercisePlan})

(def exerciseRelatedDiet
  {:db/ident :schema/exerciseRelatedDiet,
   :rdf/type :rdf/Property,
   :rdfs/comment "A sub property of instrument. The diet used in this action.",
   :rdfs/label "exerciseRelatedDiet",
   :rdfs/subPropertyOf :schema/instrument,
   :schema/domainIncludes :schema/ExerciseAction,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Diet})

(def exerciseType
  {:db/ident :schema/exerciseType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Type(s) of exercise or activity, such as strength training, flexibility training, aerobics, cardiac rehabilitation, etc.",
   :rdfs/label "exerciseType",
   :schema/domainIncludes #{:schema/ExercisePlan :schema/ExerciseAction},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def exifData
  {:db/ident             :schema/exifData,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "exif data for this object.",
   :rdfs/label           "exifData",
   :schema/domainIncludes :schema/ImageObject,
   :schema/rangeIncludes #{:schema/PropertyValue :schema/Text}})

(def expectedArrivalFrom
  {:db/ident             :schema/expectedArrivalFrom,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The earliest date the package may arrive.",
   :rdfs/label           "expectedArrivalFrom",
   :schema/domainIncludes :schema/ParcelDelivery,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def expectedArrivalUntil
  {:db/ident             :schema/expectedArrivalUntil,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The latest date the package may arrive.",
   :rdfs/label           "expectedArrivalUntil",
   :schema/domainIncludes :schema/ParcelDelivery,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def expectedPrognosis
  {:db/ident :schema/expectedPrognosis,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The likely outcome in either the short term or long term of the medical condition.",
   :rdfs/label "expectedPrognosis",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def expectsAcceptanceOf
  {:db/ident :schema/expectsAcceptanceOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An Offer which must be accepted before the user can perform the Action. For example, the user may need to buy a movie before being able to watch it.",
   :rdfs/label "expectsAcceptanceOf",
   :schema/domainIncludes #{:schema/MediaSubscription :schema/ConsumeAction
                            :schema/ActionAccessSpecification},
   :schema/rangeIncludes :schema/Offer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1741"}})

(def experienceInPlaceOfEducation
  {:db/ident :schema/experienceInPlaceOfEducation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether a [[JobPosting]] will accept experience (as indicated by [[OccupationalExperienceRequirements]]) in place of its formal educational qualifications (as indicated by [[educationRequirements]]). If true, indicates that satisfying one of these requirements is sufficient.",
   :rdfs/label "experienceInPlaceOfEducation",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2681"}})

(def experienceRequirements
  {:db/ident :schema/experienceRequirements,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Description of skills and experience needed for the position or Occupation.",
   :rdfs/label "experienceRequirements",
   :schema/domainIncludes #{:schema/Occupation :schema/JobPosting},
   :schema/rangeIncludes #{:schema/OccupationalExperienceRequirements
                           :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def expertConsiderations
  {:db/ident             :schema/expertConsiderations,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Medical expert advice related to the plan.",
   :rdfs/label           "expertConsiderations",
   :schema/domainIncludes :schema/Diet,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def expires
  {:db/ident :schema/expires,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Date the content expires and is no longer useful or available. For example a [[VideoObject]] or [[NewsArticle]] whose availability or relevance is time-limited, or a [[ClaimReview]] fact check whose publisher wants to indicate that it may no longer be relevant (or helpful to highlight) after some date.",
   :rdfs/label "expires",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def expressedIn
  {:db/ident :schema/expressedIn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Tissue, organ, biological sample, etc in which activity of this gene has been observed experimentally. For example brain, digestive system.",
   :rdfs/label "expressedIn",
   :schema/domainIncludes :schema/Gene,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/AnatomicalStructure
                           :schema/AnatomicalSystem :schema/BioChemEntity},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/Gene"}})

(def familyName
  {:db/ident             :schema/familyName,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Family name. In the U.S., the last name of a Person.",
   :rdfs/label           "familyName",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Text})

(def fatContent
  {:db/ident             :schema/fatContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of grams of fat.",
   :rdfs/label           "fatContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def faxNumber
  {:db/ident             :schema/faxNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The fax number.",
   :rdfs/label           "faxNumber",
   :schema/domainIncludes #{:schema/Place :schema/ContactPoint
                            :schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def featureList
  {:db/ident :schema/featureList,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Features or modules provided by this application (and possibly required by other applications).",
   :rdfs/label "featureList",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def feesAndCommissionsSpecification
  {:db/ident :schema/feesAndCommissionsSpecification,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Description of fees, commissions, and other terms applied either to a class of financial product, or by a financial service organization.",
   :rdfs/label "feesAndCommissionsSpecification",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes #{:schema/FinancialService :schema/FinancialProduct},
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def fiberContent
  {:db/ident             :schema/fiberContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of grams of fiber.",
   :rdfs/label           "fiberContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def fileFormat
  {:db/ident :schema/fileFormat,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Media type, typically MIME format (see [IANA site](http://www.iana.org/assignments/media-types/media-types.xhtml)) of the content, e.g. application/zip of a SoftwareApplication binary. In cases where a CreativeWork has several media type representations, 'encoding' can be used to indicate each MediaObject alongside particular fileFormat information. Unregistered or niche file formats can be indicated instead via the most appropriate URL, e.g. defining Web page or a Wikipedia entry.",
   :rdfs/label "fileFormat",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/supersededBy :schema/encodingFormat})

(def fileSize
  {:db/ident :schema/fileSize,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Size of the application / package (e.g. 18MB). In the absence of a unit (MB, KB etc.), KB will be assumed.",
   :rdfs/label "fileSize",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text})

(def financialAidEligible
  {:db/ident :schema/financialAidEligible,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A financial aid type or program which students may use to pay for tuition or fees associated with the program.",
   :rdfs/label "financialAidEligible",
   :schema/domainIncludes #{:schema/EducationalOccupationalProgram
                            :schema/Course},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2418"}})

(def firstAppearance
  {:db/ident :schema/firstAppearance,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the first known occurrence of a [[Claim]] in some [[CreativeWork]].",
   :rdfs/label "firstAppearance",
   :rdfs/subPropertyOf :schema/workExample,
   :schema/domainIncludes :schema/Claim,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/CreativeWork,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1828"}})

(def firstPerformance
  {:db/ident           :schema/firstPerformance,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The date and place the work was first performed.",
   :rdfs/label         "firstPerformance",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicComposition,
   :schema/rangeIncludes :schema/Event})

(def flightDistance
  {:db/ident             :schema/flightDistance,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The distance of the flight.",
   :rdfs/label           "flightDistance",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes #{:schema/Distance :schema/Text}})

(def flightNumber
  {:db/ident :schema/flightNumber,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The unique identifier for a flight including the airline IATA code. For example, if describing United flight 110, where the IATA code for United is 'UA', the flightNumber is 'UA110'.",
   :rdfs/label "flightNumber",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes :schema/Text})

(def floorLevel
  {:db/ident :schema/floorLevel,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The floor level for an [[Accommodation]] in a multi-storey building. Since counting\n  systems [vary internationally](https://en.wikipedia.org/wiki/Storey#Consecutive_number_floor_designations), the local system should be used where possible.",
   :rdfs/label "floorLevel",
   :schema/domainIncludes :schema/Accommodation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def floorLimit
  {:db/ident :schema/floorLimit,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A floor limit is the amount of money above which credit card transactions must be authorized.",
   :rdfs/label "floorLimit",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/PaymentCard,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def floorSize
  {:db/ident :schema/floorSize,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The size of the accommodation, e.g. in square meter or squarefoot.\nTypical unit code(s): MTK for square meter, FTK for square foot, or YDK for square yard.",
   :rdfs/label "floorSize",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes #{:schema/FloorPlan :schema/Accommodation},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def followee
  {:db/ident :schema/followee,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of object. The person or organization being followed.",
   :rdfs/label "followee",
   :rdfs/subPropertyOf :schema/object,
   :schema/domainIncludes :schema/FollowAction,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def follows
  {:db/ident             :schema/follows,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The most generic uni-directional social relation.",
   :rdfs/label           "follows",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person})

(def followup
  {:db/ident :schema/followup,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Typical or recommended followup care after the procedure is performed.",
   :rdfs/label "followup",
   :schema/domainIncludes :schema/MedicalProcedure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def foodEstablishment
  {:db/ident :schema/foodEstablishment,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of location. The specific food establishment where the action occurred.",
   :rdfs/label "foodEstablishment",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/CookAction,
   :schema/rangeIncludes #{:schema/Place :schema/FoodEstablishment}})

(def foodEvent
  {:db/ident :schema/foodEvent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of location. The specific food event where the action occurred.",
   :rdfs/label "foodEvent",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/CookAction,
   :schema/rangeIncludes :schema/FoodEvent})

(def foodWarning
  {:db/ident :schema/foodWarning,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any precaution, guidance, contraindication, etc. related to consumption of specific foods while taking this drug.",
   :rdfs/label "foodWarning",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def founder
  {:db/ident             :schema/founder,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A person who founded this organization.",
   :rdfs/label           "founder",
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Person})

(def founders
  {:db/ident            :schema/founders,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A person who founded this organization.",
   :rdfs/label          "founders",
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Person,
   :schema/supersededBy :schema/founder})

(def foundingDate
  {:db/ident             :schema/foundingDate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The date that this organization was founded.",
   :rdfs/label           "foundingDate",
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Date})

(def foundingLocation
  {:db/ident             :schema/foundingLocation,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The place where the Organization was founded.",
   :rdfs/label           "foundingLocation",
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Place})

(def free
  {:db/ident :schema/free,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A flag to signal that the item, event, or place is accessible for free.",
   :rdfs/label "free",
   :schema/domainIncludes :schema/PublicationEvent,
   :schema/rangeIncludes :schema/Boolean,
   :schema/supersededBy :schema/isAccessibleForFree})

(def freeShippingThreshold
  {:db/ident :schema/freeShippingThreshold,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A monetary value above (or at) which the shipping rate becomes free. Intended to be used via an [[OfferShippingDetails]] with [[shippingSettingsLink]] matching this [[ShippingRateSettings]].",
   :rdfs/label "freeShippingThreshold",
   :schema/domainIncludes :schema/ShippingRateSettings,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/MonetaryAmount
                           :schema/DeliveryChargeSpecification},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def frequency
  {:db/ident             :schema/frequency,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "How often the dose is taken, e.g. 'daily'.",
   :rdfs/label           "frequency",
   :schema/domainIncludes :schema/DoseSchedule,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def fromLocation
  {:db/ident :schema/fromLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of location. The original location of the object or the agent before the action.",
   :rdfs/label "fromLocation",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes #{:schema/MoveAction :schema/TransferAction
                            :schema/ExerciseAction},
   :schema/rangeIncludes :schema/Place})

(def fuelCapacity
  {:db/ident :schema/fuelCapacity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The capacity of the fuel tank or in the case of electric cars, the battery. If there are multiple components for storage, this should indicate the total of all storage of the same type.\\n\\nTypical unit code(s): LTR for liters, GLL of US gallons, GLI for UK / imperial gallons, AMH for ampere-hours (for electrical vehicles).",
   :rdfs/label "fuelCapacity",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def fuelConsumption
  {:db/ident :schema/fuelConsumption,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The amount of fuel consumed for traveling a particular distance or temporal duration with the given vehicle (e.g. liters per 100 km).\\n\\n* Note 1: There are unfortunately no standard unit codes for liters per 100 km.  Use [[unitText]] to indicate the unit of measurement, e.g. L/100 km.\\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\\n* Note 3: Often, the absolute value is useful only when related to driving speed (\"at 80 km/h\") or usage pattern (\"city traffic\"). You can use [[valueReference]] to link the value for the fuel consumption to another value.",
   :rdfs/label "fuelConsumption",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/QuantitativeValue})

(def fuelEfficiency
  {:db/ident :schema/fuelEfficiency,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The distance traveled per unit of fuel used; most commonly miles per gallon (mpg) or kilometers per liter (km/L).\\n\\n* Note 1: There are unfortunately no standard unit codes for miles per gallon or kilometers per liter. Use [[unitText]] to indicate the unit of measurement, e.g. mpg or km/L.\\n* Note 2: There are two ways of indicating the fuel consumption, [[fuelConsumption]] (e.g. 8 liters per 100 km) and [[fuelEfficiency]] (e.g. 30 miles per gallon). They are reciprocal.\\n* Note 3: Often, the absolute value is useful only when related to driving speed (\"at 80 km/h\") or usage pattern (\"city traffic\"). You can use [[valueReference]] to link the value for the fuel economy to another value.",
   :rdfs/label "fuelEfficiency",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/QuantitativeValue})

(def fuelType
  {:db/ident :schema/fuelType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of fuel suitable for the engine or engines of the vehicle. If the vehicle has only one engine, this property can be attached directly to the vehicle.",
   :rdfs/label "fuelType",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes #{:schema/Vehicle :schema/EngineSpecification},
   :schema/rangeIncludes #{:schema/Text :schema/QualitativeValue :schema/URL}})

(def functionalClass
  {:db/ident             :schema/functionalClass,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The degree of mobility the joint allows.",
   :rdfs/label           "functionalClass",
   :schema/domainIncludes :schema/Joint,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/MedicalEntity}})

(def fundedItem
  {:db/ident :schema/fundedItem,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates something directly or indirectly funded or sponsored through a [[Grant]]. See also [[ownershipFundingInfo]].",
   :rdfs/label "fundedItem",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes :schema/Grant,
   :schema/inverseOf :schema/funding,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Product :schema/CreativeWork :schema/Event
                           :schema/BioChemEntity :schema/Organization
                           :schema/MedicalEntity :schema/Person},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/383"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1950"}}})

(def funder
  {:db/ident :schema/funder,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A person or organization that supports (sponsors) something through some kind of financial contribution.",
   :rdfs/label "funder",
   :rdfs/subPropertyOf :schema/sponsor,
   :schema/domainIncludes #{:schema/CreativeWork :schema/Grant :schema/Event
                            :schema/MonetaryGrant :schema/Organization
                            :schema/Person},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def funding
  {:db/ident :schema/funding,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A [[Grant]] that directly or indirectly provide funding or sponsorship for this item. See also [[ownershipFundingInfo]].",
   :rdfs/label "funding",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes #{:schema/Product :schema/CreativeWork :schema/Event
                            :schema/BioChemEntity :schema/Organization
                            :schema/MedicalEntity :schema/Person},
   :schema/inverseOf :schema/fundedItem,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Grant,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/383"}})

(def game
  {:db/ident             :schema/game,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Video game which is played on this server.",
   :rdfs/label           "game",
   :schema/domainIncludes :schema/GameServer,
   :schema/inverseOf     :schema/gameServer,
   :schema/rangeIncludes :schema/VideoGame})

(def gameAvailabilityType
  {:db/ident :schema/gameAvailabilityType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the availability type of the game content associated with this action, such as whether it is a full version or a demo.",
   :rdfs/label "gameAvailabilityType",
   :schema/domainIncludes :schema/PlayGameAction,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/GameAvailabilityEnumeration :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3058"}})

(def gameEdition
  {:db/ident             :schema/gameEdition,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The edition of a video game.",
   :rdfs/label           "gameEdition",
   :schema/domainIncludes :schema/VideoGame,
   :schema/rangeIncludes :schema/Text})

(def gameItem
  {:db/ident :schema/gameItem,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An item is an object within the game world that can be collected by a player or, occasionally, a non-player character.",
   :rdfs/label "gameItem",
   :schema/domainIncludes #{:schema/Game :schema/VideoGameSeries},
   :schema/rangeIncludes :schema/Thing})

(def gameLocation
  {:db/ident :schema/gameLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment "Real or fictional location of the game (or part of game).",
   :rdfs/label "gameLocation",
   :schema/domainIncludes #{:schema/Game :schema/VideoGameSeries},
   :schema/rangeIncludes #{:schema/Place :schema/PostalAddress :schema/URL}})

(def gamePlatform
  {:db/ident :schema/gamePlatform,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The electronic systems used to play <a href=\"http://en.wikipedia.org/wiki/Category:Video_game_platforms\">video games</a>.",
   :rdfs/label "gamePlatform",
   :schema/domainIncludes #{:schema/VideoGame :schema/VideoGameSeries},
   :schema/rangeIncludes #{:schema/Thing :schema/Text :schema/URL}})

(def gameServer
  {:db/ident :schema/gameServer,
   :rdf/type :rdf/Property,
   :rdfs/comment "The server on which  it is possible to play the game.",
   :rdfs/label "gameServer",
   :schema/domainIncludes :schema/VideoGame,
   :schema/inverseOf :schema/game,
   :schema/rangeIncludes :schema/GameServer})

(def gameTip
  {:db/ident             :schema/gameTip,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Links to tips, tactics, etc.",
   :rdfs/label           "gameTip",
   :schema/domainIncludes :schema/VideoGame,
   :schema/rangeIncludes :schema/CreativeWork})

(def gender
  {:db/ident :schema/gender,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Gender of something, typically a [[Person]], but possibly also fictional characters, animals, etc. While http://schema.org/Male and http://schema.org/Female may be used, text strings are also acceptable for people who do not identify as a binary gender. The [[gender]] property can also be used in an extended sense to cover e.g. the gender of sports teams. As with the gender of individuals, we do not try to enumerate all possibilities. A mixed-gender [[SportsTeam]] can be indicated with a text value of \"Mixed\".",
   :rdfs/label "gender",
   :schema/domainIncludes #{:schema/SportsTeam :schema/Person},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/GenderType :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2341"}})

(def genre
  {:db/ident :schema/genre,
   :rdf/type :rdf/Property,
   :rdfs/comment "Genre of the creative work, broadcast channel or group.",
   :rdfs/label "genre",
   :schema/domainIncludes #{:schema/MusicGroup :schema/CreativeWork
                            :schema/BroadcastChannel},
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def geo
  {:db/ident             :schema/geo,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The geo coordinates of the place.",
   :rdfs/label           "geo",
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes #{:schema/GeoCoordinates :schema/GeoShape}})

(def geoContains
  {:db/ident :schema/geoContains,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents a relationship between two geometries (or the places they represent), relating a containing geometry to a contained geometry. \"a contains b iff no points of b lie in the exterior of a, and at least one point of the interior of b lies in the interior of a\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
   :rdfs/label "geoContains",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geoCoveredBy
  {:db/ident :schema/geoCoveredBy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that covers it. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
   :rdfs/label "geoCoveredBy",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geoCovers
  {:db/ident :schema/geoCovers,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents a relationship between two geometries (or the places they represent), relating a covering geometry to a covered geometry. \"Every point of b is a point of (the interior or boundary of) a\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
   :rdfs/label "geoCovers",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geoCrosses
  {:db/ident :schema/geoCrosses,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that crosses it: \"a crosses b: they have some but not all interior points in common, and the dimension of the intersection is less than that of at least one of them\". As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
   :rdfs/label "geoCrosses",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geoDisjoint
  {:db/ident :schema/geoDisjoint,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents spatial relations in which two geometries (or the places they represent) are topologically disjoint: \"they have no point in common. They form a set of disconnected geometries.\" (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)",
   :rdfs/label "geoDisjoint",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geoEquals
  {:db/ident :schema/geoEquals,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents spatial relations in which two geometries (or the places they represent) are topologically equal, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM). \"Two geometries are topologically equal if their interiors intersect and no part of the interior or boundary of one geometry intersects the exterior of the other\" (a symmetric relationship).",
   :rdfs/label "geoEquals",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geoIntersects
  {:db/ident :schema/geoIntersects,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents spatial relations in which two geometries (or the places they represent) have at least one point in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
   :rdfs/label "geoIntersects",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geoMidpoint
  {:db/ident :schema/geoMidpoint,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the GeoCoordinates at the centre of a GeoShape, e.g. GeoCircle.",
   :rdfs/label "geoMidpoint",
   :schema/domainIncludes :schema/GeoCircle,
   :schema/rangeIncludes :schema/GeoCoordinates})

(def geoOverlaps
  {:db/ident :schema/geoOverlaps,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents a relationship between two geometries (or the places they represent), relating a geometry to another that geospatially overlaps it, i.e. they have some but not all points in common. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
   :rdfs/label "geoOverlaps",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geoRadius
  {:db/ident :schema/geoRadius,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the approximate radius of a GeoCircle (metres unless indicated otherwise via Distance notation).",
   :rdfs/label "geoRadius",
   :schema/domainIncludes :schema/GeoCircle,
   :schema/rangeIncludes #{:schema/Distance :schema/Number :schema/Text}})

(def geoTouches
  {:db/ident :schema/geoTouches,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents spatial relations in which two geometries (or the places they represent) touch: \"they have at least one boundary point in common, but no interior points.\" (A symmetric relationship, as defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).)",
   :rdfs/label "geoTouches",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geoWithin
  {:db/ident :schema/geoWithin,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Represents a relationship between two geometries (or the places they represent), relating a geometry to one that contains it, i.e. it is inside (i.e. within) its interior. As defined in [DE-9IM](https://en.wikipedia.org/wiki/DE-9IM).",
   :rdfs/label "geoWithin",
   :schema/domainIncludes #{:schema/Place :schema/GeospatialGeometry},
   :schema/rangeIncludes #{:schema/Place :schema/GeospatialGeometry}})

(def geographicArea
  {:db/ident             :schema/geographicArea,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The geographic area associated with the audience.",
   :rdfs/label           "geographicArea",
   :schema/domainIncludes :schema/Audience,
   :schema/rangeIncludes :schema/AdministrativeArea})

(def gettingTestedInfo
  {:db/ident :schema/gettingTestedInfo,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Information about getting tested (for a [[MedicalCondition]]), e.g. in the context of a pandemic.",
   :rdfs/label "gettingTestedInfo",
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/WebContent :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def givenName
  {:db/ident             :schema/givenName,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Given name. In the U.S., the first name of a Person.",
   :rdfs/label           "givenName",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Text})

(def globalLocationNumber
  {:db/ident :schema/globalLocationNumber,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The [Global Location Number](http://www.gs1.org/gln) (GLN, sometimes also referred to as International Location Number or ILN) of the respective organization, person, or place. The GLN is a 13-digit number used to identify parties and physical locations.",
   :rdfs/label "globalLocationNumber",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Place :schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def governmentBenefitsInfo
  {:db/ident :schema/governmentBenefitsInfo,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "governmentBenefitsInfo provides information about government benefits associated with a SpecialAnnouncement.",
   :rdfs/label "governmentBenefitsInfo",
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/GovernmentService,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def gracePeriod
  {:db/ident :schema/gracePeriod,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The period of time after any due date that the borrower has to fulfil its obligations before a default (failure to pay) is deemed to have occurred.",
   :rdfs/label "gracePeriod",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/LoanOrCredit,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Duration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def grantee
  {:db/ident :schema/grantee,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The person, organization, contact point, or audience that has been granted this permission.",
   :rdfs/label "grantee",
   :schema/domainIncludes :schema/DigitalDocumentPermission,
   :schema/rangeIncludes #{:schema/Audience :schema/ContactPoint
                           :schema/Organization :schema/Person}})

(def greater
  {:db/ident :schema/greater,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This ordering relation for qualitative values indicates that the subject is greater than the object.",
   :rdfs/label "greater",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/QualitativeValue,
   :schema/rangeIncludes :schema/QualitativeValue})

(def greaterOrEqual
  {:db/ident :schema/greaterOrEqual,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This ordering relation for qualitative values indicates that the subject is greater than or equal to the object.",
   :rdfs/label "greaterOrEqual",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/QualitativeValue,
   :schema/rangeIncludes :schema/QualitativeValue})

(def gtin
  {:db/ident :schema/gtin,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A Global Trade Item Number ([GTIN](https://www.gs1.org/standards/id-keys/gtin)). GTINs identify trade items, including products and services, using numeric identification codes.\n\nThe GS1 [digital link specifications](https://www.gs1.org/standards/Digital-Link/) express GTINs as URLs (URIs, IRIs, etc.). Details including regular expression examples can be found in, Section 6 of the GS1 URI Syntax specification; see also [schema.org tracking issue](https://github.com/schemaorg/schemaorg/issues/3156#issuecomment-1209522809) for schema.org-specific discussion. A correct [[gtin]] value should be a valid GTIN, which means that it should be an all-numeric string of either 8, 12, 13 or 14 digits, or a \"GS1 Digital Link\" URL based on such a string. The numeric component should also have a [valid GS1 check digit](https://www.gs1.org/services/check-digit-calculator) and meet the other rules for valid GTINs. See also [GS1's GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) and [Wikipedia](https://en.wikipedia.org/wiki/Global_Trade_Item_Number) for more details. Left-padding of the gtin values is not required or encouraged. The [[gtin]] property generalizes the earlier [[gtin8]], [[gtin12]], [[gtin13]], and [[gtin14]] properties.\n\nNote also that this is a definition for how to include GTINs in Schema.org data, and not a definition of GTINs in general - see the GS1 documentation for authoritative details.",
   :rdfs/label "gtin",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes #{:schema/Product :schema/Demand :schema/Offer},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def gtin12
  {:db/ident :schema/gtin12,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The GTIN-12 code of the product, or the product to which the offer refers. The GTIN-12 is the 12-digit GS1 Identification Key composed of a U.P.C. Company Prefix, Item Reference, and Check Digit used to identify trade items. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.",
   :rdfs/label "gtin12",
   :rdfs/subPropertyOf #{:schema/identifier :schema/gtin},
   :schema/domainIncludes #{:schema/Product :schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/Text})

(def gtin13
  {:db/ident :schema/gtin13,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The GTIN-13 code of the product, or the product to which the offer refers. This is equivalent to 13-digit ISBN codes and EAN UCC-13. Former 12-digit UPC codes can be converted into a GTIN-13 code by simply adding a preceding zero. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.",
   :rdfs/label "gtin13",
   :rdfs/subPropertyOf #{:schema/identifier :schema/gtin},
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Product :schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/Text})

(def gtin14
  {:db/ident :schema/gtin14,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The GTIN-14 code of the product, or the product to which the offer refers. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.",
   :rdfs/label "gtin14",
   :rdfs/subPropertyOf #{:schema/identifier :schema/gtin},
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Product :schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/Text})

(def gtin8
  {:db/ident :schema/gtin8,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The GTIN-8 code of the product, or the product to which the offer refers. This code is also known as EAN/UCC-8 or 8-digit EAN. See [GS1 GTIN Summary](http://www.gs1.org/barcodes/technical/idkeys/gtin) for more details.",
   :rdfs/label "gtin8",
   :rdfs/subPropertyOf #{:schema/identifier :schema/gtin},
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Product :schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/Text})

(def guideline
  {:db/ident             :schema/guideline,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A medical guideline related to this entity.",
   :rdfs/label           "guideline",
   :schema/domainIncludes :schema/MedicalEntity,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalGuideline})

(def guidelineDate
  {:db/ident :schema/guidelineDate,
   :rdf/type :rdf/Property,
   :rdfs/comment "Date on which this guideline's recommendation was made.",
   :rdfs/label "guidelineDate",
   :schema/domainIncludes :schema/MedicalGuideline,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Date})

(def guidelineSubject
  {:db/ident :schema/guidelineSubject,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The medical conditions, treatments, etc. that are the subject of the guideline.",
   :rdfs/label "guidelineSubject",
   :schema/domainIncludes :schema/MedicalGuideline,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalEntity})

(def handlingTime
  {:db/ident :schema/handlingTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The typical delay between the receipt of the order and the goods either leaving the warehouse or being prepared for pickup, in case the delivery method is on site pickup. Typical properties: minValue, maxValue, unitCode (d for DAY).  This is by common convention assumed to mean business days (if a unitCode is used, coded as \"d\"), i.e. only counting days when the business normally operates.",
   :rdfs/label "handlingTime",
   :schema/domainIncludes :schema/ShippingDeliveryTime,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def hasAdultConsideration
  {:db/ident :schema/hasAdultConsideration,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Used to tag an item to be intended or suitable for consumption or use by adults only.",
   :rdfs/label "hasAdultConsideration",
   :schema/domainIncludes #{:schema/Product :schema/Offer},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/AdultOrientedEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2989"}})

(def hasBioChemEntityPart
  {:db/ident :schema/hasBioChemEntityPart,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a BioChemEntity that (in some sense) has this BioChemEntity as a part. ",
   :rdfs/label "hasBioChemEntityPart",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/inverseOf :schema/isPartOfBioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/BioChemEntity,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org"}})

(def hasBioPolymerSequence
  {:db/ident :schema/hasBioPolymerSequence,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A symbolic representation of a BioChemEntity. For example, a nucleotide sequence of a Gene or an amino acid sequence of a Protein.",
   :rdfs/label "hasBioPolymerSequence",
   :rdfs/subPropertyOf :schema/hasRepresentation,
   :schema/domainIncludes #{:schema/Protein :schema/Gene},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/Gene"}})

(def hasBroadcastChannel
  {:db/ident :schema/hasBroadcastChannel,
   :rdf/type :rdf/Property,
   :rdfs/comment "A broadcast channel of a broadcast service.",
   :rdfs/label "hasBroadcastChannel",
   :schema/domainIncludes :schema/BroadcastService,
   :schema/inverseOf :schema/providesBroadcastService,
   :schema/rangeIncludes :schema/BroadcastChannel,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1004"}})

(def hasCategoryCode
  {:db/ident             :schema/hasCategoryCode,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A Category code contained in this code set.",
   :rdfs/label           "hasCategoryCode",
   :rdfs/subPropertyOf   :schema/hasDefinedTerm,
   :schema/domainIncludes :schema/CategoryCodeSet,
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/CategoryCode,
   :schema/source        {:xsd/anyURI
                          "https://github.com/schemaorg/schemaorg/issues/894"}})

(def hasCourse
  {:db/ident :schema/hasCourse,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A course or class that is one of the learning opportunities that constitute an educational / occupational program. No information is implied about whether the course is mandatory or optional; no guarantee is implied about whether the course will be available to everyone on the program.",
   :rdfs/label "hasCourse",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Course,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2483"}})

(def hasCourseInstance
  {:db/ident :schema/hasCourseInstance,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An offering of the course at a specific time and place or through specific media or mode of study or to a specific section of students.",
   :rdfs/label "hasCourseInstance",
   :schema/domainIncludes :schema/Course,
   :schema/rangeIncludes :schema/CourseInstance})

(def hasCredential
  {:db/ident :schema/hasCredential,
   :rdf/type :rdf/Property,
   :rdfs/comment "A credential awarded to the Person or Organization.",
   :rdfs/label "hasCredential",
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/EducationalOccupationalCredential,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2289"}})

(def hasDefinedTerm
  {:db/ident             :schema/hasDefinedTerm,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A Defined Term contained in this term set.",
   :rdfs/label           "hasDefinedTerm",
   :schema/domainIncludes #{:schema/Taxon :schema/DefinedTermSet},
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/DefinedTerm,
   :schema/source        {:xsd/anyURI
                          "https://github.com/schemaorg/schemaorg/issues/894"}})

(def hasDeliveryMethod
  {:db/ident             :schema/hasDeliveryMethod,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Method used for delivery or shipping.",
   :rdfs/label           "hasDeliveryMethod",
   :schema/domainIncludes #{:schema/ParcelDelivery :schema/DeliveryEvent},
   :schema/rangeIncludes :schema/DeliveryMethod})

(def hasDigitalDocumentPermission
  {:db/ident :schema/hasDigitalDocumentPermission,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A permission related to the access to this document (e.g. permission to read or write an electronic document). For a public document, specify a grantee with an Audience with audienceType equal to \"public\".",
   :rdfs/label "hasDigitalDocumentPermission",
   :schema/domainIncludes :schema/DigitalDocument,
   :schema/rangeIncludes :schema/DigitalDocumentPermission})

(def hasDriveThroughService
  {:db/ident :schema/hasDriveThroughService,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether some facility (e.g. [[FoodEstablishment]], [[CovidTestingFacility]]) offers a service that can be used by driving through in a car. In the case of [[CovidTestingFacility]] such facilities could potentially help with social distancing from other potentially-infected users.",
   :rdfs/label "hasDriveThroughService",
   :schema/domainIncludes :schema/Place,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def hasEnergyConsumptionDetails
  {:db/ident :schema/hasEnergyConsumptionDetails,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines the energy efficiency Category (also known as \"class\" or \"rating\") for a product according to an international energy efficiency standard.",
   :rdfs/label "hasEnergyConsumptionDetails",
   :schema/domainIncludes :schema/Product,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/EnergyConsumptionDetails,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def hasEnergyEfficiencyCategory
  {:db/ident :schema/hasEnergyEfficiencyCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines the energy efficiency Category (which could be either a rating out of range of values or a yes/no certification) for a product according to an international energy efficiency standard.",
   :rdfs/label "hasEnergyEfficiencyCategory",
   :schema/domainIncludes :schema/EnergyConsumptionDetails,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/EnergyEfficiencyEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2670"}})

(def hasHealthAspect
  {:db/ident :schema/hasHealthAspect,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the aspect or aspects specifically addressed in some [[HealthTopicContent]]. For example, that the content is an overview, or that it talks about treatment, self-care, treatments or their side-effects.",
   :rdfs/label "hasHealthAspect",
   :schema/domainIncludes :schema/HealthTopicContent,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/HealthAspectEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def hasMap
  {:db/ident             :schema/hasMap,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A URL to a map of the place.",
   :rdfs/label           "hasMap",
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes #{:schema/Map :schema/URL}})

(def hasMeasurement
  {:db/ident :schema/hasMeasurement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A product measurement, for example the inseam of pants, the wheel size of a bicycle, or the gauge of a screw. Usually an exact measurement, but can also be a range of measurements for adjustable products, for example belts and ski bindings.",
   :rdfs/label "hasMeasurement",
   :schema/domainIncludes #{:schema/Product :schema/SizeSpecification
                            :schema/Offer},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def hasMenu
  {:db/ident :schema/hasMenu,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Either the actual menu as a structured representation, as text, or a URL of the menu.",
   :rdfs/label "hasMenu",
   :schema/domainIncludes :schema/FoodEstablishment,
   :schema/rangeIncludes #{:schema/Menu :schema/Text :schema/URL}})

(def hasMenuItem
  {:db/ident :schema/hasMenuItem,
   :rdf/type :rdf/Property,
   :rdfs/comment "A food or drink item contained in a menu or menu section.",
   :rdfs/label "hasMenuItem",
   :schema/domainIncludes #{:schema/Menu :schema/MenuSection},
   :schema/rangeIncludes :schema/MenuItem})

(def hasMenuSection
  {:db/ident :schema/hasMenuSection,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A subgrouping of the menu (by dishes, course, serving time period, etc.).",
   :rdfs/label "hasMenuSection",
   :schema/domainIncludes #{:schema/Menu :schema/MenuSection},
   :schema/rangeIncludes :schema/MenuSection})

(def hasMerchantReturnPolicy
  {:db/ident :schema/hasMerchantReturnPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment "Specifies a MerchantReturnPolicy that may be applicable.",
   :rdfs/label "hasMerchantReturnPolicy",
   :schema/domainIncludes #{:schema/Product :schema/Offer :schema/Organization},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MerchantReturnPolicy,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def hasMolecularFunction
  {:db/ident :schema/hasMolecularFunction,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Molecular function performed by this BioChemEntity; please use PropertyValue if you want to include any evidence.",
   :rdfs/label "hasMolecularFunction",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/PropertyValue
                           :schema/URL},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/BioChemEntity"}})

(def hasOccupation
  {:db/ident :schema/hasOccupation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Person's occupation. For past professions, use Role for expressing dates.",
   :rdfs/label "hasOccupation",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Occupation,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def hasOfferCatalog
  {:db/ident :schema/hasOfferCatalog,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates an OfferCatalog listing for this Organization, Person, or Service.",
   :rdfs/label "hasOfferCatalog",
   :schema/domainIncludes #{:schema/Organization :schema/Service
                            :schema/Person},
   :schema/rangeIncludes :schema/OfferCatalog})

(def hasPOS
  {:db/ident :schema/hasPOS,
   :rdf/type :rdf/Property,
   :rdfs/comment "Points-of-Sales operated by the organization or person.",
   :rdfs/label "hasPOS",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Place})

(def hasPart
  {:db/ident :schema/hasPart,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates an item or CreativeWork that is part of this item, or CreativeWork (in some sense).",
   :rdfs/label "hasPart",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"},
   :schema/domainIncludes :schema/CreativeWork,
   :schema/inverseOf :schema/isPartOf,
   :schema/rangeIncludes :schema/CreativeWork})

(def hasRepresentation
  {:db/ident :schema/hasRepresentation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A common representation such as a protein sequence or chemical structure for this entity. For images use schema.org/image.",
   :rdfs/label "hasRepresentation",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/PropertyValue :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org"}})

(def hasVariant
  {:db/ident :schema/hasVariant,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a [[Product]] that is a member of this [[ProductGroup]] (or [[ProductModel]]).",
   :rdfs/label "hasVariant",
   :schema/domainIncludes :schema/ProductGroup,
   :schema/inverseOf :schema/isVariantOf,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Product,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1797"}})

(def headline
  {:db/ident             :schema/headline,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Headline of the article.",
   :rdfs/label           "headline",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text})

(def healthCondition
  {:db/ident :schema/healthCondition,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifying the health condition(s) of a patient, medical study, or other target audience.",
   :rdfs/label "healthCondition",
   :schema/domainIncludes #{:schema/Patient :schema/PeopleAudience
                            :schema/MedicalStudy},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalCondition})

(def healthPlanCoinsuranceOption
  {:db/ident :schema/healthPlanCoinsuranceOption,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Whether the coinsurance applies before or after deductible, etc. TODO: Is this a closed set?",
   :rdfs/label "healthPlanCoinsuranceOption",
   :schema/domainIncludes :schema/HealthPlanCostSharingSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanCoinsuranceRate
  {:db/ident :schema/healthPlanCoinsuranceRate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The rate of coinsurance expressed as a number between 0.0 and 1.0.",
   :rdfs/label "healthPlanCoinsuranceRate",
   :schema/domainIncludes :schema/HealthPlanCostSharingSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanCopay
  {:db/ident :schema/healthPlanCopay,
   :rdf/type :rdf/Property,
   :rdfs/comment "The copay amount.",
   :rdfs/label "healthPlanCopay",
   :schema/domainIncludes :schema/HealthPlanCostSharingSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/PriceSpecification,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanCopayOption
  {:db/ident :schema/healthPlanCopayOption,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Whether the copay is before or after deductible, etc. TODO: Is this a closed set?",
   :rdfs/label "healthPlanCopayOption",
   :schema/domainIncludes :schema/HealthPlanCostSharingSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanCostSharing
  {:db/ident :schema/healthPlanCostSharing,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The costs to the patient for services under this network or formulary.",
   :rdfs/label "healthPlanCostSharing",
   :schema/domainIncludes #{:schema/HealthPlanNetwork
                            :schema/HealthPlanFormulary},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanDrugOption
  {:db/ident :schema/healthPlanDrugOption,
   :rdf/type :rdf/Property,
   :rdfs/comment "TODO.",
   :rdfs/label "healthPlanDrugOption",
   :schema/domainIncludes :schema/HealthInsurancePlan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanDrugTier
  {:db/ident :schema/healthPlanDrugTier,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The tier(s) of drugs offered by this formulary or insurance plan.",
   :rdfs/label "healthPlanDrugTier",
   :schema/domainIncludes #{:schema/HealthInsurancePlan
                            :schema/HealthPlanFormulary},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanId
  {:db/ident :schema/healthPlanId,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The 14-character, HIOS-generated Plan ID number. (Plan IDs must be unique, even across different markets.)",
   :rdfs/label "healthPlanId",
   :schema/domainIncludes :schema/HealthInsurancePlan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanMarketingUrl
  {:db/ident :schema/healthPlanMarketingUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The URL that goes directly to the plan brochure for the specific standard plan or plan variation.",
   :rdfs/label "healthPlanMarketingUrl",
   :schema/domainIncludes :schema/HealthInsurancePlan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/URL,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanNetworkId
  {:db/ident :schema/healthPlanNetworkId,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Name or unique ID of network. (Networks are often reused across different insurance plans.)",
   :rdfs/label "healthPlanNetworkId",
   :schema/domainIncludes #{:schema/HealthPlanNetwork
                            :schema/MedicalOrganization},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanNetworkTier
  {:db/ident :schema/healthPlanNetworkTier,
   :rdf/type :rdf/Property,
   :rdfs/comment "The tier(s) for this network.",
   :rdfs/label "healthPlanNetworkTier",
   :schema/domainIncludes :schema/HealthPlanNetwork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthPlanPharmacyCategory
  {:db/ident :schema/healthPlanPharmacyCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The category or type of pharmacy associated with this cost sharing.",
   :rdfs/label "healthPlanPharmacyCategory",
   :schema/domainIncludes :schema/HealthPlanCostSharingSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def healthcareReportingData
  {:db/ident :schema/healthcareReportingData,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates data describing a hospital, e.g. a CDC [[CDCPMDRecord]] or as some kind of [[Dataset]].",
   :rdfs/label "healthcareReportingData",
   :schema/domainIncludes :schema/Hospital,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Dataset :schema/CDCPMDRecord},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2521"}})

(def height
  {:db/ident             :schema/height,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The height of the item.",
   :rdfs/label           "height",
   :schema/domainIncludes #{:schema/MediaObject :schema/OfferShippingDetails
                            :schema/Product :schema/VisualArtwork
                            :schema/Person},
   :schema/rangeIncludes #{:schema/Distance :schema/QuantitativeValue}})

(def highPrice
  {:db/ident :schema/highPrice,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The highest price of all offers available.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
   :rdfs/label "highPrice",
   :schema/domainIncludes :schema/AggregateOffer,
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def hiringOrganization
  {:db/ident             :schema/hiringOrganization,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Organization or Person offering the job position.",
   :rdfs/label           "hiringOrganization",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def holdingArchive
  {:db/ident :schema/holdingArchive,
   :rdf/type :rdf/Property,
   :rdfs/comment
   {:rdf/language "en",
    :rdf/value
    "[[ArchiveOrganization]] that holds, keeps or maintains the [[ArchiveComponent]]."},
   :rdfs/label {:rdf/language "en",
                :rdf/value    "holdingArchive"},
   :schema/domainIncludes :schema/ArchiveComponent,
   :schema/inverseOf :schema/archiveHeld,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ArchiveOrganization,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1758"}})

(def homeLocation
  {:db/ident           :schema/homeLocation,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "A contact location for a person's residence.",
   :rdfs/label         "homeLocation",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes #{:schema/Place :schema/ContactPoint}})

(def homeTeam
  {:db/ident           :schema/homeTeam,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The home team in a sports event.",
   :rdfs/label         "homeTeam",
   :rdfs/subPropertyOf :schema/competitor,
   :schema/domainIncludes :schema/SportsEvent,
   :schema/rangeIncludes #{:schema/SportsTeam :schema/Person}})

(def honorificPrefix
  {:db/ident :schema/honorificPrefix,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An honorific prefix preceding a Person's name such as Dr/Mrs/Mr.",
   :rdfs/label "honorificPrefix",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Text})

(def honorificSuffix
  {:db/ident :schema/honorificSuffix,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An honorific suffix following a Person's name such as M.D./PhD/MSCSW.",
   :rdfs/label "honorificSuffix",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Text})

(def hospitalAffiliation
  {:db/ident :schema/hospitalAffiliation,
   :rdf/type :rdf/Property,
   :rdfs/comment "A hospital with which the physician or office is affiliated.",
   :rdfs/label "hospitalAffiliation",
   :schema/domainIncludes :schema/Physician,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Hospital})

(def hostingOrganization
  {:db/ident :schema/hostingOrganization,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The organization (airline, travelers' club, etc.) the membership is made with.",
   :rdfs/label "hostingOrganization",
   :schema/domainIncludes :schema/ProgramMembership,
   :schema/rangeIncludes :schema/Organization})

(def hoursAvailable
  {:db/ident :schema/hoursAvailable,
   :rdf/type :rdf/Property,
   :rdfs/comment "The hours during which this service or contact is available.",
   :rdfs/label "hoursAvailable",
   :schema/domainIncludes #{:schema/LocationFeatureSpecification
                            :schema/ContactPoint :schema/Service},
   :schema/rangeIncludes :schema/OpeningHoursSpecification})

(def howPerformed
  {:db/ident             :schema/howPerformed,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "How the procedure is performed.",
   :rdfs/label           "howPerformed",
   :schema/domainIncludes :schema/MedicalProcedure,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def httpMethod
  {:db/ident :schema/httpMethod,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An HTTP method that specifies the appropriate HTTP method for a request to an HTTP EntryPoint. Values are capitalized strings as used in HTTP.",
   :rdfs/label "httpMethod",
   :schema/domainIncludes :schema/EntryPoint,
   :schema/rangeIncludes :schema/Text})

(def iataCode
  {:db/ident             :schema/iataCode,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "IATA identifier for an airline or airport.",
   :rdfs/label           "iataCode",
   :schema/domainIncludes #{:schema/Airport :schema/Airline},
   :schema/rangeIncludes :schema/Text})

(def icaoCode
  {:db/ident             :schema/icaoCode,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "ICAO identifier for an airport.",
   :rdfs/label           "icaoCode",
   :schema/domainIncludes :schema/Airport,
   :schema/rangeIncludes :schema/Text})

(def identifier
  {:db/ident :schema/identifier,
   :owl/equivalentProperty :dcterms/identifier,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The identifier property represents any kind of identifier for any kind of [[Thing]], such as ISBNs, GTIN codes, UUIDs etc. Schema.org provides dedicated properties for representing many of these, either as textual strings or as URL (URI) links. See [background notes](/docs/datamodel.html#identifierBg) for more details.\n        ",
   :rdfs/label "identifier",
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes #{:schema/PropertyValue :schema/Text :schema/URL}})

(def identifyingExam
  {:db/ident             :schema/identifyingExam,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A physical examination that can identify this sign.",
   :rdfs/label           "identifyingExam",
   :schema/domainIncludes :schema/MedicalSign,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/PhysicalExam})

(def identifyingTest
  {:db/ident             :schema/identifyingTest,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A diagnostic test that can identify this sign.",
   :rdfs/label           "identifyingTest",
   :schema/domainIncludes :schema/MedicalSign,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTest})

(def illustrator
  {:db/ident             :schema/illustrator,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The illustrator of the book.",
   :rdfs/label           "illustrator",
   :schema/domainIncludes :schema/Book,
   :schema/rangeIncludes :schema/Person})

(def image
  {:db/ident :schema/image,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An image of the item. This can be a [[URL]] or a fully described [[ImageObject]].",
   :rdfs/label "image",
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes #{:schema/ImageObject :schema/URL}})

(def imagingTechnique
  {:db/ident             :schema/imagingTechnique,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Imaging technique used.",
   :rdfs/label           "imagingTechnique",
   :schema/domainIncludes :schema/ImagingTest,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalImagingTechnique})

(def inAlbum
  {:db/ident             :schema/inAlbum,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The album to which this recording belongs.",
   :rdfs/label           "inAlbum",
   :schema/domainIncludes :schema/MusicRecording,
   :schema/rangeIncludes :schema/MusicAlbum})

(def inBroadcastLineup
  {:db/ident             :schema/inBroadcastLineup,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The CableOrSatelliteService offering the channel.",
   :rdfs/label           "inBroadcastLineup",
   :schema/domainIncludes :schema/BroadcastChannel,
   :schema/rangeIncludes :schema/CableOrSatelliteService})

(def inChI
  {:db/ident :schema/inChI,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Non-proprietary identifier for molecular entity that can be used in printed and electronic data sources thus enabling easier linking of diverse data compilations.",
   :rdfs/label "inChI",
   :rdfs/subPropertyOf :schema/hasRepresentation,
   :schema/domainIncludes :schema/MolecularEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/MolecularEntity"}})

(def inChIKey
  {:db/ident :schema/inChIKey,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "InChIKey is a hashed version of the full InChI (using the SHA-256 algorithm).",
   :rdfs/label "inChIKey",
   :rdfs/subPropertyOf :schema/hasRepresentation,
   :schema/domainIncludes :schema/MolecularEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/MolecularEntity"}})

(def inCodeSet
  {:db/ident :schema/inCodeSet,
   :rdf/type :rdf/Property,
   :rdfs/comment "A [[CategoryCodeSet]] that contains this category code.",
   :rdfs/label "inCodeSet",
   :rdfs/subPropertyOf :schema/inDefinedTermSet,
   :schema/domainIncludes :schema/CategoryCode,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CategoryCodeSet :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/894"}})

(def inDefinedTermSet
  {:db/ident             :schema/inDefinedTermSet,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A [[DefinedTermSet]] that contains this term.",
   :rdfs/label           "inDefinedTermSet",
   :rdfs/subPropertyOf   :schema/isPartOf,
   :schema/domainIncludes :schema/DefinedTerm,
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/URL :schema/DefinedTermSet},
   :schema/source        {:xsd/anyURI
                          "https://github.com/schemaorg/schemaorg/issues/894"}})

(def inLanguage
  {:db/ident :schema/inLanguage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The language of the content or performance or used in an action. Please use one of the language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47). See also [[availableLanguage]].",
   :rdfs/label "inLanguage",
   :schema/domainIncludes #{:schema/CreativeWork :schema/Event :schema/LinkRole
                            :schema/PronounceableText :schema/WriteAction
                            :schema/CommunicateAction :schema/BroadcastService},
   :schema/rangeIncludes #{:schema/Text :schema/Language},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2382"}})

(def inPlaylist
  {:db/ident             :schema/inPlaylist,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The playlist to which this recording belongs.",
   :rdfs/label           "inPlaylist",
   :schema/domainIncludes :schema/MusicRecording,
   :schema/rangeIncludes :schema/MusicPlaylist})

(def inProductGroupWithID
  {:db/ident :schema/inProductGroupWithID,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the [[productGroupID]] for a [[ProductGroup]] that this product [[isVariantOf]]. ",
   :rdfs/label "inProductGroupWithID",
   :schema/domainIncludes :schema/Product,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1797"}})

(def inStoreReturnsOffered
  {:db/ident :schema/inStoreReturnsOffered,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Are in-store returns offered? (For more advanced return methods use the [[returnMethod]] property.)",
   :rdfs/label "inStoreReturnsOffered",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def inSupportOf
  {:db/ident :schema/inSupportOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Qualification, candidature, degree, application that Thesis supports.",
   :rdfs/label "inSupportOf",
   :schema/domainIncludes :schema/Thesis,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def incentiveCompensation
  {:db/ident :schema/incentiveCompensation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Description of bonus and commission compensation aspects of the job.",
   :rdfs/label "incentiveCompensation",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Text})

(def incentives
  {:db/ident :schema/incentives,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Description of bonus and commission compensation aspects of the job.",
   :rdfs/label "incentives",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/incentiveCompensation})

(def includedComposition
  {:db/ident :schema/includedComposition,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Smaller compositions included in this work (e.g. a movement in a symphony).",
   :rdfs/label "includedComposition",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicComposition,
   :schema/rangeIncludes :schema/MusicComposition})

(def includedDataCatalog
  {:db/ident :schema/includedDataCatalog,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A data catalog which contains this dataset (this property was previously 'catalog', preferred name is now 'includedInDataCatalog').",
   :rdfs/label "includedDataCatalog",
   :schema/domainIncludes :schema/Dataset,
   :schema/rangeIncludes :schema/DataCatalog,
   :schema/supersededBy :schema/includedInDataCatalog})

(def includedInDataCatalog
  {:db/ident             :schema/includedInDataCatalog,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A data catalog which contains this dataset.",
   :rdfs/label           "includedInDataCatalog",
   :schema/domainIncludes :schema/Dataset,
   :schema/inverseOf     :schema/dataset,
   :schema/rangeIncludes :schema/DataCatalog})

(def includedInHealthInsurancePlan
  {:db/ident :schema/includedInHealthInsurancePlan,
   :rdf/type :rdf/Property,
   :rdfs/comment "The insurance plans that cover this drug.",
   :rdfs/label "includedInHealthInsurancePlan",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/HealthInsurancePlan,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def includedRiskFactor
  {:db/ident :schema/includedRiskFactor,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A modifiable or non-modifiable risk factor included in the calculation, e.g. age, coexisting condition.",
   :rdfs/label "includedRiskFactor",
   :schema/domainIncludes :schema/MedicalRiskEstimator,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalRiskFactor})

(def includesAttraction
  {:db/ident :schema/includesAttraction,
   :rdf/type :rdf/Property,
   :rdfs/comment "Attraction located at destination.",
   :rdfs/label "includesAttraction",
   :schema/contributor #{{:xsd/anyURI
                          "http://schema.org/docs/collab/IIT-CNR.it"}
                         {:xsd/anyURI "http://schema.org/docs/collab/Tourism"}},
   :schema/domainIncludes :schema/TouristDestination,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/TouristAttraction,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1810"}})

(def includesHealthPlanFormulary
  {:db/ident :schema/includesHealthPlanFormulary,
   :rdf/type :rdf/Property,
   :rdfs/comment "Formularies covered by this plan.",
   :rdfs/label "includesHealthPlanFormulary",
   :schema/domainIncludes :schema/HealthInsurancePlan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/HealthPlanFormulary,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def includesHealthPlanNetwork
  {:db/ident :schema/includesHealthPlanNetwork,
   :rdf/type :rdf/Property,
   :rdfs/comment "Networks covered by this plan.",
   :rdfs/label "includesHealthPlanNetwork",
   :schema/domainIncludes :schema/HealthInsurancePlan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/HealthPlanNetwork,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def includesObject
  {:db/ident :schema/includesObject,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This links to a node or nodes indicating the exact quantity of the products included in  an [[Offer]] or [[ProductCollection]].",
   :rdfs/label "includesObject",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/ProductCollection :schema/Demand
                            :schema/Offer},
   :schema/rangeIncludes :schema/TypeAndQuantityNode})

(def increasesRiskOf
  {:db/ident :schema/increasesRiskOf,
   :rdf/type :rdf/Property,
   :rdfs/comment "The condition, complication, etc. influenced by this factor.",
   :rdfs/label "increasesRiskOf",
   :schema/domainIncludes :schema/MedicalRiskFactor,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalEntity})

(def industry
  {:db/ident             :schema/industry,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The industry associated with the job position.",
   :rdfs/label           "industry",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text}})

(def ineligibleRegion
  {:db/ident :schema/ineligibleRegion,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The ISO 3166-1 (ISO 3166-1 alpha-2) or ISO 3166-2 code, the place, or the GeoShape for the geo-political region(s) for which the offer or delivery charge specification is not valid, e.g. a region where the transaction is not allowed.\\n\\nSee also [[eligibleRegion]].\n      ",
   :rdfs/label "ineligibleRegion",
   :schema/domainIncludes #{:schema/MediaObject
                            :schema/DeliveryChargeSpecification :schema/Demand
                            :schema/Offer :schema/ActionAccessSpecification},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Place :schema/GeoShape :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2242"}})

(def infectiousAgent
  {:db/ident :schema/infectiousAgent,
   :rdf/type :rdf/Property,
   :rdfs/comment "The actual infectious agent, such as a specific bacterium.",
   :rdfs/label "infectiousAgent",
   :schema/domainIncludes :schema/InfectiousDisease,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def infectiousAgentClass
  {:db/ident :schema/infectiousAgentClass,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The class of infectious agent (bacteria, prion, etc.) that causes the disease.",
   :rdfs/label "infectiousAgentClass",
   :schema/domainIncludes :schema/InfectiousDisease,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/InfectiousAgentClass})

(def ingredients
  {:db/ident :schema/ingredients,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A single ingredient used in the recipe, e.g. sugar, flour or garlic.",
   :rdfs/label "ingredients",
   :rdfs/subPropertyOf :schema/supply,
   :schema/domainIncludes :schema/Recipe,
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/recipeIngredient})

(def inker
  {:db/ident :schema/inker,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The individual who traces over the pencil drawings in ink after pencils are complete.",
   :rdfs/label "inker",
   :schema/domainIncludes #{:schema/VisualArtwork :schema/ComicStory
                            :schema/ComicIssue},
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Person})

(def insertion
  {:db/ident :schema/insertion,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The place of attachment of a muscle, or what the muscle moves.",
   :rdfs/label "insertion",
   :schema/domainIncludes :schema/Muscle,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AnatomicalStructure})

(def installUrl
  {:db/ident :schema/installUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "URL at which the app may be installed, if different from the URL of the item.",
   :rdfs/label "installUrl",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/URL})

(def instructor
  {:db/ident :schema/instructor,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A person assigned to instruct or provide instructional assistance for the [[CourseInstance]].",
   :rdfs/label "instructor",
   :schema/domainIncludes :schema/CourseInstance,
   :schema/rangeIncludes :schema/Person})

(def instrument
  {:db/ident :schema/instrument,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The object that helped the agent perform the action. E.g. John wrote a book with *a pen*.",
   :rdfs/label "instrument",
   :schema/domainIncludes :schema/Action,
   :schema/rangeIncludes :schema/Thing})

(def intensity
  {:db/ident :schema/intensity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Quantitative measure gauging the degree of force involved in the exercise, for example, heartbeats per minute. May include the velocity of the movement.",
   :rdfs/label "intensity",
   :schema/domainIncludes :schema/ExercisePlan,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Text}})

(def interactingDrug
  {:db/ident :schema/interactingDrug,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Another drug that is known to interact with this drug in a way that impacts the effect of this drug or causes a risk to the patient. Note: disease interactions are typically captured as contraindications.",
   :rdfs/label "interactingDrug",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Drug})

(def interactionCount
  {:db/ident :schema/interactionCount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This property is deprecated, alongside the UserInteraction types on which it depended.",
   :rdfs/label "interactionCount",
   :schema/supersededBy :schema/interactionStatistic})

(def interactionService
  {:db/ident :schema/interactionService,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The WebSite or SoftwareApplication where the interactions took place.",
   :rdfs/label "interactionService",
   :schema/domainIncludes :schema/InteractionCounter,
   :schema/rangeIncludes #{:schema/WebSite :schema/SoftwareApplication}})

(def interactionStatistic
  {:db/ident :schema/interactionStatistic,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication. The most specific child type of InteractionCounter should be used.",
   :rdfs/label "interactionStatistic",
   :schema/domainIncludes #{:schema/CreativeWork :schema/Organization
                            :schema/Person},
   :schema/rangeIncludes :schema/InteractionCounter,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2421"}})

(def interactionType
  {:db/ident :schema/interactionType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Action representing the type of interaction. For up votes, +1s, etc. use [[LikeAction]]. For down votes use [[DislikeAction]]. Otherwise, use the most specific Action.",
   :rdfs/label "interactionType",
   :schema/domainIncludes :schema/InteractionCounter,
   :schema/rangeIncludes :schema/Action})

(def interactivityType
  {:db/ident :schema/interactivityType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The predominant mode of learning supported by the learning resource. Acceptable values are 'active', 'expositive', or 'mixed'.",
   :rdfs/label "interactivityType",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text})

(def interestRate
  {:db/ident :schema/interestRate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The interest rate, charged or paid, applicable to the financial product. Note: This is different from the calculated annualPercentageRate.",
   :rdfs/label "interestRate",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/FinancialProduct,
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def interpretedAsClaim
  {:db/ident :schema/interpretedAsClaim,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Used to indicate a specific claim contained, implied, translated or refined from the content of a [[MediaObject]] or other [[CreativeWork]]. The interpreting party can be indicated using [[claimInterpreter]].",
   :rdfs/label "interpretedAsClaim",
   :rdfs/subPropertyOf :schema/description,
   :schema/domainIncludes #{:schema/MediaObject :schema/CreativeWork},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Claim,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def inventoryLevel
  {:db/ident :schema/inventoryLevel,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The current approximate inventory level for the item or items.",
   :rdfs/label "inventoryLevel",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/SomeProducts :schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def inverseOf
  {:db/ident :schema/inverseOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Relates a property to a property that is its inverse. Inverse properties relate the same pairs of items to each other, but in reversed direction. For example, the 'alumni' and 'alumniOf' properties are inverseOf each other. Some properties don't have explicit inverses; in these situations RDFa and JSON-LD syntax for reverse properties can be used.",
   :rdfs/label "inverseOf",
   :schema/domainIncludes :schema/Property,
   :schema/isPartOf {:xsd/anyURI "http://meta.schema.org"},
   :schema/rangeIncludes :schema/Property})

(def isAcceptingNewPatients
  {:db/ident :schema/isAcceptingNewPatients,
   :rdf/type :rdf/Property,
   :rdfs/comment "Whether the provider is accepting new patients.",
   :rdfs/label "isAcceptingNewPatients",
   :schema/domainIncludes :schema/MedicalOrganization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def isAccessibleForFree
  {:db/ident :schema/isAccessibleForFree,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A flag to signal that the item, event, or place is accessible for free.",
   :rdfs/label "isAccessibleForFree",
   :schema/domainIncludes #{:schema/Place :schema/CreativeWork :schema/Event},
   :schema/rangeIncludes :schema/Boolean})

(def isAccessoryOrSparePartFor
  {:db/ident :schema/isAccessoryOrSparePartFor,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A pointer to another product (or multiple products) for which this product is an accessory or spare part.",
   :rdfs/label "isAccessoryOrSparePartFor",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/Product,
   :schema/rangeIncludes :schema/Product})

(def isAvailableGenerically
  {:db/ident :schema/isAvailableGenerically,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "True if the drug is available in a generic form (regardless of name).",
   :rdfs/label "isAvailableGenerically",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Boolean})

(def isBasedOn
  {:db/ident :schema/isBasedOn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A resource from which this work is derived or from which it is a modification or adaptation.",
   :rdfs/label "isBasedOn",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Product :schema/CreativeWork :schema/URL}})

(def isBasedOnUrl
  {:db/ident :schema/isBasedOnUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A resource that was used in the creation of this resource. This term can be repeated for multiple sources. For example, http://example.com/great-multiplication-intro.html.",
   :rdfs/label "isBasedOnUrl",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Product :schema/CreativeWork :schema/URL},
   :schema/supersededBy :schema/isBasedOn})

(def isConsumableFor
  {:db/ident :schema/isConsumableFor,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A pointer to another product (or multiple products) for which this product is a consumable.",
   :rdfs/label "isConsumableFor",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/Product,
   :schema/rangeIncludes :schema/Product})

(def isEncodedByBioChemEntity
  {:db/ident             :schema/isEncodedByBioChemEntity,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Another BioChemEntity encoding by this one.",
   :rdfs/label           "isEncodedByBioChemEntity",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/inverseOf     :schema/encodesBioChemEntity,
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Gene,
   :schema/source        {:xsd/anyURI "http://www.bioschemas.org/Gene"}})

(def isFamilyFriendly
  {:db/ident             :schema/isFamilyFriendly,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Indicates whether this content is family friendly.",
   :rdfs/label           "isFamilyFriendly",
   :schema/domainIncludes #{:schema/Product :schema/CreativeWork :schema/Offer},
   :schema/rangeIncludes :schema/Boolean})

(def isGift
  {:db/ident :schema/isGift,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether the offer was accepted as a gift for someone other than the buyer.",
   :rdfs/label "isGift",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes :schema/Boolean})

(def isInvolvedInBiologicalProcess
  {:db/ident :schema/isInvolvedInBiologicalProcess,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Biological process this BioChemEntity is involved in; please use PropertyValue if you want to include any evidence.",
   :rdfs/label "isInvolvedInBiologicalProcess",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/PropertyValue
                           :schema/URL},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/BioChemEntity"}})

(def isLiveBroadcast
  {:db/ident             :schema/isLiveBroadcast,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "True if the broadcast is of a live event.",
   :rdfs/label           "isLiveBroadcast",
   :schema/domainIncludes :schema/BroadcastEvent,
   :schema/rangeIncludes :schema/Boolean})

(def isLocatedInSubcellularLocation
  {:db/ident :schema/isLocatedInSubcellularLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Subcellular location where this BioChemEntity is located; please use PropertyValue if you want to include any evidence.",
   :rdfs/label "isLocatedInSubcellularLocation",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/PropertyValue
                           :schema/URL},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/BioChemEntity"}})

(def isPartOf
  {:db/ident :schema/isPartOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates an item or CreativeWork that this item, or CreativeWork (in some sense), is part of.",
   :rdfs/label "isPartOf",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/inverseOf :schema/hasPart,
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL}})

(def isPartOfBioChemEntity
  {:db/ident :schema/isPartOfBioChemEntity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a BioChemEntity that is (in some sense) a part of this BioChemEntity. ",
   :rdfs/label "isPartOfBioChemEntity",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/inverseOf :schema/hasBioChemEntityPart,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/BioChemEntity,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org"}})

(def isPlanForApartment
  {:db/ident :schema/isPlanForApartment,
   :rdf/type :rdf/Property,
   :rdfs/comment "Indicates some accommodation that this floor plan describes.",
   :rdfs/label "isPlanForApartment",
   :schema/domainIncludes :schema/FloorPlan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Accommodation,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def isProprietary
  {:db/ident :schema/isProprietary,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "True if this item's name is a proprietary/brand name (vs. generic name).",
   :rdfs/label "isProprietary",
   :schema/domainIncludes #{:schema/DietarySupplement :schema/Drug},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Boolean})

(def isRelatedTo
  {:db/ident :schema/isRelatedTo,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A pointer to another, somehow related product (or multiple products).",
   :rdfs/label "isRelatedTo",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Product :schema/Service},
   :schema/rangeIncludes #{:schema/Product :schema/Service}})

(def isResizable
  {:db/ident :schema/isResizable,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Whether the 3DModel allows resizing. For example, room layout applications often do not allow 3DModel elements to be resized to reflect reality.",
   :rdfs/label "isResizable",
   :schema/domainIncludes :schema/|3DModel|,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2394"}})

(def isSimilarTo
  {:db/ident :schema/isSimilarTo,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A pointer to another, functionally similar product (or multiple products).",
   :rdfs/label "isSimilarTo",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Product :schema/Service},
   :schema/rangeIncludes #{:schema/Product :schema/Service}})

(def isUnlabelledFallback
  {:db/ident :schema/isUnlabelledFallback,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This can be marked 'true' to indicate that some published [[DeliveryTimeSettings]] or [[ShippingRateSettings]] are intended to apply to all [[OfferShippingDetails]] published by the same merchant, when referenced by a [[shippingSettingsLink]] in those settings. It is not meaningful to use a 'true' value for this property alongside a transitTimeLabel (for [[DeliveryTimeSettings]]) or shippingLabel (for [[ShippingRateSettings]]), since this property is for use with unlabelled settings.",
   :rdfs/label "isUnlabelledFallback",
   :schema/domainIncludes #{:schema/ShippingRateSettings
                            :schema/DeliveryTimeSettings},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def isVariantOf
  {:db/ident :schema/isVariantOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the kind of product that this is a variant of. In the case of [[ProductModel]], this is a pointer (from a ProductModel) to a base product from which this product is a variant. It is safe to infer that the variant inherits all product features from the base model, unless defined locally. This is not transitive. In the case of a [[ProductGroup]], the group description also serves as a template, representing a set of Products that vary on explicitly defined, specific dimensions only (so it defines both a set of variants, as well as which values distinguish amongst those variants). When used with [[ProductGroup]], this property can apply to any [[Product]] included in the group.",
   :rdfs/label "isVariantOf",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Product :schema/ProductModel},
   :schema/inverseOf :schema/hasVariant,
   :schema/rangeIncludes #{:schema/ProductModel :schema/ProductGroup}})

(def isbn
  {:db/ident :schema/isbn,
   :owl/equivalentProperty :bibo/isbn,
   :rdf/type :rdf/Property,
   :rdfs/comment "The ISBN of the book.",
   :rdfs/label "isbn",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes :schema/Book,
   :schema/rangeIncludes :schema/Text})

(def isicV4
  {:db/ident :schema/isicV4,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The International Standard of Industrial Classification of All Economic Activities (ISIC), Revision 4 code for a particular organization, business person, or place.",
   :rdfs/label "isicV4",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Place :schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def iso6523Code
  {:db/ident :schema/iso6523Code,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An organization identifier as defined in ISO 6523(-1). Note that many existing organization identifiers such as [leiCode](http://schema.org/leiCode), [duns](http://schema.org/duns) and [vatID](http://schema.org/vatID) can be expressed as an ISO 6523 identifier by setting the ICD part of the ISO 6523 identifier accordingly. ",
   :rdfs/label "iso6523Code",
   :schema/domainIncludes :schema/Organization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2915"}})

(def isrcCode
  {:db/ident :schema/isrcCode,
   :rdf/type :rdf/Property,
   :rdfs/comment "The International Standard Recording Code for the recording.",
   :rdfs/label "isrcCode",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicRecording,
   :schema/rangeIncludes :schema/Text})

(def issn
  {:db/ident :schema/issn,
   :owl/equivalentProperty :bibo/issn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The International Standard Serial Number (ISSN) that identifies this serial publication. You can repeat this property to identify different formats of, or the linking ISSN (ISSN-L) for, this serial publication.",
   :rdfs/label "issn",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"},
   :schema/domainIncludes #{:schema/Blog :schema/WebSite
                            :schema/CreativeWorkSeries :schema/Dataset},
   :schema/rangeIncludes :schema/Text})

(def issueNumber
  {:db/ident :schema/issueNumber,
   :owl/equivalentProperty :bibo/issue,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Identifies the issue of publication; for example, \"iii\" or \"2\".",
   :rdfs/label "issueNumber",
   :rdfs/subPropertyOf :schema/position,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"},
   :schema/domainIncludes :schema/PublicationIssue,
   :schema/rangeIncludes #{:schema/Integer :schema/Text}})

(def issuedBy
  {:db/ident             :schema/issuedBy,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The organization issuing the ticket or permit.",
   :rdfs/label           "issuedBy",
   :schema/domainIncludes #{:schema/Permit :schema/Ticket},
   :schema/rangeIncludes :schema/Organization})

(def issuedThrough
  {:db/ident             :schema/issuedThrough,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The service through which the permit was granted.",
   :rdfs/label           "issuedThrough",
   :schema/domainIncludes :schema/Permit,
   :schema/rangeIncludes :schema/Service})

(def iswcCode
  {:db/ident :schema/iswcCode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The International Standard Musical Work Code for the composition.",
   :rdfs/label "iswcCode",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicComposition,
   :schema/rangeIncludes :schema/Text})

(def item
  {:db/ident :schema/item,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An entity represented by an entry in a list or data feed (e.g. an 'artist' in a list of 'artists').",
   :rdfs/label "item",
   :schema/domainIncludes #{:schema/ListItem :schema/DataFeedItem},
   :schema/rangeIncludes :schema/Thing})

(def itemCondition
  {:db/ident :schema/itemCondition,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A predefined value from OfferItemCondition specifying the condition of the product or service, or the products or services included in the offer. Also used for product return policies to specify the condition of products accepted for returns.",
   :rdfs/label "itemCondition",
   :schema/domainIncludes #{:schema/Product :schema/MerchantReturnPolicy
                            :schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/OfferItemCondition})

(def itemDefectReturnFees
  {:db/ident :schema/itemDefectReturnFees,
   :rdf/type :rdf/Property,
   :rdfs/comment "The type of return fees for returns of defect products.",
   :rdfs/label "itemDefectReturnFees",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ReturnFeesEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def itemDefectReturnLabelSource
  {:db/ident :schema/itemDefectReturnLabelSource,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The method (from an enumeration) by which the customer obtains a return shipping label for a defect product.",
   :rdfs/label "itemDefectReturnLabelSource",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ReturnLabelSourceEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def itemDefectReturnShippingFeesAmount
  {:db/ident :schema/itemDefectReturnShippingFeesAmount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Amount of shipping costs for defect product returns. Applicable when property [[itemDefectReturnFees]] equals [[ReturnShippingFees]].",
   :rdfs/label "itemDefectReturnShippingFeesAmount",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def itemListElement
  {:db/ident :schema/itemListElement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For itemListElement values, you can use simple strings (e.g. \"Peter\", \"Paul\", \"Mary\"), existing entities, or use ListItem.\\n\\nText values are best if the elements in the list are plain strings. Existing entities are best for a simple, unordered list of existing things in your data. ListItem is used with ordered lists when you want to provide additional context about the element in that list or when the same item might be in different places in different lists.\\n\\nNote: The order of elements in your mark-up is not sufficient for indicating the order or elements.  Use ListItem with a 'position' property in such cases.",
   :rdfs/label "itemListElement",
   :schema/domainIncludes :schema/ItemList,
   :schema/rangeIncludes #{:schema/ListItem :schema/Thing :schema/Text}})

(def itemListOrder
  {:db/ident :schema/itemListOrder,
   :rdf/type :rdf/Property,
   :rdfs/comment "Type of ordering (e.g. Ascending, Descending, Unordered).",
   :rdfs/label "itemListOrder",
   :schema/domainIncludes :schema/ItemList,
   :schema/rangeIncludes #{:schema/Text :schema/ItemListOrderType}})

(def itemLocation
  {:db/ident :schema/itemLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment {:rdf/language "en",
                  :rdf/value    "Current location of the item."},
   :rdfs/label {:rdf/language "en",
                :rdf/value    "itemLocation"},
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/ArchiveComponent,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Place :schema/PostalAddress :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1758"}})

(def itemOffered
  {:db/ident :schema/itemOffered,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An item being offered (or demanded). The transactional nature of the offer or demand is documented using [[businessFunction]], e.g. sell, lease etc. While several common expected types are listed explicitly in this definition, others can be used. Using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.",
   :rdfs/label "itemOffered",
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/inverseOf :schema/offers,
   :schema/rangeIncludes #{:schema/Product :schema/CreativeWork
                           :schema/AggregateOffer :schema/Event :schema/MenuItem
                           :schema/Service :schema/Trip}})

(def itemReviewed
  {:db/ident             :schema/itemReviewed,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The item that is being reviewed/rated.",
   :rdfs/label           "itemReviewed",
   :schema/domainIncludes #{:schema/Review :schema/AggregateRating},
   :schema/rangeIncludes :schema/Thing})

(def itemShipped
  {:db/ident             :schema/itemShipped,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Item(s) being shipped.",
   :rdfs/label           "itemShipped",
   :schema/domainIncludes :schema/ParcelDelivery,
   :schema/rangeIncludes :schema/Product})

(def itinerary
  {:db/ident :schema/itinerary,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Destination(s) ( [[Place]] ) that make up a trip. For a trip where destination order is important use [[ItemList]] to specify that order (see examples).",
   :rdfs/label "itinerary",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/Tourism"},
   :schema/domainIncludes :schema/Trip,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/ItemList :schema/Place},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1810"}})

(def iupacName
  {:db/ident :schema/iupacName,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Systematic method of naming chemical compounds as recommended by the International Union of Pure and Applied Chemistry (IUPAC).",
   :rdfs/label "iupacName",
   :schema/domainIncludes :schema/MolecularEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/MolecularEntity"}})

(def jobBenefits
  {:db/ident             :schema/jobBenefits,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Description of benefits associated with the job.",
   :rdfs/label           "jobBenefits",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Text})

(def jobImmediateStart
  {:db/ident :schema/jobImmediateStart,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An indicator as to whether a position is available for an immediate start.",
   :rdfs/label "jobImmediateStart",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2244"}})

(def jobLocation
  {:db/ident :schema/jobLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A (typically single) geographic location associated with the job position.",
   :rdfs/label "jobLocation",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Place})

(def jobLocationType
  {:db/ident :schema/jobLocationType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of the job location (e.g. TELECOMMUTE for telecommute jobs).",
   :rdfs/label "jobLocationType",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1591"}})

(def jobStartDate
  {:db/ident :schema/jobStartDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date on which a successful applicant for this job would be expected to start work. Choose a specific date in the future or use the jobImmediateStart property to indicate the position is to be filled as soon as possible.",
   :rdfs/label "jobStartDate",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/Date},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2244"}})

(def jobTitle
  {:db/ident :schema/jobTitle,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The job title of the person (for example, Financial Manager).",
   :rdfs/label "jobTitle",
   :schema/domainIncludes :schema/Person,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2192"}})

(def jurisdiction
  {:db/ident :schema/jurisdiction,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a legal jurisdiction, e.g. of some legislation, or where some government service is based.",
   :rdfs/label "jurisdiction",
   :schema/domainIncludes #{:schema/Legislation :schema/GovernmentService},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/AdministrativeArea :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2534"}})

(def keywords
  {:db/ident :schema/keywords,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Keywords or tags used to describe some item. Multiple textual entries in a keywords list are typically delimited by commas, or by repeating the property.",
   :rdfs/label "keywords",
   :schema/domainIncludes #{:schema/Place :schema/Product :schema/CreativeWork
                            :schema/Event :schema/Organization},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text :schema/URL}})

(def knownVehicleDamages
  {:db/ident :schema/knownVehicleDamages,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A textual description of known damages, both repaired and unrepaired.",
   :rdfs/label "knownVehicleDamages",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/Text})

(def knows
  {:db/ident :schema/knows,
   :rdf/type :rdf/Property,
   :rdfs/comment "The most generic bi-directional social/work relation.",
   :rdfs/label "knows",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person})

(def knowsAbout
  {:db/ident :schema/knowsAbout,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Of a [[Person]], and less typically of an [[Organization]], to indicate a topic that is known about - suggesting possible expertise but not implying it. We do not distinguish skill levels here, or relate this to educational content, events, objectives or [[JobPosting]] descriptions.",
   :rdfs/label "knowsAbout",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Thing :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1688"}})

(def knowsLanguage
  {:db/ident :schema/knowsLanguage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Of a [[Person]], and less typically of an [[Organization]], to indicate a known language. We do not distinguish skill levels or reading/writing/speaking/signing here. Use language codes from the [IETF BCP 47 standard](http://tools.ietf.org/html/bcp47).",
   :rdfs/label "knowsLanguage",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/Language},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1688"}})

(def labelDetails
  {:db/ident             :schema/labelDetails,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Link to the drug's label details.",
   :rdfs/label           "labelDetails",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/URL})

(def landlord
  {:db/ident :schema/landlord,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of participant. The owner of the real estate property.",
   :rdfs/label "landlord",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/RentAction,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def language
  {:db/ident :schema/language,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of instrument. The language used on this action.",
   :rdfs/label "language",
   :rdfs/subPropertyOf :schema/instrument,
   :schema/domainIncludes #{:schema/WriteAction :schema/CommunicateAction},
   :schema/rangeIncludes :schema/Language,
   :schema/supersededBy :schema/inLanguage})

(def lastReviewed
  {:db/ident :schema/lastReviewed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Date on which the content on this web page was last reviewed for accuracy and/or completeness.",
   :rdfs/label "lastReviewed",
   :schema/domainIncludes :schema/WebPage,
   :schema/rangeIncludes :schema/Date})

(def latitude
  {:db/ident :schema/latitude,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The latitude of a location. For example ```37.42242``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).",
   :rdfs/label "latitude",
   :schema/domainIncludes #{:schema/Place :schema/GeoCoordinates},
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def layoutImage
  {:db/ident :schema/layoutImage,
   :rdf/type :rdf/Property,
   :rdfs/comment "A schematic image showing the floorplan layout.",
   :rdfs/label "layoutImage",
   :rdfs/subPropertyOf :schema/image,
   :schema/domainIncludes :schema/FloorPlan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/ImageObject :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2690"}})

(def learningResourceType
  {:db/ident :schema/learningResourceType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The predominant type or kind characterizing the learning resource. For example, 'presentation', 'handout'.",
   :rdfs/label "learningResourceType",
   :schema/domainIncludes #{:schema/LearningResource :schema/CreativeWork},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text}})

(def leaseLength
  {:db/ident :schema/leaseLength,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Length of the lease for some [[Accommodation]], either particular to some [[Offer]] or in some cases intrinsic to the property.",
   :rdfs/label "leaseLength",
   :schema/domainIncludes #{:schema/Accommodation :schema/Offer
                            :schema/RealEstateListing},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Duration},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def legalName
  {:db/ident :schema/legalName,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The official name of the organization, e.g. the registered company name.",
   :rdfs/label "legalName",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Text})

(def legalStatus
  {:db/ident :schema/legalStatus,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The drug or supplement's legal status, including any controlled substance schedules that apply.",
   :rdfs/label "legalStatus",
   :schema/domainIncludes #{:schema/DietarySupplement :schema/Drug
                            :schema/MedicalEntity},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/MedicalEnumeration :schema/DrugLegalStatus
                           :schema/Text}})

(def legislationApplies
  {:db/ident :schema/legislationApplies,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#implements"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates that this legislation (or part of a legislation) somehow transfers another legislation in a different legislative context. This is an informative link, and it has no legal value. For legally-binding links of transposition, use the <a href=\"/legislationTransposes\">legislationTransposes</a> property. For example an informative consolidated law of a European Union's member state \"applies\" the consolidated version of the European Directive implemented in it.",
   :rdfs/label "legislationApplies",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Legislation,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#implements"}})

(def legislationChanges
  {:db/ident :schema/legislationChanges,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#changes"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Another legislation that this legislation changes. This encompasses the notions of amendment, replacement, correction, repeal, or other types of change. This may be a direct change (textual or non-textual amendment) or a consequential or indirect change. The property is to be used to express the existence of a change relationship between two acts rather than the existence of a consolidated version of the text that shows the result of the change. For consolidation relationships, use the <a href=\"/legislationConsolidates\">legislationConsolidates</a> property.",
   :rdfs/label "legislationChanges",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Legislation,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI "http://data.europa.eu/eli/ontology#changes"}})

(def legislationConsolidates
  {:db/ident :schema/legislationConsolidates,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#consolidates"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates another legislation taken into account in this consolidated legislation (which is usually the product of an editorial process that revises the legislation). This property should be used multiple times to refer to both the original version or the previous consolidated version, and to the legislations making the change.",
   :rdfs/label "legislationConsolidates",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Legislation,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#consolidates"}})

(def legislationDate
  {:db/ident :schema/legislationDate,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#date_document"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date of adoption or signature of the legislation. This is the date at which the text is officially aknowledged to be a legislation, even though it might not even be published or in force.",
   :rdfs/label "legislationDate",
   :rdfs/subPropertyOf :schema/dateCreated,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Date,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#date_document"}})

(def legislationDateVersion
  {:db/ident :schema/legislationDateVersion,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#version_date"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The point-in-time at which the provided description of the legislation is valid (e.g.: when looking at the law on the 2016-04-07 (= dateVersion), I get the consolidation of 2015-04-12 of the \"National Insurance Contributions Act 2015\")",
   :rdfs/label "legislationDateVersion",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Date,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#version_date"}})

(def legislationIdentifier
  {:db/ident :schema/legislationIdentifier,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An identifier for the legislation. This can be either a string-based identifier, like the CELEX at EU level or the NOR in France, or a web-based, URL/URI identifier, like an ELI (European Legislation Identifier) or an URN-Lex.",
   :rdfs/label "legislationIdentifier",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/closeMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#id_local"}})

(def legislationJurisdiction
  {:db/ident :schema/legislationJurisdiction,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#jurisdiction"},
   :rdf/type :rdf/Property,
   :rdfs/comment "The jurisdiction from which the legislation originates.",
   :rdfs/label "legislationJurisdiction",
   :rdfs/subPropertyOf #{:schema/jurisdiction :schema/spatialCoverage},
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/AdministrativeArea :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#jurisdiction"}})

(def legislationLegalForce
  {:db/ident :schema/legislationLegalForce,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#in_force"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Whether the legislation is currently in force, not in force, or partially in force.",
   :rdfs/label "legislationLegalForce",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/LegalForceStatus,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#in_force"}})

(def legislationLegalValue
  {:db/ident :schema/legislationLegalValue,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#legal_value"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The legal value of this legislation file. The same legislation can be written in multiple files with different legal values. Typically a digitally signed PDF have a \"stronger\" legal value than the HTML file of the same act.",
   :rdfs/label "legislationLegalValue",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/LegislationObject,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/LegalValueLevel,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#legal_value"}})

(def legislationPassedBy
  {:db/ident :schema/legislationPassedBy,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#passed_by"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The person or organization that originally passed or made the law: typically parliament (for primary legislation) or government (for secondary legislation). This indicates the \"legal author\" of the law, as opposed to its physical author.",
   :rdfs/label "legislationPassedBy",
   :rdfs/subPropertyOf :schema/creator,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#passed_by"}})

(def legislationResponsible
  {:db/ident :schema/legislationResponsible,
   :owl/equivalentProperty
   {:xsd/anyURI "http://data.europa.eu/eli/ontology#responsibility_of"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An individual or organization that has some kind of responsibility for the legislation. Typically the ministry who is/was in charge of elaborating the legislation, or the adressee for potential questions about the legislation once it is published.",
   :rdfs/label "legislationResponsible",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#responsibility_of"}})

(def legislationTransposes
  {:db/ident :schema/legislationTransposes,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#transposes"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates that this legislation (or part of legislation) fulfills the objectives set by another legislation, by passing appropriate implementation measures. Typically, some legislations of European Union's member states or regions transpose European Directives. This indicates a legally binding link between the 2 legislations.",
   :rdfs/label "legislationTransposes",
   :rdfs/subPropertyOf :schema/legislationApplies,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Legislation,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#transposes"}})

(def legislationType
  {:db/ident :schema/legislationType,
   :owl/equivalentProperty {:xsd/anyURI
                            "http://data.europa.eu/eli/ontology#type_document"},
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of the legislation. Examples of values are \"law\", \"act\", \"directive\", \"decree\", \"regulation\", \"statutory instrument\", \"loi organique\", \"règlement grand-ducal\", etc., depending on the country.",
   :rdfs/label "legislationType",
   :rdfs/subPropertyOf :schema/genre,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/ELI"},
   :schema/domainIncludes :schema/Legislation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CategoryCode :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1156"},
   :skos/exactMatch {:xsd/anyURI
                     "http://data.europa.eu/eli/ontology#type_document"}})

(def leiCode
  {:db/ident :schema/leiCode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An organization identifier that uniquely identifies a legal entity as defined in ISO 17442.",
   :rdfs/label "leiCode",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/contributor #{{:xsd/anyURI "http://schema.org/docs/collab/GLEIF"}
                         {:xsd/anyURI "http://schema.org/docs/collab/FIBO"}},
   :schema/domainIncludes :schema/Organization,
   :schema/rangeIncludes :schema/Text})

(def lender
  {:db/ident :schema/lender,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of participant. The person that lends the object being borrowed.",
   :rdfs/label "lender",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/BorrowAction,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def lesser
  {:db/ident :schema/lesser,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This ordering relation for qualitative values indicates that the subject is lesser than the object.",
   :rdfs/label "lesser",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/QualitativeValue,
   :schema/rangeIncludes :schema/QualitativeValue})

(def lesserOrEqual
  {:db/ident :schema/lesserOrEqual,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This ordering relation for qualitative values indicates that the subject is lesser than or equal to the object.",
   :rdfs/label "lesserOrEqual",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/QualitativeValue,
   :schema/rangeIncludes :schema/QualitativeValue})

(def letterer
  {:db/ident :schema/letterer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The individual who adds lettering, including speech balloons and sound effects, to artwork.",
   :rdfs/label "letterer",
   :schema/domainIncludes #{:schema/VisualArtwork :schema/ComicStory
                            :schema/ComicIssue},
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Person})

(def license
  {:db/ident :schema/license,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A license document that applies to this content, typically indicated by URL.",
   :rdfs/label "license",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL}})

(def line
  {:db/ident :schema/line,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A line is a point-to-point path consisting of two or more points. A line is expressed as a series of two or more point objects separated by space.",
   :rdfs/label "line",
   :schema/domainIncludes :schema/GeoShape,
   :schema/rangeIncludes :schema/Text})

(def linkRelationship
  {:db/ident :schema/linkRelationship,
   :rdf/type :rdf/Property,
   :rdfs/comment "Indicates the relationship type of a Web link. ",
   :rdfs/label "linkRelationship",
   :schema/domainIncludes :schema/LinkRole,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1045"}})

(def liveBlogUpdate
  {:db/ident             :schema/liveBlogUpdate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An update to the LiveBlog.",
   :rdfs/label           "liveBlogUpdate",
   :schema/domainIncludes :schema/LiveBlogPosting,
   :schema/rangeIncludes :schema/BlogPosting})

(def loanMortgageMandateAmount
  {:db/ident :schema/loanMortgageMandateAmount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Amount of mortgage mandate that can be converted into a proper mortgage at a later stage.",
   :rdfs/label "loanMortgageMandateAmount",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/MortgageLoan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def loanPaymentAmount
  {:db/ident :schema/loanPaymentAmount,
   :rdf/type :rdf/Property,
   :rdfs/comment "The amount of money to pay in a single payment.",
   :rdfs/label "loanPaymentAmount",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/RepaymentSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def loanPaymentFrequency
  {:db/ident :schema/loanPaymentFrequency,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Frequency of payments due, i.e. number of months between payments. This is defined as a frequency, i.e. the reciprocal of a period of time.",
   :rdfs/label "loanPaymentFrequency",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/RepaymentSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def loanRepaymentForm
  {:db/ident :schema/loanRepaymentForm,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A form of paying back money previously borrowed from a lender. Repayment usually takes the form of periodic payments that normally include part principal plus interest in each payment.",
   :rdfs/label "loanRepaymentForm",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/LoanOrCredit,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/RepaymentSpecification,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def loanTerm
  {:db/ident           :schema/loanTerm,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The duration of the loan or credit agreement.",
   :rdfs/label         "loanTerm",
   :rdfs/subPropertyOf :schema/duration,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/LoanOrCredit,
   :schema/rangeIncludes :schema/QuantitativeValue})

(def loanType
  {:db/ident :schema/loanType,
   :rdf/type :rdf/Property,
   :rdfs/comment "The type of a loan or credit.",
   :rdfs/label "loanType",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/LoanOrCredit,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def location
  {:db/ident :schema/location,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The location of, for example, where an event is happening, where an organization is located, or where an action takes place.",
   :rdfs/label "location",
   :schema/domainIncludes #{:schema/InteractionCounter :schema/Event
                            :schema/Action :schema/Organization},
   :schema/rangeIncludes #{:schema/Place :schema/VirtualLocation
                           :schema/PostalAddress :schema/Text}})

(def locationCreated
  {:db/ident :schema/locationCreated,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The location where the CreativeWork was created, which may not be the same as the location depicted in the CreativeWork.",
   :rdfs/label "locationCreated",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Place})

(def lodgingUnitDescription
  {:db/ident             :schema/lodgingUnitDescription,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A full description of the lodging unit.",
   :rdfs/label           "lodgingUnitDescription",
   :schema/domainIncludes :schema/LodgingReservation,
   :schema/rangeIncludes :schema/Text})

(def lodgingUnitType
  {:db/ident :schema/lodgingUnitType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Textual description of the unit type (including suite vs. room, size of bed, etc.).",
   :rdfs/label "lodgingUnitType",
   :schema/domainIncludes :schema/LodgingReservation,
   :schema/rangeIncludes #{:schema/Text :schema/QualitativeValue}})

(def logo
  {:db/ident           :schema/logo,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "An associated logo.",
   :rdfs/label         "logo",
   :rdfs/subPropertyOf :schema/image,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Place :schema/Product :schema/Brand
                            :schema/Organization :schema/Service},
   :schema/rangeIncludes #{:schema/ImageObject :schema/URL}})

(def longitude
  {:db/ident :schema/longitude,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The longitude of a location. For example ```-122.08585``` ([WGS 84](https://en.wikipedia.org/wiki/World_Geodetic_System)).",
   :rdfs/label "longitude",
   :schema/domainIncludes #{:schema/Place :schema/GeoCoordinates},
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def loser
  {:db/ident :schema/loser,
   :rdf/type :rdf/Property,
   :rdfs/comment "A sub property of participant. The loser of the action.",
   :rdfs/label "loser",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/WinAction,
   :schema/rangeIncludes :schema/Person})

(def lowPrice
  {:db/ident :schema/lowPrice,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The lowest price of all offers available.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
   :rdfs/label "lowPrice",
   :schema/domainIncludes :schema/AggregateOffer,
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def lyricist
  {:db/ident           :schema/lyricist,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The person who wrote the words.",
   :rdfs/label         "lyricist",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicComposition,
   :schema/rangeIncludes :schema/Person})

(def lyrics
  {:db/ident           :schema/lyrics,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The words in the song.",
   :rdfs/label         "lyrics",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicComposition,
   :schema/rangeIncludes :schema/CreativeWork})

(def mainContentOfPage
  {:db/ident :schema/mainContentOfPage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates if this web page element is the main subject of the page.",
   :rdfs/label "mainContentOfPage",
   :schema/domainIncludes :schema/WebPage,
   :schema/rangeIncludes :schema/WebPageElement})

(def mainEntity
  {:db/ident :schema/mainEntity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the primary entity described in some page or other CreativeWork.",
   :rdfs/label "mainEntity",
   :rdfs/subPropertyOf :schema/about,
   :schema/domainIncludes :schema/CreativeWork,
   :schema/inverseOf :schema/mainEntityOfPage,
   :schema/rangeIncludes :schema/Thing})

(def mainEntityOfPage
  {:db/ident :schema/mainEntityOfPage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a page (or other CreativeWork) for which this thing is the main entity being described. See [background notes](/docs/datamodel.html#mainEntityBackground) for details.",
   :rdfs/label "mainEntityOfPage",
   :schema/domainIncludes :schema/Thing,
   :schema/inverseOf :schema/mainEntity,
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL}})

(def maintainer
  {:db/ident :schema/maintainer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A maintainer of a [[Dataset]], software package ([[SoftwareApplication]]), or other [[Project]]. A maintainer is a [[Person]] or [[Organization]] that manages contributions to, and/or publication of, some (typically complex) artifact. It is common for distributions of software and data to be based on \"upstream\" sources. When [[maintainer]] is applied to a specific version of something e.g. a particular version or packaging of a [[Dataset]], it is always  possible that the upstream source has a different maintainer. The [[isBasedOn]] property can be used to indicate such relationships between datasets to make the different maintenance roles clear. Similarly in the case of software, a package may have dedicated maintainers working on integration into software distributions such as Ubuntu, as well as upstream maintainers of the underlying work.\n      ",
   :rdfs/label "maintainer",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2311"}})

(def makesOffer
  {:db/ident :schema/makesOffer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A pointer to products or services offered by the organization or person.",
   :rdfs/label "makesOffer",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/inverseOf :schema/offeredBy,
   :schema/rangeIncludes :schema/Offer})

(def manufacturer
  {:db/ident             :schema/manufacturer,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The manufacturer of the product.",
   :rdfs/label           "manufacturer",
   :schema/domainIncludes :schema/Product,
   :schema/rangeIncludes :schema/Organization})

(def map
  {:db/ident            :schema/map,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A URL to a map of the place.",
   :rdfs/label          "map",
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes :schema/URL,
   :schema/supersededBy :schema/hasMap})

(def mapType
  {:db/ident :schema/mapType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the kind of Map, from the MapCategoryType Enumeration.",
   :rdfs/label "mapType",
   :schema/domainIncludes :schema/Map,
   :schema/rangeIncludes :schema/MapCategoryType})

(def maps
  {:db/ident            :schema/maps,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A URL to a map of the place.",
   :rdfs/label          "maps",
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes :schema/URL,
   :schema/supersededBy :schema/hasMap})

(def marginOfError
  {:db/ident :schema/marginOfError,
   :rdf/type :rdf/Property,
   :rdfs/comment "A [[marginOfError]] for an [[Observation]].",
   :rdfs/label "marginOfError",
   :schema/domainIncludes :schema/Observation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2291"}})

(def masthead
  {:db/ident :schema/masthead,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For a [[NewsMediaOrganization]], a link to the masthead page or a page listing top editorial management.",
   :rdfs/label "masthead",
   :rdfs/subPropertyOf :schema/publishingPrinciples,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes :schema/NewsMediaOrganization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def material
  {:db/ident :schema/material,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A material that something is made from, e.g. leather, wool, cotton, paper.",
   :rdfs/label "material",
   :schema/domainIncludes #{:schema/Product :schema/CreativeWork},
   :schema/rangeIncludes #{:schema/Product :schema/Text :schema/URL}})

(def materialExtent
  {:db/ident :schema/materialExtent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   {:rdf/language "en",
    :rdf/value
    "The quantity of the materials being described or an expression of the physical space they occupy."},
   :rdfs/label {:rdf/language "en",
                :rdf/value    "materialExtent"},
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1759"}})

(def mathExpression
  {:db/ident :schema/mathExpression,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A mathematical expression (e.g. 'x^2-3x=0') that may be solved for a specific variable, simplified, or transformed. This can take many formats, e.g. LaTeX, Ascii-Math, or math as you would write with a keyboard.",
   :rdfs/label "mathExpression",
   :schema/domainIncludes :schema/MathSolver,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/SolveMathAction :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2740"}})

(def maxPrice
  {:db/ident           :schema/maxPrice,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The highest price if the price is a range.",
   :rdfs/label         "maxPrice",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/PriceSpecification,
   :schema/rangeIncludes :schema/Number})

(def maxValue
  {:db/ident           :schema/maxValue,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The upper value of some characteristic or property.",
   :rdfs/label         "maxValue",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/MonetaryAmount
                            :schema/PropertyValueSpecification
                            :schema/QuantitativeValue :schema/PropertyValue},
   :schema/rangeIncludes :schema/Number})

(def maximumAttendeeCapacity
  {:db/ident :schema/maximumAttendeeCapacity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total number of individuals that may attend an event or venue.",
   :rdfs/label "maximumAttendeeCapacity",
   :schema/domainIncludes #{:schema/Place :schema/Event},
   :schema/rangeIncludes :schema/Integer})

(def maximumEnrollment
  {:db/ident :schema/maximumEnrollment,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The maximum number of students who may be enrolled in the program.",
   :rdfs/label "maximumEnrollment",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2419"}})

(def maximumIntake
  {:db/ident :schema/maximumIntake,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Recommended intake of this supplement for a given population as defined by a specific recommending authority.",
   :rdfs/label "maximumIntake",
   :schema/domainIncludes #{:schema/DietarySupplement :schema/Drug
                            :schema/Substance :schema/DrugStrength},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MaximumDoseSchedule})

(def maximumPhysicalAttendeeCapacity
  {:db/ident :schema/maximumPhysicalAttendeeCapacity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The maximum physical attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OfflineEventAttendanceMode]] (or the offline aspects, in the case of a [[MixedEventAttendanceMode]]). ",
   :rdfs/label "maximumPhysicalAttendeeCapacity",
   :schema/domainIncludes :schema/Event,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1842"}})

(def maximumVirtualAttendeeCapacity
  {:db/ident :schema/maximumVirtualAttendeeCapacity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The maximum virtual attendee capacity of an [[Event]] whose [[eventAttendanceMode]] is [[OnlineEventAttendanceMode]] (or the online aspects, in the case of a [[MixedEventAttendanceMode]]). ",
   :rdfs/label "maximumVirtualAttendeeCapacity",
   :schema/domainIncludes :schema/Event,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1842"}})

(def mealService
  {:db/ident :schema/mealService,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Description of the meals that will be provided or available for purchase.",
   :rdfs/label "mealService",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes :schema/Text})

(def measuredProperty
  {:db/ident :schema/measuredProperty,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The measuredProperty of an [[Observation]], typically via its [[StatisticalVariable]]. There are various kinds of applicable [[Property]]: a schema.org property, a property from other RDF-compatible systems, e.g. W3C RDF Data Cube, Data Commons, Wikidata, or schema.org extensions such as [GS1's](https://www.gs1.org/voc/?show=properties).",
   :rdfs/label "measuredProperty",
   :schema/domainIncludes #{:schema/Observation :schema/StatisticalVariable},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Property,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2291"}})

(def measurementDenominator
  {:db/ident :schema/measurementDenominator,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Identifies the denominator variable when an observation represents a ratio or percentage.",
   :rdfs/label "measurementDenominator",
   :schema/domainIncludes #{:schema/Observation :schema/StatisticalVariable},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/StatisticalVariable,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2564"}})

(def measurementMethod
  {:db/ident :schema/measurementMethod,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A subproperty of [[measurementTechnique]] that can be used for specifying specific methods, in particular via [[MeasurementMethodEnum]].",
   :rdfs/label "measurementMethod",
   :rdfs/subPropertyOf :schema/measurementTechnique,
   :schema/domainIncludes #{:schema/Observation :schema/DataCatalog
                            :schema/PropertyValue :schema/DataDownload
                            :schema/Dataset :schema/StatisticalVariable},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/MeasurementMethodEnum
                           :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1425"}})

(def measurementQualifier
  {:db/ident :schema/measurementQualifier,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Provides additional qualification to an observation. For example, a GDP observation measures the Nominal value.",
   :rdfs/label "measurementQualifier",
   :schema/domainIncludes #{:schema/Observation :schema/StatisticalVariable},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Enumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2564"}})

(def measurementTechnique
  {:db/ident :schema/measurementTechnique,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A technique, method or technology used in an [[Observation]], [[StatisticalVariable]] or [[Dataset]] (or [[DataDownload]], [[DataCatalog]]), corresponding to the method used for measuring the corresponding variable(s) (for datasets, described using [[variableMeasured]]; for [[Observation]], a [[StatisticalVariable]]). Often but not necessarily each [[variableMeasured]] will have an explicit representation as (or mapping to) an property such as those defined in Schema.org, or other RDF vocabularies and \"knowledge graphs\". In that case the subproperty of [[variableMeasured]] called [[measuredProperty]] is applicable.\n    \nThe [[measurementTechnique]] property helps when extra clarification is needed about how a [[measuredProperty]] was measured. This is oriented towards scientific and scholarly dataset publication but may have broader applicability; it is not intended as a full representation of measurement, but can often serve as a high level summary for dataset discovery. \n\nFor example, if [[variableMeasured]] is: molecule concentration, [[measurementTechnique]] could be: \"mass spectrometry\" or \"nmr spectroscopy\" or \"colorimetry\" or \"immunofluorescence\". If the [[variableMeasured]] is \"depression rating\", the [[measurementTechnique]] could be \"Zung Scale\" or \"HAM-D\" or \"Beck Depression Inventory\". \n\nIf there are several [[variableMeasured]] properties recorded for some given data object, use a [[PropertyValue]] for each [[variableMeasured]] and attach the corresponding [[measurementTechnique]]. The value can also be from an enumeration, organized as a [[MeasurementMetholdEnumeration]].",
   :rdfs/label "measurementTechnique",
   :schema/domainIncludes #{:schema/Observation :schema/DataCatalog
                            :schema/PropertyValue :schema/DataDownload
                            :schema/Dataset :schema/StatisticalVariable},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/MeasurementMethodEnum
                           :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1425"}})

(def mechanismOfAction
  {:db/ident :schema/mechanismOfAction,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The specific biochemical interaction through which this drug or supplement produces its pharmacological effect.",
   :rdfs/label "mechanismOfAction",
   :schema/domainIncludes #{:schema/DietarySupplement :schema/Drug},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def mediaAuthenticityCategory
  {:db/ident :schema/mediaAuthenticityCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a MediaManipulationRatingEnumeration classification of a media object (in the context of how it was published or shared).",
   :rdfs/label "mediaAuthenticityCategory",
   :schema/domainIncludes :schema/MediaReview,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MediaManipulationRatingEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def mediaItemAppearance
  {:db/ident :schema/mediaItemAppearance,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "In the context of a [[MediaReview]], indicates specific media item(s) that are grouped using a [[MediaReviewItem]].",
   :rdfs/label "mediaItemAppearance",
   :schema/domainIncludes :schema/MediaReviewItem,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MediaObject,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def median
  {:db/ident :schema/median,
   :rdf/type :rdf/Property,
   :rdfs/comment "The median value.",
   :rdfs/label "median",
   :schema/domainIncludes :schema/QuantitativeValueDistribution,
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def medicalAudience
  {:db/ident             :schema/medicalAudience,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Medical audience for page.",
   :rdfs/label           "medicalAudience",
   :schema/domainIncludes :schema/MedicalWebPage,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/MedicalAudience
                           :schema/MedicalAudienceType}})

(def medicalSpecialty
  {:db/ident             :schema/medicalSpecialty,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A medical specialty of the provider.",
   :rdfs/label           "medicalSpecialty",
   :schema/domainIncludes #{:schema/Hospital :schema/Physician
                            :schema/MedicalOrganization :schema/MedicalClinic},
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalSpecialty})

(def medicineSystem
  {:db/ident :schema/medicineSystem,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The system of medicine that includes this MedicalEntity, for example 'evidence-based', 'homeopathic', 'chiropractic', etc.",
   :rdfs/label "medicineSystem",
   :schema/domainIncludes :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicineSystem})

(def meetsEmissionStandard
  {:db/ident :schema/meetsEmissionStandard,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates that the vehicle meets the respective emission standard.",
   :rdfs/label "meetsEmissionStandard",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/QualitativeValue :schema/URL}})

(def member
  {:db/ident :schema/member,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A member of an Organization or a ProgramMembership. Organizations can be members of organizations; ProgramMembership is typically for individuals.",
   :rdfs/label "member",
   :schema/domainIncludes #{:schema/ProgramMembership :schema/Organization},
   :schema/inverseOf :schema/memberOf,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def memberOf
  {:db/ident :schema/memberOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An Organization (or ProgramMembership) to which this Person or Organization belongs.",
   :rdfs/label "memberOf",
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/inverseOf :schema/member,
   :schema/rangeIncludes #{:schema/ProgramMembership :schema/Organization}})

(def members
  {:db/ident            :schema/members,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A member of this organization.",
   :rdfs/label          "members",
   :schema/domainIncludes #{:schema/ProgramMembership :schema/Organization},
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/supersededBy :schema/member})

(def membershipNumber
  {:db/ident             :schema/membershipNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A unique identifier for the membership.",
   :rdfs/label           "membershipNumber",
   :schema/domainIncludes :schema/ProgramMembership,
   :schema/rangeIncludes :schema/Text})

(def membershipPointsEarned
  {:db/ident :schema/membershipPointsEarned,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of membership points earned by the member. If necessary, the unitText can be used to express the units the points are issued in. (E.g. stars, miles, etc.)",
   :rdfs/label "membershipPointsEarned",
   :schema/domainIncludes :schema/ProgramMembership,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2085"}})

(def memoryRequirements
  {:db/ident             :schema/memoryRequirements,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Minimum memory requirements.",
   :rdfs/label           "memoryRequirements",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def mentions
  {:db/ident :schema/mentions,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates that the CreativeWork contains a reference to, but is not necessarily about a concept.",
   :rdfs/label "mentions",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Thing})

(def menu
  {:db/ident :schema/menu,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Either the actual menu as a structured representation, as text, or a URL of the menu.",
   :rdfs/label "menu",
   :schema/domainIncludes :schema/FoodEstablishment,
   :schema/rangeIncludes #{:schema/Menu :schema/Text :schema/URL},
   :schema/supersededBy :schema/hasMenu})

(def menuAddOn
  {:db/ident :schema/menuAddOn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Additional menu item(s) such as a side dish of salad or side order of fries that can be added to this menu item. Additionally it can be a menu section containing allowed add-on menu items for this menu item.",
   :rdfs/label "menuAddOn",
   :schema/domainIncludes :schema/MenuItem,
   :schema/rangeIncludes #{:schema/MenuSection :schema/MenuItem},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1541"}})

(def merchant
  {:db/ident            :schema/merchant,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "'merchant' is an out-dated term for 'seller'.",
   :rdfs/label          "merchant",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/supersededBy :schema/seller})

(def merchantReturnDays
  {:db/ident :schema/merchantReturnDays,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies either a fixed return date or the number of days (from the delivery date) that a product can be returned. Used when the [[returnPolicyCategory]] property is specified as [[MerchantReturnFiniteReturnWindow]].",
   :rdfs/label "merchantReturnDays",
   :schema/domainIncludes #{:schema/MerchantReturnPolicySeasonalOverride
                            :schema/MerchantReturnPolicy},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Integer :schema/Date :schema/DateTime},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def merchantReturnLink
  {:db/ident :schema/merchantReturnLink,
   :rdf/type :rdf/Property,
   :rdfs/comment "Specifies a Web page or service by URL, for product returns.",
   :rdfs/label "merchantReturnLink",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/URL,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def messageAttachment
  {:db/ident             :schema/messageAttachment,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A CreativeWork attached to the message.",
   :rdfs/label           "messageAttachment",
   :schema/domainIncludes :schema/Message,
   :schema/rangeIncludes :schema/CreativeWork})

(def mileageFromOdometer
  {:db/ident :schema/mileageFromOdometer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total distance travelled by the particular vehicle since its initial production, as read from its odometer.\\n\\nTypical unit code(s): KMT for kilometers, SMI for statute miles.",
   :rdfs/label "mileageFromOdometer",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/QuantitativeValue})

(def minPrice
  {:db/ident           :schema/minPrice,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The lowest price if the price is a range.",
   :rdfs/label         "minPrice",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/PriceSpecification,
   :schema/rangeIncludes :schema/Number})

(def minValue
  {:db/ident           :schema/minValue,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The lower value of some characteristic or property.",
   :rdfs/label         "minValue",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/MonetaryAmount
                            :schema/PropertyValueSpecification
                            :schema/QuantitativeValue :schema/PropertyValue},
   :schema/rangeIncludes :schema/Number})

(def minimumPaymentDue
  {:db/ident             :schema/minimumPaymentDue,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The minimum payment required at this time.",
   :rdfs/label           "minimumPaymentDue",
   :schema/domainIncludes :schema/Invoice,
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/PriceSpecification}})

(def missionCoveragePrioritiesPolicy
  {:db/ident :schema/missionCoveragePrioritiesPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For a [[NewsMediaOrganization]], a statement on coverage priorities, including any public agenda or stance on issues.",
   :rdfs/label "missionCoveragePrioritiesPolicy",
   :rdfs/subPropertyOf :schema/publishingPrinciples,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes :schema/NewsMediaOrganization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def mobileUrl
  {:db/ident :schema/mobileUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The [[mobileUrl]] property is provided for specific situations in which data consumers need to determine whether one of several provided URLs is a dedicated 'mobile site'.\n\nTo discourage over-use, and reflecting intial usecases, the property is expected only on [[Product]] and [[Offer]], rather than [[Thing]]. The general trend in web technology is towards [responsive design](https://en.wikipedia.org/wiki/Responsive_web_design) in which content can be flexibly adapted to a wide range of browsing environments. Pages and sites referenced with the long-established [[url]] property should ideally also be usable on a wide variety of devices, including mobile phones. In most cases, it would be pointless and counter productive to attempt to update all [[url]] markup to use [[mobileUrl]] for more mobile-oriented pages. The property is intended for the case when items (primarily [[Product]] and [[Offer]]) have extra URLs hosted on an additional \"mobile site\" alongside the main one. It should not be taken as an endorsement of this publication style.\n    ",
   :rdfs/label "mobileUrl",
   :schema/domainIncludes #{:schema/Product :schema/Offer},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3134"}})

(def model
  {:db/ident :schema/model,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The model of the product. Use with the URL of a ProductModel or a textual representation of the model identifier. The URL of the ProductModel can be from an external source. It is recommended to additionally provide strong product identifiers via the gtin8/gtin13/gtin14 and mpn properties.",
   :rdfs/label "model",
   :schema/domainIncludes :schema/Product,
   :schema/rangeIncludes #{:schema/ProductModel :schema/Text}})

(def modelDate
  {:db/ident :schema/modelDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The release date of a vehicle model (often used to differentiate versions of the same make and model).",
   :rdfs/label "modelDate",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/Date})

(def modifiedTime
  {:db/ident             :schema/modifiedTime,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The date and time the reservation was modified.",
   :rdfs/label           "modifiedTime",
   :schema/domainIncludes :schema/Reservation,
   :schema/rangeIncludes :schema/DateTime})

(def molecularFormula
  {:db/ident :schema/molecularFormula,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The empirical formula is the simplest whole number ratio of all the atoms in a molecule.",
   :rdfs/label "molecularFormula",
   :schema/domainIncludes :schema/MolecularEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/MolecularEntity"}})

(def molecularWeight
  {:db/ident :schema/molecularWeight,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This is the molecular weight of the entity being described, not of the parent. Units should be included in the form '&lt;Number&gt; &lt;unit&gt;', for example '12 amu' or as '&lt;QuantitativeValue&gt;.",
   :rdfs/label "molecularWeight",
   :schema/domainIncludes :schema/MolecularEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Text},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/MolecularEntity"}})

(def monoisotopicMolecularWeight
  {:db/ident :schema/monoisotopicMolecularWeight,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The monoisotopic mass is the sum of the masses of the atoms in a molecule using the unbound, ground-state, rest mass of the principal (most abundant) isotope for each element instead of the isotopic average mass. Please include the units in the form '&lt;Number&gt; &lt;unit&gt;', for example '770.230488 g/mol' or as '&lt;QuantitativeValue&gt;.",
   :rdfs/label "monoisotopicMolecularWeight",
   :schema/domainIncludes :schema/MolecularEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Text},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/MolecularEntity"}})

(def monthlyMinimumRepaymentAmount
  {:db/ident :schema/monthlyMinimumRepaymentAmount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The minimum payment is the lowest amount of money that one is required to pay on a credit card statement each month.",
   :rdfs/label "monthlyMinimumRepaymentAmount",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/PaymentCard,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/Number},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def monthsOfExperience
  {:db/ident :schema/monthsOfExperience,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the minimal number of months of experience required for a position.",
   :rdfs/label "monthsOfExperience",
   :schema/domainIncludes :schema/OccupationalExperienceRequirements,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2681"}})

(def mpn
  {:db/ident :schema/mpn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Manufacturer Part Number (MPN) of the product, or the product to which the offer refers.",
   :rdfs/label "mpn",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Product :schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/Text})

(def multipleValues
  {:db/ident :schema/multipleValues,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Whether multiple values are allowed for the property.  Default is false.",
   :rdfs/label "multipleValues",
   :schema/domainIncludes :schema/PropertyValueSpecification,
   :schema/rangeIncludes :schema/Boolean})

(def muscleAction
  {:db/ident             :schema/muscleAction,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The movement the muscle generates.",
   :rdfs/label           "muscleAction",
   :schema/domainIncludes :schema/Muscle,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def musicArrangement
  {:db/ident           :schema/musicArrangement,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "An arrangement derived from the composition.",
   :rdfs/label         "musicArrangement",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicComposition,
   :schema/rangeIncludes :schema/MusicComposition})

(def musicBy
  {:db/ident             :schema/musicBy,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The composer of the soundtrack.",
   :rdfs/label           "musicBy",
   :schema/domainIncludes #{:schema/Episode :schema/VideoObject :schema/TVSeries
                            :schema/MovieSeries :schema/Clip :schema/Movie
                            :schema/VideoGame :schema/VideoGameSeries
                            :schema/RadioSeries},
   :schema/rangeIncludes #{:schema/MusicGroup :schema/Person}})

(def musicCompositionForm
  {:db/ident :schema/musicCompositionForm,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of composition (e.g. overture, sonata, symphony, etc.).",
   :rdfs/label "musicCompositionForm",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicComposition,
   :schema/rangeIncludes :schema/Text})

(def musicGroupMember
  {:db/ident :schema/musicGroupMember,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A member of a music group&#x2014;for example, John, Paul, George, or Ringo.",
   :rdfs/label "musicGroupMember",
   :schema/domainIncludes :schema/MusicGroup,
   :schema/rangeIncludes :schema/Person,
   :schema/supersededBy :schema/member})

(def musicReleaseFormat
  {:db/ident :schema/musicReleaseFormat,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Format of this release (the type of recording media used, i.e. compact disc, digital media, LP, etc.).",
   :rdfs/label "musicReleaseFormat",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicRelease,
   :schema/rangeIncludes :schema/MusicReleaseFormatType})

(def musicalKey
  {:db/ident           :schema/musicalKey,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The key, mode, or scale this composition uses.",
   :rdfs/label         "musicalKey",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicComposition,
   :schema/rangeIncludes :schema/Text})

(def naics
  {:db/ident :schema/naics,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The North American Industry Classification System (NAICS) code for a particular organization or business person.",
   :rdfs/label "naics",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def name
  {:db/ident :schema/name,
   :owl/equivalentProperty :dcterms/title,
   :rdf/type :rdf/Property,
   :rdfs/comment "The name of the item.",
   :rdfs/label "name",
   :rdfs/subPropertyOf :rdfs/label,
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes :schema/Text})

(def namedPosition
  {:db/ident :schema/namedPosition,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A position played, performed or filled by a person or organization, as part of an organization. For example, an athlete in a SportsTeam might play in the position named 'Quarterback'.",
   :rdfs/label "namedPosition",
   :schema/domainIncludes :schema/Role,
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/supersededBy :schema/roleName})

(def nationality
  {:db/ident             :schema/nationality,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Nationality of the person.",
   :rdfs/label           "nationality",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Country})

(def naturalProgression
  {:db/ident :schema/naturalProgression,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The expected progression of the condition if it is not treated and allowed to progress naturally.",
   :rdfs/label "naturalProgression",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def negativeNotes
  {:db/ident :schema/negativeNotes,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Provides negative considerations regarding something, most typically in pro/con lists for reviews (alongside [[positiveNotes]]). For symmetry \n\nIn the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described. Since product descriptions \ntend to emphasise positive claims, it may be relatively unusual to find [[negativeNotes]] used in this way. Nevertheless for the sake of symmetry, [[negativeNotes]] can be used on [[Product]].\n\nThe property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most negative is at the beginning of the list).",
   :rdfs/label "negativeNotes",
   :schema/domainIncludes #{:schema/Product :schema/Review},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/ItemList :schema/ListItem :schema/WebContent
                           :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2832"}})

(def nerve
  {:db/ident :schema/nerve,
   :rdf/type :rdf/Property,
   :rdfs/comment "The underlying innervation associated with the muscle.",
   :rdfs/label "nerve",
   :schema/domainIncludes :schema/Muscle,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Nerve})

(def nerveMotor
  {:db/ident :schema/nerveMotor,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The neurological pathway extension that involves muscle control.",
   :rdfs/label "nerveMotor",
   :schema/domainIncludes :schema/Nerve,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Muscle})

(def netWorth
  {:db/ident :schema/netWorth,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total financial value of the person as calculated by subtracting assets from liabilities.",
   :rdfs/label "netWorth",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/PriceSpecification}})

(def newsUpdatesAndGuidelines
  {:db/ident :schema/newsUpdatesAndGuidelines,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a page with news updates and guidelines. This could often be (but is not required to be) the main page containing [[SpecialAnnouncement]] markup on a site.",
   :rdfs/label "newsUpdatesAndGuidelines",
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/WebContent :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def nextItem
  {:db/ident             :schema/nextItem,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A link to the ListItem that follows the current one.",
   :rdfs/label           "nextItem",
   :schema/domainIncludes :schema/ListItem,
   :schema/rangeIncludes :schema/ListItem})

(def noBylinesPolicy
  {:db/ident :schema/noBylinesPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For a [[NewsMediaOrganization]] or other news-related [[Organization]], a statement explaining when authors of articles are not named in bylines.",
   :rdfs/label "noBylinesPolicy",
   :rdfs/subPropertyOf :schema/publishingPrinciples,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes :schema/NewsMediaOrganization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1688"}})

(def nonEqual
  {:db/ident :schema/nonEqual,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This ordering relation for qualitative values indicates that the subject is not equal to the object.",
   :rdfs/label "nonEqual",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/QualitativeValue,
   :schema/rangeIncludes :schema/QualitativeValue})

(def nonProprietaryName
  {:db/ident             :schema/nonProprietaryName,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The generic name of this drug or supplement.",
   :rdfs/label           "nonProprietaryName",
   :schema/domainIncludes #{:schema/DietarySupplement :schema/Drug},
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def nonprofitStatus
  {:db/ident :schema/nonprofitStatus,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "nonprofitStatus indicates the legal status of a non-profit organization in its primary place of business.",
   :rdfs/label "nonprofitStatus",
   :schema/domainIncludes :schema/Organization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/NonprofitType,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2543"}})

(def normalRange
  {:db/ident :schema/normalRange,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Range of acceptable values for a typical patient, when applicable.",
   :rdfs/label "normalRange",
   :schema/domainIncludes :schema/MedicalTest,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/MedicalEnumeration :schema/Text}})

(def nsn
  {:db/ident :schema/nsn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the [NATO stock number](https://en.wikipedia.org/wiki/NATO_Stock_Number) (nsn) of a [[Product]]. ",
   :rdfs/label "nsn",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes :schema/Product,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2126"}})

(def numAdults
  {:db/ident             :schema/numAdults,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of adults staying in the unit.",
   :rdfs/label           "numAdults",
   :schema/domainIncludes :schema/LodgingReservation,
   :schema/rangeIncludes #{:schema/Integer :schema/QuantitativeValue}})

(def numChildren
  {:db/ident             :schema/numChildren,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of children staying in the unit.",
   :rdfs/label           "numChildren",
   :schema/domainIncludes :schema/LodgingReservation,
   :schema/rangeIncludes #{:schema/Integer :schema/QuantitativeValue}})

(def numConstraints
  {:db/ident :schema/numConstraints,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the number of constraints property values defined for a particular [[ConstraintNode]] such as [[StatisticalVariable]]. This helps applications understand if they have access to a sufficiently complete description of a [[StatisticalVariable]] or other construct that is defined using properties on template-style nodes.",
   :rdfs/label "numConstraints",
   :schema/domainIncludes :schema/ConstraintNode,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2291"}})

(def numTracks
  {:db/ident             :schema/numTracks,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of tracks in this album or playlist.",
   :rdfs/label           "numTracks",
   :schema/domainIncludes :schema/MusicPlaylist,
   :schema/rangeIncludes :schema/Integer})

(def numberOfAccommodationUnits
  {:db/ident :schema/numberOfAccommodationUnits,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the total (available plus unavailable) number of accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAvailableAccommodationUnits]].",
   :rdfs/label "numberOfAccommodationUnits",
   :schema/domainIncludes #{:schema/FloorPlan :schema/ApartmentComplex},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def numberOfAirbags
  {:db/ident :schema/numberOfAirbags,
   :rdf/type :rdf/Property,
   :rdfs/comment "The number or type of airbags in the vehicle.",
   :rdfs/label "numberOfAirbags",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def numberOfAvailableAccommodationUnits
  {:db/ident :schema/numberOfAvailableAccommodationUnits,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the number of available accommodation units in an [[ApartmentComplex]], or the number of accommodation units for a specific [[FloorPlan]] (within its specific [[ApartmentComplex]]). See also [[numberOfAccommodationUnits]].",
   :rdfs/label "numberOfAvailableAccommodationUnits",
   :schema/domainIncludes #{:schema/FloorPlan :schema/ApartmentComplex},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def numberOfAxles
  {:db/ident :schema/numberOfAxles,
   :rdf/type :rdf/Property,
   :rdfs/comment "The number of axles.\\n\\nTypical unit code(s): C62.",
   :rdfs/label "numberOfAxles",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def numberOfBathroomsTotal
  {:db/ident :schema/numberOfBathroomsTotal,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total integer number of bathrooms in some [[Accommodation]], following real estate conventions as [documented in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsTotalInteger+Field): \"The simple sum of the number of bathrooms. For example for a property with two Full Bathrooms and one Half Bathroom, the Bathrooms Total Integer will be 3.\". See also [[numberOfRooms]].",
   :rdfs/label "numberOfBathroomsTotal",
   :schema/domainIncludes #{:schema/FloorPlan :schema/Accommodation},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def numberOfBedrooms
  {:db/ident :schema/numberOfBedrooms,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total integer number of bedrooms in a some [[Accommodation]], [[ApartmentComplex]] or [[FloorPlan]].",
   :rdfs/label "numberOfBedrooms",
   :schema/domainIncludes #{:schema/FloorPlan :schema/Accommodation
                            :schema/ApartmentComplex},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def numberOfBeds
  {:db/ident :schema/numberOfBeds,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The quantity of the given bed type available in the HotelRoom, Suite, House, or Apartment.",
   :rdfs/label "numberOfBeds",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes :schema/BedDetails,
   :schema/rangeIncludes :schema/Number})

(def numberOfCredits
  {:db/ident :schema/numberOfCredits,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of credits or units awarded by a Course or required to complete an EducationalOccupationalProgram.",
   :rdfs/label "numberOfCredits",
   :schema/domainIncludes #{:schema/EducationalOccupationalProgram
                            :schema/Course},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Integer :schema/StructuredValue},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2419"}})

(def numberOfDoors
  {:db/ident :schema/numberOfDoors,
   :rdf/type :rdf/Property,
   :rdfs/comment "The number of doors.\\n\\nTypical unit code(s): C62.",
   :rdfs/label "numberOfDoors",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def numberOfEmployees
  {:db/ident :schema/numberOfEmployees,
   :rdf/type :rdf/Property,
   :rdfs/comment "The number of employees in an organization, e.g. business.",
   :rdfs/label "numberOfEmployees",
   :schema/domainIncludes #{:schema/BusinessAudience :schema/Organization},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def numberOfEpisodes
  {:db/ident             :schema/numberOfEpisodes,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of episodes in this season or series.",
   :rdfs/label           "numberOfEpisodes",
   :schema/domainIncludes #{:schema/CreativeWorkSeason :schema/TVSeries
                            :schema/VideoGameSeries :schema/RadioSeries},
   :schema/rangeIncludes :schema/Integer})

(def numberOfForwardGears
  {:db/ident :schema/numberOfForwardGears,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total number of forward gears available for the transmission system of the vehicle.\\n\\nTypical unit code(s): C62.",
   :rdfs/label "numberOfForwardGears",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def numberOfFullBathrooms
  {:db/ident :schema/numberOfFullBathrooms,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Number of full bathrooms - The total number of full and ¾ bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsFull field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsFull+Field).",
   :rdfs/label "numberOfFullBathrooms",
   :schema/domainIncludes #{:schema/FloorPlan :schema/Accommodation},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def numberOfItems
  {:db/ident :schema/numberOfItems,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of items in an ItemList. Note that some descriptions might not fully describe all items in a list (e.g., multi-page pagination); in such cases, the numberOfItems would be for the entire list.",
   :rdfs/label "numberOfItems",
   :schema/domainIncludes :schema/ItemList,
   :schema/rangeIncludes :schema/Integer})

(def numberOfLoanPayments
  {:db/ident :schema/numberOfLoanPayments,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of payments contractually required at origination to repay the loan. For monthly paying loans this is the number of months from the contractual first payment date to the maturity date.",
   :rdfs/label "numberOfLoanPayments",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/RepaymentSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def numberOfPages
  {:db/ident             :schema/numberOfPages,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of pages in the book.",
   :rdfs/label           "numberOfPages",
   :schema/domainIncludes :schema/Book,
   :schema/rangeIncludes :schema/Integer})

(def numberOfPartialBathrooms
  {:db/ident :schema/numberOfPartialBathrooms,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Number of partial bathrooms - The total number of half and ¼ bathrooms in an [[Accommodation]]. This corresponds to the [BathroomsPartial field in RESO](https://ddwiki.reso.org/display/DDW17/BathroomsPartial+Field). ",
   :rdfs/label "numberOfPartialBathrooms",
   :schema/domainIncludes #{:schema/FloorPlan :schema/Accommodation},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def numberOfPlayers
  {:db/ident :schema/numberOfPlayers,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicate how many people can play this game (minimum, maximum, or range).",
   :rdfs/label "numberOfPlayers",
   :schema/domainIncludes #{:schema/Game :schema/VideoGameSeries},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def numberOfPreviousOwners
  {:db/ident :schema/numberOfPreviousOwners,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of owners of the vehicle, including the current one.\\n\\nTypical unit code(s): C62.",
   :rdfs/label "numberOfPreviousOwners",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def numberOfRooms
  {:db/ident :schema/numberOfRooms,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of rooms (excluding bathrooms and closets) of the accommodation or lodging business.\nTypical unit code(s): ROM for room or C62 for no unit. The type of room can be put in the unitText property of the QuantitativeValue.",
   :rdfs/label "numberOfRooms",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes #{:schema/FloorPlan :schema/SingleFamilyResidence
                            :schema/Suite :schema/LodgingBusiness :schema/House
                            :schema/Apartment :schema/Accommodation},
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def numberOfSeasons
  {:db/ident             :schema/numberOfSeasons,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of seasons in this series.",
   :rdfs/label           "numberOfSeasons",
   :schema/domainIncludes #{:schema/TVSeries :schema/VideoGameSeries
                            :schema/RadioSeries},
   :schema/rangeIncludes :schema/Integer})

(def numberedPosition
  {:db/ident :schema/numberedPosition,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A number associated with a role in an organization, for example, the number on an athlete's jersey.",
   :rdfs/label "numberedPosition",
   :schema/domainIncludes :schema/OrganizationRole,
   :schema/rangeIncludes :schema/Number})

(def nutrition
  {:db/ident             :schema/nutrition,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Nutrition information about the recipe or menu item.",
   :rdfs/label           "nutrition",
   :schema/domainIncludes #{:schema/MenuItem :schema/Recipe},
   :schema/rangeIncludes :schema/NutritionInformation})

(def object
  {:db/ident :schema/object,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The object upon which the action is carried out, whose state is kept intact or changed. Also known as the semantic roles patient, affected or undergoer (which change their state) or theme (which doesn't). E.g. John read *a book*.",
   :rdfs/label "object",
   :schema/domainIncludes :schema/Action,
   :schema/rangeIncludes :schema/Thing})

(def observationAbout
  {:db/ident :schema/observationAbout,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The [[observationAbout]] property identifies an entity, often a [[Place]], associated with an [[Observation]].",
   :rdfs/label "observationAbout",
   :schema/domainIncludes :schema/Observation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Place :schema/Thing},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2291"}})

(def observationDate
  {:db/ident :schema/observationDate,
   :rdf/type :rdf/Property,
   :rdfs/comment "The observationDate of an [[Observation]].",
   :rdfs/label "observationDate",
   :schema/domainIncludes :schema/Observation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/DateTime,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2291"}})

(def observationPeriod
  {:db/ident :schema/observationPeriod,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The length of time an Observation took place over. The format follows `P[0-9]*[Y|M|D|h|m|s]`. For example, P1Y is Period 1 Year, P3M is Period 3 Months, P3h is Period 3 hours.",
   :rdfs/label "observationPeriod",
   :schema/domainIncludes :schema/Observation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2564"}})

(def occupancy
  {:db/ident :schema/occupancy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The allowed total occupancy for the accommodation in persons (including infants etc). For individual accommodations, this is not necessarily the legal maximum but defines the permitted usage as per the contractual agreement (e.g. a double room used by a single person).\nTypical unit code(s): C62 for person.",
   :rdfs/label "occupancy",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes #{:schema/HotelRoom :schema/SingleFamilyResidence
                            :schema/Suite :schema/Apartment
                            :schema/Accommodation},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def occupationLocation
  {:db/ident :schema/occupationLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   " The region/country for which this occupational description is appropriate. Note that educational requirements and qualifications can vary between jurisdictions.",
   :rdfs/label "occupationLocation",
   :schema/domainIncludes :schema/Occupation,
   :schema/rangeIncludes :schema/AdministrativeArea,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def occupationalCategory
  {:db/ident :schema/occupationalCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A category describing the job, preferably using a term from a taxonomy such as [BLS O*NET-SOC](http://www.onetcenter.org/taxonomy.html), [ISCO-08](https://www.ilo.org/public/english/bureau/stat/isco/isco08/) or similar, with the property repeated for each applicable value. Ideally the taxonomy should be identified, and both the textual label and formal code for the category should be provided.\\n\nNote: for historical reasons, any textual label and formal code provided as a literal may be assumed to be from O*NET-SOC.",
   :rdfs/label "occupationalCategory",
   :schema/domainIncludes #{:schema/EducationalOccupationalProgram
                            :schema/Occupation :schema/JobPosting
                            :schema/WorkBasedProgram},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CategoryCode :schema/Text},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2192"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2460"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2289"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1698"}}})

(def occupationalCredentialAwarded
  {:db/ident :schema/occupationalCredentialAwarded,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of the qualification, award, certificate, diploma or other occupational credential awarded as a consequence of successful completion of this course or program.",
   :rdfs/label "occupationalCredentialAwarded",
   :schema/domainIncludes #{:schema/EducationalOccupationalProgram
                            :schema/Course},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/EducationalOccupationalCredential
                           :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2289"}})

(def offerCount
  {:db/ident             :schema/offerCount,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of offers for the product.",
   :rdfs/label           "offerCount",
   :schema/domainIncludes :schema/AggregateOffer,
   :schema/rangeIncludes :schema/Integer})

(def offeredBy
  {:db/ident :schema/offeredBy,
   :rdf/type :rdf/Property,
   :rdfs/comment "A pointer to the organization or person making the offer.",
   :rdfs/label "offeredBy",
   :schema/domainIncludes :schema/Offer,
   :schema/inverseOf :schema/makesOffer,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def offers
  {:db/ident :schema/offers,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An offer to provide this item&#x2014;for example, an offer to sell a product, rent the DVD of a movie, perform a service, or give away tickets to an event. Use [[businessFunction]] to indicate the kind of transaction offered, i.e. sell, lease, etc. This property can also be used to describe a [[Demand]]. While this property is listed as expected on a number of common types, it can be used in others. In that case, using a second type, such as Product or a subtype of Product, can clarify the nature of the offer.\n      ",
   :rdfs/label "offers",
   :schema/domainIncludes #{:schema/EducationalOccupationalProgram
                            :schema/Product :schema/CreativeWork
                            :schema/AggregateOffer :schema/Event
                            :schema/MenuItem :schema/Service :schema/Trip},
   :schema/inverseOf :schema/itemOffered,
   :schema/rangeIncludes #{:schema/Demand :schema/Offer},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2289"}})

(def offersPrescriptionByMail
  {:db/ident :schema/offersPrescriptionByMail,
   :rdf/type :rdf/Property,
   :rdfs/comment "Whether prescriptions can be delivered by mail.",
   :rdfs/label "offersPrescriptionByMail",
   :schema/domainIncludes :schema/HealthPlanFormulary,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def openingHours
  {:db/ident :schema/openingHours,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The general opening hours for a business. Opening hours can be specified as a weekly time range, starting with days, then times per day. Multiple days can be listed with commas ',' separating each day. Day or time ranges are specified using a hyphen '-'.\\n\\n* Days are specified using the following two-letter combinations: ```Mo```, ```Tu```, ```We```, ```Th```, ```Fr```, ```Sa```, ```Su```.\\n* Times are specified using 24:00 format. For example, 3pm is specified as ```15:00```, 10am as ```10:00```. \\n* Here is an example: <code>&lt;time itemprop=\"openingHours\" datetime=&quot;Tu,Th 16:00-20:00&quot;&gt;Tuesdays and Thursdays 4-8pm&lt;/time&gt;</code>.\\n* If a business is open 7 days a week, then it can be specified as <code>&lt;time itemprop=&quot;openingHours&quot; datetime=&quot;Mo-Su&quot;&gt;Monday through Sunday, all day&lt;/time&gt;</code>.",
   :rdfs/label "openingHours",
   :schema/domainIncludes #{:schema/LocalBusiness :schema/CivicStructure},
   :schema/rangeIncludes :schema/Text})

(def openingHoursSpecification
  {:db/ident           :schema/openingHoursSpecification,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The opening hours of a certain place.",
   :rdfs/label         "openingHoursSpecification",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes :schema/OpeningHoursSpecification})

(def opens
  {:db/ident :schema/opens,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The opening hour of the place or service on the given day(s) of the week.",
   :rdfs/label "opens",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/OpeningHoursSpecification,
   :schema/rangeIncludes :schema/Time})

(def operatingSystem
  {:db/ident :schema/operatingSystem,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Operating systems supported (Windows 7, OS X 10.6, Android 1.6).",
   :rdfs/label "operatingSystem",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text})

(def opponent
  {:db/ident :schema/opponent,
   :rdf/type :rdf/Property,
   :rdfs/comment "A sub property of participant. The opponent on this action.",
   :rdfs/label "opponent",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/ExerciseAction,
   :schema/rangeIncludes :schema/Person})

(def option
  {:db/ident :schema/option,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of object. The options subject to this action.",
   :rdfs/label "option",
   :rdfs/subPropertyOf :schema/object,
   :schema/domainIncludes :schema/ChooseAction,
   :schema/rangeIncludes #{:schema/Thing :schema/Text},
   :schema/supersededBy :schema/actionOption})

(def orderDate
  {:db/ident             :schema/orderDate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Date order was placed.",
   :rdfs/label           "orderDate",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def orderDelivery
  {:db/ident :schema/orderDelivery,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The delivery of the parcel related to this order or order item.",
   :rdfs/label "orderDelivery",
   :schema/domainIncludes #{:schema/OrderItem :schema/Order},
   :schema/rangeIncludes :schema/ParcelDelivery})

(def orderItemNumber
  {:db/ident             :schema/orderItemNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The identifier of the order item.",
   :rdfs/label           "orderItemNumber",
   :schema/domainIncludes :schema/OrderItem,
   :schema/rangeIncludes :schema/Text})

(def orderItemStatus
  {:db/ident             :schema/orderItemStatus,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The current status of the order item.",
   :rdfs/label           "orderItemStatus",
   :schema/domainIncludes :schema/OrderItem,
   :schema/rangeIncludes :schema/OrderStatus})

(def orderNumber
  {:db/ident           :schema/orderNumber,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The identifier of the transaction.",
   :rdfs/label         "orderNumber",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes :schema/Text})

(def orderQuantity
  {:db/ident :schema/orderQuantity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of the item ordered. If the property is not set, assume the quantity is one.",
   :rdfs/label "orderQuantity",
   :schema/domainIncludes :schema/OrderItem,
   :schema/rangeIncludes :schema/Number})

(def orderStatus
  {:db/ident             :schema/orderStatus,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The current status of the order.",
   :rdfs/label           "orderStatus",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes :schema/OrderStatus})

(def orderedItem
  {:db/ident             :schema/orderedItem,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The item ordered.",
   :rdfs/label           "orderedItem",
   :schema/domainIncludes #{:schema/OrderItem :schema/Order},
   :schema/rangeIncludes #{:schema/Product :schema/OrderItem :schema/Service}})

(def organizer
  {:db/ident             :schema/organizer,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An organizer of an Event.",
   :rdfs/label           "organizer",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def originAddress
  {:db/ident             :schema/originAddress,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Shipper's address.",
   :rdfs/label           "originAddress",
   :schema/domainIncludes :schema/ParcelDelivery,
   :schema/rangeIncludes :schema/PostalAddress})

(def originalMediaContextDescription
  {:db/ident :schema/originalMediaContextDescription,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Describes, in a [[MediaReview]] when dealing with [[DecontextualizedContent]], background information that can contribute to better interpretation of the [[MediaObject]].",
   :rdfs/label "originalMediaContextDescription",
   :rdfs/subPropertyOf :schema/description,
   :schema/domainIncludes :schema/MediaReview,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def originalMediaLink
  {:db/ident :schema/originalMediaLink,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Link to the page containing an original version of the content, or directly to an online copy of the original [[MediaObject]] content, e.g. video file.",
   :rdfs/label "originalMediaLink",
   :schema/domainIncludes :schema/MediaReview,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/MediaObject :schema/WebPage :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def originatesFrom
  {:db/ident :schema/originatesFrom,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The vasculature the lymphatic structure originates, or afferents, from.",
   :rdfs/label "originatesFrom",
   :schema/domainIncludes :schema/LymphaticVessel,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Vessel})

(def overdosage
  {:db/ident :schema/overdosage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any information related to overdose on a drug, including signs or symptoms, treatments, contact information for emergency response.",
   :rdfs/label "overdosage",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def ownedFrom
  {:db/ident           :schema/ownedFrom,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The date and time of obtaining the product.",
   :rdfs/label         "ownedFrom",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/OwnershipInfo,
   :schema/rangeIncludes :schema/DateTime})

(def ownedThrough
  {:db/ident :schema/ownedThrough,
   :rdf/type :rdf/Property,
   :rdfs/comment "The date and time of giving up ownership on the product.",
   :rdfs/label "ownedThrough",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/OwnershipInfo,
   :schema/rangeIncludes :schema/DateTime})

(def ownershipFundingInfo
  {:db/ident :schema/ownershipFundingInfo,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For an [[Organization]] (often but not necessarily a [[NewsMediaOrganization]]), a description of organizational ownership structure; funding and grants. In a news/media setting, this is with particular reference to editorial independence.   Note that the [[funder]] is also available and can be used to make basic funder information machine-readable.",
   :rdfs/label "ownershipFundingInfo",
   :rdfs/subPropertyOf :schema/publishingPrinciples,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes #{:schema/NewsMediaOrganization :schema/Organization},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/AboutPage :schema/CreativeWork :schema/Text
                           :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def owns
  {:db/ident           :schema/owns,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "Products owned by the organization or person.",
   :rdfs/label         "owns",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/rangeIncludes #{:schema/Product :schema/OwnershipInfo}})

(def pageEnd
  {:db/ident :schema/pageEnd,
   :owl/equivalentProperty :bibo/pageEnd,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The page on which the work ends; for example \"138\" or \"xvi\".",
   :rdfs/label "pageEnd",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"},
   :schema/domainIncludes #{:schema/Chapter :schema/PublicationIssue
                            :schema/PublicationVolume :schema/Article},
   :schema/rangeIncludes #{:schema/Integer :schema/Text}})

(def pageStart
  {:db/ident :schema/pageStart,
   :owl/equivalentProperty :bibo/pageStart,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The page on which the work starts; for example \"135\" or \"xiii\".",
   :rdfs/label "pageStart",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"},
   :schema/domainIncludes #{:schema/Chapter :schema/PublicationIssue
                            :schema/PublicationVolume :schema/Article},
   :schema/rangeIncludes #{:schema/Integer :schema/Text}})

(def pagination
  {:db/ident :schema/pagination,
   :owl/equivalentProperty :bibo/pages,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any description of pages that is not separated into pageStart and pageEnd; for example, \"1-6, 9, 55\" or \"10-12, 46-49\".",
   :rdfs/label "pagination",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"},
   :schema/domainIncludes #{:schema/Chapter :schema/PublicationIssue
                            :schema/PublicationVolume :schema/Article},
   :schema/rangeIncludes :schema/Text})

(def parent
  {:db/ident             :schema/parent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A parent of this person.",
   :rdfs/label           "parent",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person})

(def parentItem
  {:db/ident :schema/parentItem,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The parent of a question, answer or item in general. Typically used for Q/A discussion threads e.g. a chain of comments with the first comment being an [[Article]] or other [[CreativeWork]]. See also [[comment]] which points from something to a comment about it.",
   :rdfs/label "parentItem",
   :schema/domainIncludes #{:schema/Comment :schema/Answer :schema/Question},
   :schema/rangeIncludes #{:schema/Comment :schema/CreativeWork}})

(def parentOrganization
  {:db/ident :schema/parentOrganization,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The larger organization that this organization is a [[subOrganization]] of, if any.",
   :rdfs/label "parentOrganization",
   :schema/domainIncludes :schema/Organization,
   :schema/inverseOf :schema/subOrganization,
   :schema/rangeIncludes :schema/Organization})

(def parentService
  {:db/ident :schema/parentService,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A broadcast service to which the broadcast service may belong to such as regional variations of a national channel.",
   :rdfs/label "parentService",
   :schema/domainIncludes :schema/BroadcastService,
   :schema/rangeIncludes :schema/BroadcastService})

(def parentTaxon
  {:db/ident             :schema/parentTaxon,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Closest parent taxon of the taxon in question.",
   :rdfs/label           "parentTaxon",
   :schema/domainIncludes :schema/Taxon,
   :schema/inverseOf     :schema/childTaxon,
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Taxon :schema/Text :schema/URL},
   :schema/source        {:xsd/anyURI "http://www.bioschemas.org/Taxon"}})

(def parents
  {:db/ident            :schema/parents,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A parents of the person.",
   :rdfs/label          "parents",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person,
   :schema/supersededBy :schema/parent})

(def partOfEpisode
  {:db/ident           :schema/partOfEpisode,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The episode to which this clip belongs.",
   :rdfs/label         "partOfEpisode",
   :rdfs/subPropertyOf :schema/isPartOf,
   :schema/domainIncludes :schema/Clip,
   :schema/rangeIncludes :schema/Episode})

(def partOfInvoice
  {:db/ident :schema/partOfInvoice,
   :rdf/type :rdf/Property,
   :rdfs/comment "The order is being paid as part of the referenced Invoice.",
   :rdfs/label "partOfInvoice",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes :schema/Invoice})

(def partOfOrder
  {:db/ident :schema/partOfOrder,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The overall order the items in this delivery were included in.",
   :rdfs/label "partOfOrder",
   :schema/domainIncludes :schema/ParcelDelivery,
   :schema/rangeIncludes :schema/Order})

(def partOfSeason
  {:db/ident           :schema/partOfSeason,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The season to which this episode belongs.",
   :rdfs/label         "partOfSeason",
   :rdfs/subPropertyOf :schema/isPartOf,
   :schema/domainIncludes #{:schema/Episode :schema/Clip},
   :schema/rangeIncludes :schema/CreativeWorkSeason})

(def partOfSeries
  {:db/ident           :schema/partOfSeries,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The series to which this episode or season belongs.",
   :rdfs/label         "partOfSeries",
   :rdfs/subPropertyOf :schema/isPartOf,
   :schema/domainIncludes #{:schema/Episode :schema/CreativeWorkSeason
                            :schema/Clip},
   :schema/rangeIncludes :schema/CreativeWorkSeries})

(def partOfSystem
  {:db/ident :schema/partOfSystem,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The anatomical or organ system that this structure is part of.",
   :rdfs/label "partOfSystem",
   :schema/domainIncludes :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AnatomicalSystem})

(def partOfTVSeries
  {:db/ident :schema/partOfTVSeries,
   :rdf/type :rdf/Property,
   :rdfs/comment "The TV series to which this episode or season belongs.",
   :rdfs/label "partOfTVSeries",
   :rdfs/subPropertyOf :schema/isPartOf,
   :schema/domainIncludes #{:schema/TVEpisode :schema/TVSeason :schema/TVClip},
   :schema/rangeIncludes :schema/TVSeries,
   :schema/supersededBy :schema/partOfSeries})

(def partOfTrip
  {:db/ident :schema/partOfTrip,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Identifies that this [[Trip]] is a subTrip of another Trip.  For example Day 1, Day 2, etc. of a multi-day trip.",
   :rdfs/label "partOfTrip",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/Tourism"},
   :schema/domainIncludes :schema/Trip,
   :schema/inverseOf :schema/subTrip,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Trip,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1810"}})

(def participant
  {:db/ident :schema/participant,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Other co-agents that participated in the action indirectly. E.g. John wrote a book with *Steve*.",
   :rdfs/label "participant",
   :schema/domainIncludes :schema/Action,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def partySize
  {:db/ident             :schema/partySize,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Number of people the reservation should accommodate.",
   :rdfs/label           "partySize",
   :schema/domainIncludes #{:schema/FoodEstablishmentReservation
                            :schema/TaxiReservation},
   :schema/rangeIncludes #{:schema/Integer :schema/QuantitativeValue}})

(def passengerPriorityStatus
  {:db/ident :schema/passengerPriorityStatus,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The priority status assigned to a passenger for security or boarding (e.g. FastTrack or Priority).",
   :rdfs/label "passengerPriorityStatus",
   :schema/domainIncludes :schema/FlightReservation,
   :schema/rangeIncludes #{:schema/Text :schema/QualitativeValue}})

(def passengerSequenceNumber
  {:db/ident :schema/passengerSequenceNumber,
   :rdf/type :rdf/Property,
   :rdfs/comment "The passenger's sequence number as assigned by the airline.",
   :rdfs/label "passengerSequenceNumber",
   :schema/domainIncludes :schema/FlightReservation,
   :schema/rangeIncludes :schema/Text})

(def pathophysiology
  {:db/ident :schema/pathophysiology,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Changes in the normal mechanical, physical, and biochemical functions that are associated with this activity or condition.",
   :rdfs/label "pathophysiology",
   :schema/domainIncludes #{:schema/PhysicalActivity :schema/MedicalCondition},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def pattern
  {:db/ident :schema/pattern,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A pattern that something has, for example 'polka dot', 'striped', 'Canadian flag'. Values are typically expressed as text, although links to controlled value schemes are also supported.",
   :rdfs/label "pattern",
   :schema/domainIncludes #{:schema/Product :schema/CreativeWork},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1797"}})

(def payload
  {:db/ident :schema/payload,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The permitted weight of passengers and cargo, EXCLUDING the weight of the empty vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: Many databases specify the permitted TOTAL weight instead, which is the sum of [[weight]] and [[payload]]\\n* Note 2: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 3: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 4: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
   :rdfs/label "payload",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def paymentAccepted
  {:db/ident :schema/paymentAccepted,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Cash, Credit Card, Cryptocurrency, Local Exchange Tradings System, etc.",
   :rdfs/label "paymentAccepted",
   :schema/domainIncludes :schema/LocalBusiness,
   :schema/rangeIncludes :schema/Text})

(def paymentDue
  {:db/ident            :schema/paymentDue,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "The date that payment is due.",
   :rdfs/label          "paymentDue",
   :schema/domainIncludes #{:schema/Invoice :schema/Order},
   :schema/rangeIncludes :schema/DateTime,
   :schema/supersededBy :schema/paymentDueDate})

(def paymentDueDate
  {:db/ident             :schema/paymentDueDate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The date that payment is due.",
   :rdfs/label           "paymentDueDate",
   :schema/domainIncludes #{:schema/Invoice :schema/Order},
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def paymentMethod
  {:db/ident :schema/paymentMethod,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The name of the credit card or other method of payment for the order.",
   :rdfs/label "paymentMethod",
   :schema/domainIncludes #{:schema/Invoice :schema/Order},
   :schema/rangeIncludes :schema/PaymentMethod})

(def paymentMethodId
  {:db/ident :schema/paymentMethodId,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An identifier for the method of payment used (e.g. the last 4 digits of the credit card).",
   :rdfs/label "paymentMethodId",
   :schema/domainIncludes #{:schema/Invoice :schema/Order},
   :schema/rangeIncludes :schema/Text})

(def paymentStatus
  {:db/ident :schema/paymentStatus,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The status of payment; whether the invoice has been paid or not.",
   :rdfs/label "paymentStatus",
   :schema/domainIncludes :schema/Invoice,
   :schema/rangeIncludes #{:schema/PaymentStatusType :schema/Text}})

(def paymentUrl
  {:db/ident             :schema/paymentUrl,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The URL for sending a payment.",
   :rdfs/label           "paymentUrl",
   :schema/domainIncludes :schema/Order,
   :schema/rangeIncludes :schema/URL})

(def penciler
  {:db/ident :schema/penciler,
   :rdf/type :rdf/Property,
   :rdfs/comment "The individual who draws the primary narrative artwork.",
   :rdfs/label "penciler",
   :schema/domainIncludes #{:schema/VisualArtwork :schema/ComicStory
                            :schema/ComicIssue},
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Person})

(def percentile10
  {:db/ident :schema/percentile10,
   :rdf/type :rdf/Property,
   :rdfs/comment "The 10th percentile value.",
   :rdfs/label "percentile10",
   :schema/domainIncludes :schema/QuantitativeValueDistribution,
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def percentile25
  {:db/ident :schema/percentile25,
   :rdf/type :rdf/Property,
   :rdfs/comment "The 25th percentile value.",
   :rdfs/label "percentile25",
   :schema/domainIncludes :schema/QuantitativeValueDistribution,
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def percentile75
  {:db/ident :schema/percentile75,
   :rdf/type :rdf/Property,
   :rdfs/comment "The 75th percentile value.",
   :rdfs/label "percentile75",
   :schema/domainIncludes :schema/QuantitativeValueDistribution,
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def percentile90
  {:db/ident :schema/percentile90,
   :rdf/type :rdf/Property,
   :rdfs/comment "The 90th percentile value.",
   :rdfs/label "percentile90",
   :schema/domainIncludes :schema/QuantitativeValueDistribution,
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def performTime
  {:db/ident :schema/performTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The length of time it takes to perform instructions or a direction (not including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).",
   :rdfs/label "performTime",
   :schema/domainIncludes #{:schema/HowToDirection :schema/HowTo},
   :schema/rangeIncludes :schema/Duration})

(def performer
  {:db/ident :schema/performer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A performer at the event&#x2014;for example, a presenter, musician, musical group or actor.",
   :rdfs/label "performer",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def performerIn
  {:db/ident :schema/performerIn,
   :rdf/type :rdf/Property,
   :rdfs/comment "Event that this person is a performer or participant in.",
   :rdfs/label "performerIn",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Event})

(def performers
  {:db/ident :schema/performers,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The main performer or performers of the event&#x2014;for example, a presenter, musician, or actor.",
   :rdfs/label "performers",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/supersededBy :schema/performer})

(def permissionType
  {:db/ident :schema/permissionType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of permission granted the person, organization, or audience.",
   :rdfs/label "permissionType",
   :schema/domainIncludes :schema/DigitalDocumentPermission,
   :schema/rangeIncludes :schema/DigitalDocumentPermissionType})

(def permissions
  {:db/ident :schema/permissions,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Permission(s) required to run the app (for example, a mobile app may require full internet access or may run only on wifi).",
   :rdfs/label "permissions",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text})

(def permitAudience
  {:db/ident             :schema/permitAudience,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The target audience for this permit.",
   :rdfs/label           "permitAudience",
   :schema/domainIncludes :schema/Permit,
   :schema/rangeIncludes :schema/Audience})

(def permittedUsage
  {:db/ident :schema/permittedUsage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indications regarding the permitted usage of the accommodation.",
   :rdfs/label "permittedUsage",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes :schema/Accommodation,
   :schema/rangeIncludes :schema/Text})

(def petsAllowed
  {:db/ident :schema/petsAllowed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether pets are allowed to enter the accommodation or lodging business. More detailed information can be put in a text value.",
   :rdfs/label "petsAllowed",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes #{:schema/FloorPlan :schema/LodgingBusiness
                            :schema/Accommodation :schema/ApartmentComplex},
   :schema/rangeIncludes #{:schema/Boolean :schema/Text}})

(def phoneticText
  {:db/ident :schema/phoneticText,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Representation of a text [[textValue]] using the specified [[speechToTextMarkup]]. For example the city name of Houston in IPA: /ˈhjuːstən/.",
   :rdfs/label "phoneticText",
   :schema/domainIncludes :schema/PronounceableText,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2108"}})

(def photo
  {:db/ident           :schema/photo,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "A photograph of this place.",
   :rdfs/label         "photo",
   :rdfs/subPropertyOf :schema/image,
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes #{:schema/ImageObject :schema/Photograph}})

(def photos
  {:db/ident            :schema/photos,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "Photographs of this place.",
   :rdfs/label          "photos",
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes #{:schema/ImageObject :schema/Photograph},
   :schema/supersededBy :schema/photo})

(def physicalRequirement
  {:db/ident :schema/physicalRequirement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of the types of physical activity associated with the job. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.",
   :rdfs/label "physicalRequirement",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2384"}})

(def physiologicalBenefits
  {:db/ident :schema/physiologicalBenefits,
   :rdf/type :rdf/Property,
   :rdfs/comment "Specific physiologic benefits associated to the plan.",
   :rdfs/label "physiologicalBenefits",
   :schema/domainIncludes :schema/Diet,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def pickupLocation
  {:db/ident :schema/pickupLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Where a taxi will pick up a passenger or a rental car can be picked up.",
   :rdfs/label "pickupLocation",
   :schema/domainIncludes #{:schema/TaxiReservation
                            :schema/RentalCarReservation},
   :schema/rangeIncludes :schema/Place})

(def pickupTime
  {:db/ident :schema/pickupTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "When a taxi will pick up a passenger or a rental car can be picked up.",
   :rdfs/label "pickupTime",
   :schema/domainIncludes #{:schema/TaxiReservation
                            :schema/RentalCarReservation},
   :schema/rangeIncludes :schema/DateTime})

(def playMode
  {:db/ident :schema/playMode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether this game is multi-player, co-op or single-player.  The game can be marked as multi-player, co-op and single-player at the same time.",
   :rdfs/label "playMode",
   :schema/domainIncludes #{:schema/VideoGame :schema/VideoGameSeries},
   :schema/rangeIncludes :schema/GamePlayMode})

(def playerType
  {:db/ident :schema/playerType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Player type required&#x2014;for example, Flash or Silverlight.",
   :rdfs/label "playerType",
   :schema/domainIncludes :schema/MediaObject,
   :schema/rangeIncludes :schema/Text})

(def playersOnline
  {:db/ident             :schema/playersOnline,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Number of players on the server.",
   :rdfs/label           "playersOnline",
   :schema/domainIncludes :schema/GameServer,
   :schema/rangeIncludes :schema/Integer})

(def polygon
  {:db/ident :schema/polygon,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A polygon is the area enclosed by a point-to-point path for which the starting and ending points are the same. A polygon is expressed as a series of four or more space delimited points where the first and final points are identical.",
   :rdfs/label "polygon",
   :schema/domainIncludes :schema/GeoShape,
   :schema/rangeIncludes :schema/Text})

(def populationType
  {:db/ident :schema/populationType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the populationType common to all members of a [[StatisticalPopulation]] or all cases within the scope of a [[StatisticalVariable]].",
   :rdfs/label "populationType",
   :schema/domainIncludes #{:schema/StatisticalPopulation
                            :schema/StatisticalVariable},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Class,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2291"}})

(def position
  {:db/ident :schema/position,
   :rdf/type :rdf/Property,
   :rdfs/comment "The position of an item in a series or sequence of items.",
   :rdfs/label "position",
   :schema/domainIncludes #{:schema/ListItem :schema/CreativeWork},
   :schema/rangeIncludes #{:schema/Integer :schema/Text}})

(def positiveNotes
  {:db/ident :schema/positiveNotes,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Provides positive considerations regarding something, for example product highlights or (alongside [[negativeNotes]]) pro/con lists for reviews.\n\nIn the case of a [[Review]], the property describes the [[itemReviewed]] from the perspective of the review; in the case of a [[Product]], the product itself is being described.\n\nThe property values can be expressed either as unstructured text (repeated as necessary), or if ordered, as a list (in which case the most positive is at the beginning of the list).",
   :rdfs/label "positiveNotes",
   :schema/domainIncludes #{:schema/Product :schema/Review},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/ItemList :schema/ListItem :schema/WebContent
                           :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2832"}})

(def possibleComplication
  {:db/ident :schema/possibleComplication,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A possible unexpected and unfavorable evolution of a medical condition. Complications may include worsening of the signs or symptoms of the disease, extension of the condition to other organ systems, etc.",
   :rdfs/label "possibleComplication",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def possibleTreatment
  {:db/ident :schema/possibleTreatment,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A possible treatment to address this condition, sign or symptom.",
   :rdfs/label "possibleTreatment",
   :schema/domainIncludes #{:schema/MedicalSignOrSymptom
                            :schema/MedicalCondition},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTherapy})

(def postOfficeBoxNumber
  {:db/ident             :schema/postOfficeBoxNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The post office box number for PO box addresses.",
   :rdfs/label           "postOfficeBoxNumber",
   :schema/domainIncludes :schema/PostalAddress,
   :schema/rangeIncludes :schema/Text})

(def postOp
  {:db/ident :schema/postOp,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of the postoperative procedures, care, and/or followups for this device.",
   :rdfs/label "postOp",
   :schema/domainIncludes :schema/MedicalDevice,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def postalCode
  {:db/ident :schema/postalCode,
   :rdf/type :rdf/Property,
   :rdfs/comment "The postal code. For example, 94043.",
   :rdfs/label "postalCode",
   :schema/domainIncludes #{:schema/PostalAddress :schema/GeoCoordinates
                            :schema/DefinedRegion :schema/GeoShape},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def postalCodeBegin
  {:db/ident :schema/postalCodeBegin,
   :rdf/type :rdf/Property,
   :rdfs/comment "First postal code in a range (included).",
   :rdfs/label "postalCodeBegin",
   :schema/domainIncludes :schema/PostalCodeRangeSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def postalCodeEnd
  {:db/ident :schema/postalCodeEnd,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Last postal code in the range (included). Needs to be after [[postalCodeBegin]].",
   :rdfs/label "postalCodeEnd",
   :schema/domainIncludes :schema/PostalCodeRangeSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def postalCodePrefix
  {:db/ident :schema/postalCodePrefix,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A defined range of postal codes indicated by a common textual prefix. Used for non-numeric systems such as UK.",
   :rdfs/label "postalCodePrefix",
   :schema/domainIncludes :schema/DefinedRegion,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def postalCodeRange
  {:db/ident :schema/postalCodeRange,
   :rdf/type :rdf/Property,
   :rdfs/comment "A defined range of postal codes.",
   :rdfs/label "postalCodeRange",
   :schema/domainIncludes :schema/DefinedRegion,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/PostalCodeRangeSpecification,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def potentialAction
  {:db/ident :schema/potentialAction,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a potential Action, which describes an idealized action in which this thing would play an 'object' role.",
   :rdfs/label "potentialAction",
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes :schema/Action})

(def potentialUse
  {:db/ident             :schema/potentialUse,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Intended use of the BioChemEntity by humans.",
   :rdfs/label           "potentialUse",
   :schema/domainIncludes #{:schema/MolecularEntity :schema/ChemicalSubstance},
   :schema/isPartOf      {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/DefinedTerm,
   :schema/source        {:xsd/anyURI
                          "http://www.bioschemas.org/ChemicalSubstance"}})

(def preOp
  {:db/ident :schema/preOp,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of the workup, testing, and other preparations required before implanting this device.",
   :rdfs/label "preOp",
   :schema/domainIncludes :schema/MedicalDevice,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def predecessorOf
  {:db/ident :schema/predecessorOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A pointer from a previous, often discontinued variant of the product to its newer variant.",
   :rdfs/label "predecessorOf",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/ProductModel,
   :schema/rangeIncludes :schema/ProductModel})

(def pregnancyCategory
  {:db/ident             :schema/pregnancyCategory,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Pregnancy category of this drug.",
   :rdfs/label           "pregnancyCategory",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/DrugPregnancyCategory})

(def pregnancyWarning
  {:db/ident :schema/pregnancyWarning,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any precaution, guidance, contraindication, etc. related to this drug's use during pregnancy.",
   :rdfs/label "pregnancyWarning",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def prepTime
  {:db/ident :schema/prepTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The length of time it takes to prepare the items to be used in instructions or a direction, in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).",
   :rdfs/label "prepTime",
   :schema/domainIncludes #{:schema/HowToDirection :schema/HowTo},
   :schema/rangeIncludes :schema/Duration})

(def preparation
  {:db/ident :schema/preparation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Typical preparation that a patient must undergo before having the procedure performed.",
   :rdfs/label "preparation",
   :schema/domainIncludes :schema/MedicalProcedure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/MedicalEntity}})

(def prescribingInfo
  {:db/ident             :schema/prescribingInfo,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Link to prescribing information for the drug.",
   :rdfs/label           "prescribingInfo",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/URL})

(def prescriptionStatus
  {:db/ident :schema/prescriptionStatus,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the status of drug prescription, e.g. local catalogs classifications or whether the drug is available by prescription or over-the-counter, etc.",
   :rdfs/label "prescriptionStatus",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/DrugPrescriptionStatus :schema/Text}})

(def previousItem
  {:db/ident :schema/previousItem,
   :rdf/type :rdf/Property,
   :rdfs/comment "A link to the ListItem that precedes the current one.",
   :rdfs/label "previousItem",
   :schema/domainIncludes :schema/ListItem,
   :schema/rangeIncludes :schema/ListItem})

(def previousStartDate
  {:db/ident :schema/previousStartDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Used in conjunction with eventStatus for rescheduled or cancelled events. This property contains the previously scheduled start date. For rescheduled events, the startDate property should be used for the newly scheduled start date. In the (rare) case of an event that has been postponed and rescheduled multiple times, this field may be repeated.",
   :rdfs/label "previousStartDate",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes :schema/Date})

(def price
  {:db/ident :schema/price,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The offer price of a product, or of a price component when attached to PriceSpecification and its subtypes.\\n\\nUsage guidelines:\\n\\n* Use the [[priceCurrency]] property (with standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\") instead of including [ambiguous symbols](http://en.wikipedia.org/wiki/Dollar_sign#Currencies_that_use_the_dollar_or_peso_sign) such as '$' in the value.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.\\n* Note that both [RDFa](http://www.w3.org/TR/xhtml-rdfa-primer/#using-the-content-attribute) and Microdata syntax allow the use of a \"content=\" attribute for publishing simple machine-readable values alongside more human-friendly formatting.\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\n      ",
   :rdfs/label "price",
   :schema/domainIncludes #{:schema/PriceSpecification :schema/TradeAction
                            :schema/Offer},
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def priceComponent
  {:db/ident :schema/priceComponent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This property links to all [[UnitPriceSpecification]] nodes that apply in parallel for the [[CompoundPriceSpecification]] node.",
   :rdfs/label "priceComponent",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/CompoundPriceSpecification,
   :schema/rangeIncludes :schema/UnitPriceSpecification})

(def priceComponentType
  {:db/ident :schema/priceComponentType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Identifies a price component (for example, a line item on an invoice), part of the total price for an offer.",
   :rdfs/label "priceComponentType",
   :schema/domainIncludes :schema/UnitPriceSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/PriceComponentTypeEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2689"}})

(def priceCurrency
  {:db/ident :schema/priceCurrency,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The currency of the price, or a price component when attached to [[PriceSpecification]] and its subtypes.\\n\\nUse standard formats: [ISO 4217 currency format](http://en.wikipedia.org/wiki/ISO_4217), e.g. \"USD\"; [Ticker symbol](https://en.wikipedia.org/wiki/List_of_cryptocurrencies) for cryptocurrencies, e.g. \"BTC\"; well known names for [Local Exchange Trading Systems](https://en.wikipedia.org/wiki/Local_exchange_trading_system) (LETS) and other currency types, e.g. \"Ithaca HOUR\".",
   :rdfs/label "priceCurrency",
   :schema/domainIncludes #{:schema/PriceSpecification :schema/TradeAction
                            :schema/Reservation :schema/Offer :schema/Ticket},
   :schema/rangeIncludes :schema/Text})

(def priceRange
  {:db/ident :schema/priceRange,
   :rdf/type :rdf/Property,
   :rdfs/comment "The price range of the business, for example ```$$$```.",
   :rdfs/label "priceRange",
   :schema/domainIncludes :schema/LocalBusiness,
   :schema/rangeIncludes :schema/Text})

(def priceSpecification
  {:db/ident :schema/priceSpecification,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "One or more detailed price specifications, indicating the unit price and delivery or payment charges.",
   :rdfs/label "priceSpecification",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/TradeAction :schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/PriceSpecification})

(def priceType
  {:db/ident :schema/priceType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines the type of a price specified for an offered product, for example a list price, a (temporary) sale price or a manufacturer suggested retail price. If multiple prices are specified for an offer the [[priceType]] property can be used to identify the type of each such specified price. The value of priceType can be specified as a value from enumeration PriceTypeEnumeration or as a free form text string for price types that are not already predefined in PriceTypeEnumeration.",
   :rdfs/label "priceType",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/UnitPriceSpecification
                            :schema/CompoundPriceSpecification},
   :schema/rangeIncludes #{:schema/Text :schema/PriceTypeEnumeration}})

(def priceValidUntil
  {:db/ident :schema/priceValidUntil,
   :rdf/type :rdf/Property,
   :rdfs/comment "The date after which the price is no longer available.",
   :rdfs/label "priceValidUntil",
   :schema/domainIncludes :schema/Offer,
   :schema/rangeIncludes :schema/Date})

(def primaryImageOfPage
  {:db/ident             :schema/primaryImageOfPage,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Indicates the main image on the page.",
   :rdfs/label           "primaryImageOfPage",
   :schema/domainIncludes :schema/WebPage,
   :schema/rangeIncludes :schema/ImageObject})

(def primaryPrevention
  {:db/ident :schema/primaryPrevention,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A preventative therapy used to prevent an initial occurrence of the medical condition, such as vaccination.",
   :rdfs/label "primaryPrevention",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTherapy})

(def printColumn
  {:db/ident :schema/printColumn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of the column in which the NewsArticle appears in the print edition.",
   :rdfs/label "printColumn",
   :schema/domainIncludes :schema/NewsArticle,
   :schema/rangeIncludes :schema/Text})

(def printEdition
  {:db/ident :schema/printEdition,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The edition of the print product in which the NewsArticle appears.",
   :rdfs/label "printEdition",
   :schema/domainIncludes :schema/NewsArticle,
   :schema/rangeIncludes :schema/Text})

(def printPage
  {:db/ident :schema/printPage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "If this NewsArticle appears in print, this field indicates the name of the page on which the article is found. Please note that this field is intended for the exact page name (e.g. A5, B18).",
   :rdfs/label "printPage",
   :schema/domainIncludes :schema/NewsArticle,
   :schema/rangeIncludes :schema/Text})

(def printSection
  {:db/ident :schema/printSection,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "If this NewsArticle appears in print, this field indicates the print section in which the article appeared.",
   :rdfs/label "printSection",
   :schema/domainIncludes :schema/NewsArticle,
   :schema/rangeIncludes :schema/Text})

(def procedure
  {:db/ident :schema/procedure,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of the procedure involved in setting up, using, and/or installing the device.",
   :rdfs/label "procedure",
   :schema/domainIncludes :schema/MedicalDevice,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def procedureType
  {:db/ident :schema/procedureType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of procedure, for example Surgical, Noninvasive, or Percutaneous.",
   :rdfs/label "procedureType",
   :schema/domainIncludes :schema/MedicalProcedure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalProcedureType})

(def processingTime
  {:db/ident :schema/processingTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Estimated processing time for the service using this channel.",
   :rdfs/label "processingTime",
   :schema/domainIncludes :schema/ServiceChannel,
   :schema/rangeIncludes :schema/Duration})

(def processorRequirements
  {:db/ident :schema/processorRequirements,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Processor architecture required to run the application (e.g. IA64).",
   :rdfs/label "processorRequirements",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text})

(def producer
  {:db/ident :schema/producer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The person or organization who produced the work (e.g. music album, movie, TV/radio series etc.).",
   :rdfs/label "producer",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def produces
  {:db/ident :schema/produces,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The tangible thing generated by the service, e.g. a passport, permit, etc.",
   :rdfs/label "produces",
   :schema/domainIncludes :schema/Service,
   :schema/rangeIncludes :schema/Thing,
   :schema/supersededBy :schema/serviceOutput})

(def productGroupID
  {:db/ident :schema/productGroupID,
   :rdf/type :rdf/Property,
   :rdfs/comment "Indicates a textual identifier for a ProductGroup.",
   :rdfs/label "productGroupID",
   :schema/domainIncludes :schema/ProductGroup,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1797"}})

(def productID
  {:db/ident :schema/productID,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The product identifier, such as ISBN. For example: ``` meta itemprop=\"productID\" content=\"isbn:123-456-789\" ```.",
   :rdfs/label "productID",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes :schema/Product,
   :schema/rangeIncludes :schema/Text})

(def productSupported
  {:db/ident :schema/productSupported,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The product or service this support contact point is related to (such as product support for a particular product line). This can be a specific product or product line (e.g. \"iPhone\") or a general category of products or services (e.g. \"smartphones\").",
   :rdfs/label "productSupported",
   :schema/domainIncludes :schema/ContactPoint,
   :schema/rangeIncludes #{:schema/Product :schema/Text}})

(def productionCompany
  {:db/ident :schema/productionCompany,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The production company or studio responsible for the item, e.g. series, video game, episode etc.",
   :rdfs/label "productionCompany",
   :schema/domainIncludes #{:schema/Episode :schema/MediaObject
                            :schema/CreativeWorkSeason :schema/TVSeries
                            :schema/MovieSeries :schema/Movie
                            :schema/VideoGameSeries :schema/RadioSeries},
   :schema/rangeIncludes :schema/Organization})

(def productionDate
  {:db/ident :schema/productionDate,
   :rdf/type :rdf/Property,
   :rdfs/comment "The date of production of the item, e.g. vehicle.",
   :rdfs/label "productionDate",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes #{:schema/Product :schema/Vehicle},
   :schema/rangeIncludes :schema/Date})

(def proficiencyLevel
  {:db/ident :schema/proficiencyLevel,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Proficiency needed for this content; expected values: 'Beginner', 'Expert'.",
   :rdfs/label "proficiencyLevel",
   :schema/domainIncludes :schema/TechArticle,
   :schema/rangeIncludes :schema/Text})

(def programMembershipUsed
  {:db/ident :schema/programMembershipUsed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any membership in a frequent flyer, hotel loyalty program, etc. being applied to the reservation.",
   :rdfs/label "programMembershipUsed",
   :schema/domainIncludes :schema/Reservation,
   :schema/rangeIncludes :schema/ProgramMembership})

(def programName
  {:db/ident             :schema/programName,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The program providing the membership.",
   :rdfs/label           "programName",
   :schema/domainIncludes :schema/ProgramMembership,
   :schema/rangeIncludes :schema/Text})

(def programPrerequisites
  {:db/ident :schema/programPrerequisites,
   :rdf/type :rdf/Property,
   :rdfs/comment "Prerequisites for enrolling in the program.",
   :rdfs/label "programPrerequisites",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/EducationalOccupationalCredential
                           :schema/Course :schema/Text :schema/AlignmentObject},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2289"}})

(def programType
  {:db/ident :schema/programType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of educational or occupational program. For example, classroom, internship, alternance, etc.",
   :rdfs/label "programType",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2460"}})

(def programmingLanguage
  {:db/ident             :schema/programmingLanguage,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The computer programming language.",
   :rdfs/label           "programmingLanguage",
   :schema/domainIncludes :schema/SoftwareSourceCode,
   :schema/rangeIncludes #{:schema/Text :schema/ComputerLanguage}})

(def programmingModel
  {:db/ident             :schema/programmingModel,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Indicates whether API is managed or unmanaged.",
   :rdfs/label           "programmingModel",
   :schema/domainIncludes :schema/APIReference,
   :schema/rangeIncludes :schema/Text})

(def propertyID
  {:db/ident :schema/propertyID,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A commonly used identifier for the characteristic represented by the property, e.g. a manufacturer or a standard code for a property. propertyID can be\n(1) a prefixed string, mainly meant to be used with standards for product properties; (2) a site-specific, non-prefixed string (e.g. the primary key of the property or the vendor-specific ID of the property), or (3)\na URL indicating the type of the property, either pointing to an external vocabulary, or a Web resource that describes the property (e.g. a glossary entry).\nStandards bodies should promote a standard prefix for the identifiers of properties from their standards.",
   :rdfs/label "propertyID",
   :schema/domainIncludes :schema/PropertyValue,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def proprietaryName
  {:db/ident :schema/proprietaryName,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Proprietary name given to the diet plan, typically by its originator or creator.",
   :rdfs/label "proprietaryName",
   :schema/domainIncludes #{:schema/DietarySupplement :schema/Drug},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def proteinContent
  {:db/ident             :schema/proteinContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of grams of protein.",
   :rdfs/label           "proteinContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def provider
  {:db/ident :schema/provider,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The service provider, service operator, or service performer; the goods producer. Another party (a seller) may offer those services or goods on behalf of the provider. A provider may also serve as the seller.",
   :rdfs/label "provider",
   :schema/domainIncludes #{:schema/EducationalOccupationalProgram
                            :schema/ParcelDelivery :schema/CreativeWork
                            :schema/Invoice :schema/Action :schema/Reservation
                            :schema/Service :schema/Trip},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2927"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2289"}}})

(def providerMobility
  {:db/ident :schema/providerMobility,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the mobility of a provided service (e.g. 'static', 'dynamic').",
   :rdfs/label "providerMobility",
   :schema/domainIncludes :schema/Service,
   :schema/rangeIncludes :schema/Text})

(def providesBroadcastService
  {:db/ident             :schema/providesBroadcastService,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The BroadcastService offered on this channel.",
   :rdfs/label           "providesBroadcastService",
   :schema/domainIncludes :schema/BroadcastChannel,
   :schema/inverseOf     :schema/hasBroadcastChannel,
   :schema/rangeIncludes :schema/BroadcastService})

(def providesService
  {:db/ident             :schema/providesService,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The service provided by this channel.",
   :rdfs/label           "providesService",
   :schema/domainIncludes :schema/ServiceChannel,
   :schema/rangeIncludes :schema/Service})

(def publicAccess
  {:db/ident :schema/publicAccess,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A flag to signal that the [[Place]] is open to public visitors.  If this property is omitted there is no assumed default boolean value.",
   :rdfs/label "publicAccess",
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes :schema/Boolean})

(def publicTransportClosuresInfo
  {:db/ident :schema/publicTransportClosuresInfo,
   :rdf/type :rdf/Property,
   :rdfs/comment "Information about public transport closures.",
   :rdfs/label "publicTransportClosuresInfo",
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/WebContent :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def publication
  {:db/ident             :schema/publication,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A publication event associated with the item.",
   :rdfs/label           "publication",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/PublicationEvent})

(def publicationType
  {:db/ident :schema/publicationType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of the medical article, taken from the US NLM MeSH publication type catalog. See also [MeSH documentation](http://www.nlm.nih.gov/mesh/pubtypes.html).",
   :rdfs/label "publicationType",
   :schema/domainIncludes :schema/MedicalScholarlyArticle,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def publishedBy
  {:db/ident             :schema/publishedBy,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An agent associated with the publication event.",
   :rdfs/label           "publishedBy",
   :schema/domainIncludes :schema/PublicationEvent,
   :schema/isPartOf      {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def publishedOn
  {:db/ident :schema/publishedOn,
   :rdf/type :rdf/Property,
   :rdfs/comment "A broadcast service associated with the publication event.",
   :rdfs/label "publishedOn",
   :schema/domainIncludes :schema/PublicationEvent,
   :schema/rangeIncludes :schema/BroadcastService})

(def publisher
  {:db/ident             :schema/publisher,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The publisher of the creative work.",
   :rdfs/label           "publisher",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def publisherImprint
  {:db/ident             :schema/publisherImprint,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The publishing division which published the comic.",
   :rdfs/label           "publisherImprint",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf      {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Organization})

(def publishingPrinciples
  {:db/ident :schema/publishingPrinciples,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The publishingPrinciples property indicates (typically via [[URL]]) a document describing the editorial principles of an [[Organization]] (or individual, e.g. a [[Person]] writing a blog) that relate to their activities as a publisher, e.g. ethics or diversity policies. When applied to a [[CreativeWork]] (e.g. [[NewsArticle]]) the principles are those of the party primarily responsible for the creation of the [[CreativeWork]].\n\nWhile such policies are most typically expressed in natural language, sometimes related information (e.g. indicating a [[funder]]) can be expressed using schema.org terminology.\n",
   :rdfs/label "publishingPrinciples",
   :schema/domainIncludes #{:schema/CreativeWork :schema/Organization
                            :schema/Person},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL}})

(def purchaseDate
  {:db/ident :schema/purchaseDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date the item, e.g. vehicle, was purchased by the current owner.",
   :rdfs/label "purchaseDate",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes #{:schema/Product :schema/Vehicle},
   :schema/rangeIncludes :schema/Date})

(def qualifications
  {:db/ident :schema/qualifications,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specific qualifications required for this role or Occupation.",
   :rdfs/label "qualifications",
   :schema/domainIncludes #{:schema/Occupation :schema/JobPosting},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/EducationalOccupationalCredential
                           :schema/Text},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1779"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1698"}}})

(def quarantineGuidelines
  {:db/ident :schema/quarantineGuidelines,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Guidelines about quarantine rules, e.g. in the context of a pandemic.",
   :rdfs/label "quarantineGuidelines",
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/WebContent :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def query
  {:db/ident :schema/query,
   :rdf/type :rdf/Property,
   :rdfs/comment "A sub property of instrument. The query used on this action.",
   :rdfs/label "query",
   :rdfs/subPropertyOf :schema/instrument,
   :schema/domainIncludes :schema/SearchAction,
   :schema/rangeIncludes :schema/Text})

(def quest
  {:db/ident :schema/quest,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The task that a player-controlled character, or group of characters may complete in order to gain a reward.",
   :rdfs/label "quest",
   :schema/domainIncludes #{:schema/Game :schema/VideoGameSeries},
   :schema/rangeIncludes :schema/Thing})

(def question
  {:db/ident           :schema/question,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "A sub property of object. A question.",
   :rdfs/label         "question",
   :rdfs/subPropertyOf :schema/object,
   :schema/domainIncludes :schema/AskAction,
   :schema/rangeIncludes :schema/Question})

(def rangeIncludes
  {:db/ident :schema/rangeIncludes,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Relates a property to a class that constitutes (one of) the expected type(s) for values of the property.",
   :rdfs/label "rangeIncludes",
   :schema/domainIncludes :schema/Property,
   :schema/isPartOf {:xsd/anyURI "http://meta.schema.org"},
   :schema/rangeIncludes :schema/Class})

(def ratingCount
  {:db/ident             :schema/ratingCount,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The count of total number of ratings.",
   :rdfs/label           "ratingCount",
   :schema/domainIncludes :schema/AggregateRating,
   :schema/rangeIncludes :schema/Integer})

(def ratingExplanation
  {:db/ident :schema/ratingExplanation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A short explanation (e.g. one to two sentences) providing background context and other information that led to the conclusion expressed in the rating. This is particularly applicable to ratings associated with \"fact check\" markup using [[ClaimReview]].",
   :rdfs/label "ratingExplanation",
   :schema/domainIncludes :schema/Rating,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2300"}})

(def ratingValue
  {:db/ident :schema/ratingValue,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The rating for the content.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
   :rdfs/label "ratingValue",
   :schema/domainIncludes :schema/Rating,
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def readBy
  {:db/ident             :schema/readBy,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A person who reads (performs) the audiobook.",
   :rdfs/label           "readBy",
   :rdfs/subPropertyOf   :schema/actor,
   :schema/domainIncludes :schema/Audiobook,
   :schema/isPartOf      {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Person})

(def readonlyValue
  {:db/ident :schema/readonlyValue,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Whether or not a property is mutable.  Default is false. Specifying this for a property that also has a value makes it act similar to a \"hidden\" input in an HTML form.",
   :rdfs/label "readonlyValue",
   :schema/domainIncludes :schema/PropertyValueSpecification,
   :schema/rangeIncludes :schema/Boolean})

(def realEstateAgent
  {:db/ident :schema/realEstateAgent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of participant. The real estate agent involved in the action.",
   :rdfs/label "realEstateAgent",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/RentAction,
   :schema/rangeIncludes :schema/RealEstateAgent})

(def recipe
  {:db/ident :schema/recipe,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of instrument. The recipe/instructions used to perform the action.",
   :rdfs/label "recipe",
   :rdfs/subPropertyOf :schema/instrument,
   :schema/domainIncludes :schema/CookAction,
   :schema/rangeIncludes :schema/Recipe})

(def recipeCategory
  {:db/ident :schema/recipeCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The category of the recipe—for example, appetizer, entree, etc.",
   :rdfs/label "recipeCategory",
   :schema/domainIncludes :schema/Recipe,
   :schema/rangeIncludes :schema/Text})

(def recipeCuisine
  {:db/ident :schema/recipeCuisine,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The cuisine of the recipe (for example, French or Ethiopian).",
   :rdfs/label "recipeCuisine",
   :schema/domainIncludes :schema/Recipe,
   :schema/rangeIncludes :schema/Text})

(def recipeIngredient
  {:db/ident :schema/recipeIngredient,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A single ingredient used in the recipe, e.g. sugar, flour or garlic.",
   :rdfs/label "recipeIngredient",
   :rdfs/subPropertyOf :schema/supply,
   :schema/domainIncludes :schema/Recipe,
   :schema/rangeIncludes :schema/Text})

(def recipeInstructions
  {:db/ident :schema/recipeInstructions,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A step in making the recipe, in the form of a single item (document, video, etc.) or an ordered list with HowToStep and/or HowToSection items.",
   :rdfs/label "recipeInstructions",
   :rdfs/subPropertyOf :schema/step,
   :schema/domainIncludes :schema/Recipe,
   :schema/rangeIncludes #{:schema/ItemList :schema/CreativeWork :schema/Text}})

(def recipeYield
  {:db/ident :schema/recipeYield,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The quantity produced by the recipe (for example, number of people served, number of servings, etc).",
   :rdfs/label "recipeYield",
   :rdfs/subPropertyOf :schema/yield,
   :schema/domainIncludes :schema/Recipe,
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Text}})

(def recipient
  {:db/ident :schema/recipient,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of participant. The participant who is at the receiving end of the action.",
   :rdfs/label "recipient",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes
   #{:schema/AuthorizeAction :schema/GiveAction :schema/PayAction
     :schema/SendAction :schema/DonateAction :schema/CommunicateAction
     :schema/TipAction :schema/Message :schema/ReturnAction},
   :schema/rangeIncludes #{:schema/Audience :schema/ContactPoint
                           :schema/Organization :schema/Person}})

(def recognizedBy
  {:db/ident :schema/recognizedBy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An organization that acknowledges the validity, value or utility of a credential. Note: recognition may include a process of quality assurance or accreditation.",
   :rdfs/label "recognizedBy",
   :schema/domainIncludes :schema/EducationalOccupationalCredential,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Organization,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1779"}})

(def recognizingAuthority
  {:db/ident :schema/recognizingAuthority,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "If applicable, the organization that officially recognizes this entity as part of its endorsed system of medicine.",
   :rdfs/label "recognizingAuthority",
   :schema/domainIncludes :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Organization})

(def recommendationStrength
  {:db/ident :schema/recommendationStrength,
   :rdf/type :rdf/Property,
   :rdfs/comment "Strength of the guideline's recommendation (e.g. 'class I').",
   :rdfs/label "recommendationStrength",
   :schema/domainIncludes :schema/MedicalGuidelineRecommendation,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def recommendedIntake
  {:db/ident :schema/recommendedIntake,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Recommended intake of this supplement for a given population as defined by a specific recommending authority.",
   :rdfs/label "recommendedIntake",
   :schema/domainIncludes :schema/DietarySupplement,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/RecommendedDoseSchedule})

(def recordLabel
  {:db/ident :schema/recordLabel,
   :owl/equivalentProperty :mo/label,
   :rdf/type :rdf/Property,
   :rdfs/comment "The label that issued the release.",
   :rdfs/label "recordLabel",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicRelease,
   :schema/rangeIncludes :schema/Organization})

(def recordedAs
  {:db/ident           :schema/recordedAs,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "An audio recording of the work.",
   :rdfs/label         "recordedAs",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicComposition,
   :schema/inverseOf   :schema/recordingOf,
   :schema/rangeIncludes :schema/MusicRecording})

(def recordedAt
  {:db/ident :schema/recordedAt,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Event where the CreativeWork was recorded. The CreativeWork may capture all or part of the event.",
   :rdfs/label "recordedAt",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/inverseOf :schema/recordedIn,
   :schema/rangeIncludes :schema/Event})

(def recordedIn
  {:db/ident :schema/recordedIn,
   :rdf/type :rdf/Property,
   :rdfs/comment "The CreativeWork that captured all or part of this Event.",
   :rdfs/label "recordedIn",
   :schema/domainIncludes :schema/Event,
   :schema/inverseOf :schema/recordedAt,
   :schema/rangeIncludes :schema/CreativeWork})

(def recordingOf
  {:db/ident           :schema/recordingOf,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The composition this track is a recording of.",
   :rdfs/label         "recordingOf",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicRecording,
   :schema/inverseOf   :schema/recordedAs,
   :schema/rangeIncludes :schema/MusicComposition})

(def recourseLoan
  {:db/ident :schema/recourseLoan,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The only way you get the money back in the event of default is the security. Recourse is where you still have the opportunity to go back to the borrower for the rest of the money.",
   :rdfs/label "recourseLoan",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/LoanOrCredit,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def referenceQuantity
  {:db/ident :schema/referenceQuantity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The reference quantity for which a certain price applies, e.g. 1 EUR per 4 kWh of electricity. This property is a replacement for unitOfMeasurement for the advanced cases where the price does not relate to a standard unit.",
   :rdfs/label "referenceQuantity",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/UnitPriceSpecification,
   :schema/rangeIncludes :schema/QuantitativeValue})

(def referencesOrder
  {:db/ident :schema/referencesOrder,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Order(s) related to this Invoice. One or more Orders may be combined into a single Invoice.",
   :rdfs/label "referencesOrder",
   :schema/domainIncludes :schema/Invoice,
   :schema/rangeIncludes :schema/Order})

(def refundType
  {:db/ident :schema/refundType,
   :rdf/type :rdf/Property,
   :rdfs/comment "A refund type, from an enumerated list.",
   :rdfs/label "refundType",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/RefundTypeEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def regionDrained
  {:db/ident :schema/regionDrained,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The anatomical or organ system drained by this vessel; generally refers to a specific part of an organ.",
   :rdfs/label "regionDrained",
   :schema/domainIncludes #{:schema/LymphaticVessel :schema/Vein},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/AnatomicalStructure
                           :schema/AnatomicalSystem}})

(def regionsAllowed
  {:db/ident :schema/regionsAllowed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The regions where the media is allowed. If not specified, then it's assumed to be allowed everywhere. Specify the countries in [ISO 3166 format](http://en.wikipedia.org/wiki/ISO_3166).",
   :rdfs/label "regionsAllowed",
   :schema/domainIncludes :schema/MediaObject,
   :schema/rangeIncludes :schema/Place})

(def relatedAnatomy
  {:db/ident :schema/relatedAnatomy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Anatomical systems or structures that relate to the superficial anatomy.",
   :rdfs/label "relatedAnatomy",
   :schema/domainIncludes :schema/SuperficialAnatomy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/AnatomicalStructure
                           :schema/AnatomicalSystem}})

(def relatedCondition
  {:db/ident             :schema/relatedCondition,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A medical condition associated with this anatomy.",
   :rdfs/label           "relatedCondition",
   :schema/domainIncludes #{:schema/SuperficialAnatomy
                            :schema/AnatomicalStructure
                            :schema/AnatomicalSystem},
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalCondition})

(def relatedDrug
  {:db/ident :schema/relatedDrug,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any other drug related to this one, for example commonly-prescribed alternatives.",
   :rdfs/label "relatedDrug",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Drug})

(def relatedLink
  {:db/ident :schema/relatedLink,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A link related to this web page, for example to other related web pages.",
   :rdfs/label "relatedLink",
   :schema/domainIncludes :schema/WebPage,
   :schema/rangeIncludes :schema/URL})

(def relatedStructure
  {:db/ident :schema/relatedStructure,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Related anatomical structure(s) that are not part of the system but relate or connect to it, such as vascular bundles associated with an organ system.",
   :rdfs/label "relatedStructure",
   :schema/domainIncludes :schema/AnatomicalSystem,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AnatomicalStructure})

(def relatedTherapy
  {:db/ident             :schema/relatedTherapy,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A medical therapy related to this anatomy.",
   :rdfs/label           "relatedTherapy",
   :schema/domainIncludes #{:schema/SuperficialAnatomy
                            :schema/AnatomicalStructure
                            :schema/AnatomicalSystem},
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTherapy})

(def relatedTo
  {:db/ident             :schema/relatedTo,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The most generic familial relation.",
   :rdfs/label           "relatedTo",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person})

(def releaseDate
  {:db/ident :schema/releaseDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The release date of a product or product model. This can be used to distinguish the exact variant of a product.",
   :rdfs/label "releaseDate",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/Product,
   :schema/rangeIncludes :schema/Date})

(def releaseNotes
  {:db/ident             :schema/releaseNotes,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Description of what changed in this version.",
   :rdfs/label           "releaseNotes",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def releaseOf
  {:db/ident           :schema/releaseOf,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The album this is a release of.",
   :rdfs/label         "releaseOf",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes :schema/MusicRelease,
   :schema/inverseOf   :schema/albumRelease,
   :schema/rangeIncludes :schema/MusicAlbum})

(def releasedEvent
  {:db/ident :schema/releasedEvent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The place and time the release was issued, expressed as a PublicationEvent.",
   :rdfs/label "releasedEvent",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/PublicationEvent})

(def relevantOccupation
  {:db/ident :schema/relevantOccupation,
   :rdf/type :rdf/Property,
   :rdfs/comment "The Occupation for the JobPosting.",
   :rdfs/label "relevantOccupation",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Occupation,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def relevantSpecialty
  {:db/ident :schema/relevantSpecialty,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "If applicable, a medical specialty in which this entity is relevant.",
   :rdfs/label "relevantSpecialty",
   :schema/domainIncludes :schema/MedicalEntity,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalSpecialty})

(def remainingAttendeeCapacity
  {:db/ident :schema/remainingAttendeeCapacity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of attendee places for an event that remain unallocated.",
   :rdfs/label "remainingAttendeeCapacity",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes :schema/Integer})

(def renegotiableLoan
  {:db/ident :schema/renegotiableLoan,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Whether the terms for payment of interest can be renegotiated during the life of the loan.",
   :rdfs/label "renegotiableLoan",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/LoanOrCredit,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Boolean,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1253"}})

(def repeatCount
  {:db/ident :schema/repeatCount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines the number of times a recurring [[Event]] will take place.",
   :rdfs/label "repeatCount",
   :schema/domainIncludes :schema/Schedule,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1457"}})

(def repeatFrequency
  {:db/ident :schema/repeatFrequency,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Defines the frequency at which [[Event]]s will occur according to a schedule [[Schedule]]. The intervals between\n      events should be defined as a [[Duration]] of time.",
   :rdfs/label "repeatFrequency",
   :rdfs/subPropertyOf :schema/frequency,
   :schema/domainIncludes :schema/Schedule,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Duration :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1457"}})

(def repetitions
  {:db/ident             :schema/repetitions,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Number of times one should repeat the activity.",
   :rdfs/label           "repetitions",
   :schema/domainIncludes :schema/ExercisePlan,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def replacee
  {:db/ident :schema/replacee,
   :rdf/type :rdf/Property,
   :rdfs/comment "A sub property of object. The object that is being replaced.",
   :rdfs/label "replacee",
   :rdfs/subPropertyOf :schema/object,
   :schema/domainIncludes :schema/ReplaceAction,
   :schema/rangeIncludes :schema/Thing})

(def replacer
  {:db/ident           :schema/replacer,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "A sub property of object. The object that replaces.",
   :rdfs/label         "replacer",
   :rdfs/subPropertyOf :schema/object,
   :schema/domainIncludes :schema/ReplaceAction,
   :schema/rangeIncludes :schema/Thing})

(def replyToUrl
  {:db/ident :schema/replyToUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The URL at which a reply may be posted to the specified UserComment.",
   :rdfs/label "replyToUrl",
   :schema/domainIncludes :schema/UserComments,
   :schema/rangeIncludes :schema/URL})

(def reportNumber
  {:db/ident :schema/reportNumber,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number or other unique designator assigned to a Report by the publishing organization.",
   :rdfs/label "reportNumber",
   :schema/domainIncludes :schema/Report,
   :schema/rangeIncludes :schema/Text})

(def representativeOfPage
  {:db/ident :schema/representativeOfPage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether this image is representative of the content of the page.",
   :rdfs/label "representativeOfPage",
   :schema/domainIncludes :schema/ImageObject,
   :schema/rangeIncludes :schema/Boolean})

(def requiredCollateral
  {:db/ident :schema/requiredCollateral,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Assets required to secure loan or credit repayments. It may take form of third party pledge, goods, financial instruments (cash, securities, etc.)",
   :rdfs/label "requiredCollateral",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/FIBO"},
   :schema/domainIncludes :schema/LoanOrCredit,
   :schema/rangeIncludes #{:schema/Thing :schema/Text}})

(def requiredGender
  {:db/ident             :schema/requiredGender,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Audiences defined by a person's gender.",
   :rdfs/label           "requiredGender",
   :schema/domainIncludes :schema/PeopleAudience,
   :schema/rangeIncludes :schema/Text})

(def requiredMaxAge
  {:db/ident             :schema/requiredMaxAge,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Audiences defined by a person's maximum age.",
   :rdfs/label           "requiredMaxAge",
   :schema/domainIncludes :schema/PeopleAudience,
   :schema/rangeIncludes :schema/Integer})

(def requiredMinAge
  {:db/ident             :schema/requiredMinAge,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Audiences defined by a person's minimum age.",
   :rdfs/label           "requiredMinAge",
   :schema/domainIncludes :schema/PeopleAudience,
   :schema/rangeIncludes :schema/Integer})

(def requiredQuantity
  {:db/ident             :schema/requiredQuantity,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The required quantity of the item(s).",
   :rdfs/label           "requiredQuantity",
   :schema/domainIncludes :schema/HowToItem,
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue
                           :schema/Text}})

(def requirements
  {:db/ident :schema/requirements,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).",
   :rdfs/label "requirements",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/supersededBy :schema/softwareRequirements})

(def requiresSubscription
  {:db/ident :schema/requiresSubscription,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates if use of the media require a subscription  (either paid or free). Allowed values are ```true``` or ```false``` (note that an earlier version had 'yes', 'no').",
   :rdfs/label "requiresSubscription",
   :schema/domainIncludes #{:schema/MediaObject
                            :schema/ActionAccessSpecification},
   :schema/rangeIncludes #{:schema/MediaSubscription :schema/Boolean},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1741"}})

(def reservationFor
  {:db/ident :schema/reservationFor,
   :rdf/type :rdf/Property,
   :rdfs/comment "The thing -- flight, event, restaurant, etc. being reserved.",
   :rdfs/label "reservationFor",
   :schema/domainIncludes :schema/Reservation,
   :schema/rangeIncludes :schema/Thing})

(def reservationId
  {:db/ident             :schema/reservationId,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A unique identifier for the reservation.",
   :rdfs/label           "reservationId",
   :schema/domainIncludes :schema/Reservation,
   :schema/rangeIncludes :schema/Text})

(def reservationStatus
  {:db/ident             :schema/reservationStatus,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The current status of the reservation.",
   :rdfs/label           "reservationStatus",
   :schema/domainIncludes :schema/Reservation,
   :schema/rangeIncludes :schema/ReservationStatusType})

(def reservedTicket
  {:db/ident             :schema/reservedTicket,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A ticket associated with the reservation.",
   :rdfs/label           "reservedTicket",
   :schema/domainIncludes :schema/Reservation,
   :schema/rangeIncludes :schema/Ticket})

(def responsibilities
  {:db/ident :schema/responsibilities,
   :rdf/type :rdf/Property,
   :rdfs/comment "Responsibilities associated with this role or Occupation.",
   :rdfs/label "responsibilities",
   :schema/domainIncludes #{:schema/Occupation :schema/JobPosting},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1698"}})

(def restPeriods
  {:db/ident             :schema/restPeriods,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "How often one should break from the activity.",
   :rdfs/label           "restPeriods",
   :schema/domainIncludes :schema/ExercisePlan,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Text}})

(def restockingFee
  {:db/ident :schema/restockingFee,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Use [[MonetaryAmount]] to specify a fixed restocking fee for product returns, or use [[Number]] to specify a percentage of the product price paid by the customer.",
   :rdfs/label "restockingFee",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/Number},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def result
  {:db/ident :schema/result,
   :rdf/type :rdf/Property,
   :rdfs/comment "The result produced in the action. E.g. John wrote *a book*.",
   :rdfs/label "result",
   :schema/domainIncludes :schema/Action,
   :schema/rangeIncludes :schema/Thing})

(def resultComment
  {:db/ident :schema/resultComment,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of result. The Comment created or sent as a result of this action.",
   :rdfs/label "resultComment",
   :rdfs/subPropertyOf :schema/result,
   :schema/domainIncludes #{:schema/CommentAction :schema/ReplyAction},
   :schema/rangeIncludes :schema/Comment})

(def resultReview
  {:db/ident :schema/resultReview,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of result. The review that resulted in the performing of the action.",
   :rdfs/label "resultReview",
   :rdfs/subPropertyOf :schema/result,
   :schema/domainIncludes :schema/ReviewAction,
   :schema/rangeIncludes :schema/Review})

(def returnFees
  {:db/ident :schema/returnFees,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of return fees for purchased products (for any return reason).",
   :rdfs/label "returnFees",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ReturnFeesEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def returnLabelSource
  {:db/ident :schema/returnLabelSource,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The method (from an enumeration) by which the customer obtains a return shipping label for a product returned for any reason.",
   :rdfs/label "returnLabelSource",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ReturnLabelSourceEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def returnMethod
  {:db/ident :schema/returnMethod,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of return method offered, specified from an enumeration.",
   :rdfs/label "returnMethod",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/ReturnMethodEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def returnPolicyCategory
  {:db/ident :schema/returnPolicyCategory,
   :rdf/type :rdf/Property,
   :rdfs/comment "Specifies an applicable return policy (from an enumeration).",
   :rdfs/label "returnPolicyCategory",
   :schema/domainIncludes #{:schema/MerchantReturnPolicySeasonalOverride
                            :schema/MerchantReturnPolicy},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MerchantReturnEnumeration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2288"}})

(def returnPolicyCountry
  {:db/ident :schema/returnPolicyCountry,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The country where the product has to be sent to for returns, for example \"Ireland\" using the [[name]] property of [[Country]]. You can also provide the two-letter [ISO 3166-1 alpha-2 country code](http://en.wikipedia.org/wiki/ISO_3166-1). Note that this can be different from the country where the product was originally shipped from or sent to.",
   :rdfs/label "returnPolicyCountry",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/Country},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def returnPolicySeasonalOverride
  {:db/ident :schema/returnPolicySeasonalOverride,
   :rdf/type :rdf/Property,
   :rdfs/comment "Seasonal override of a return policy.",
   :rdfs/label "returnPolicySeasonalOverride",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MerchantReturnPolicySeasonalOverride,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def returnShippingFeesAmount
  {:db/ident :schema/returnShippingFeesAmount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Amount of shipping costs for product returns (for any reason). Applicable when property [[returnFees]] equals [[ReturnShippingFees]].",
   :rdfs/label "returnShippingFeesAmount",
   :schema/domainIncludes :schema/MerchantReturnPolicy,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2880"}})

(def review
  {:db/ident             :schema/review,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A review of the item.",
   :rdfs/label           "review",
   :schema/domainIncludes #{:schema/Place :schema/Product :schema/CreativeWork
                            :schema/Brand :schema/Event :schema/Offer
                            :schema/Organization :schema/Service},
   :schema/rangeIncludes :schema/Review})

(def reviewAspect
  {:db/ident :schema/reviewAspect,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "This Review or Rating is relevant to this part or facet of the itemReviewed.",
   :rdfs/label "reviewAspect",
   :schema/domainIncludes #{:schema/Review :schema/Rating :schema/Guide},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1689"}})

(def reviewBody
  {:db/ident             :schema/reviewBody,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The actual body of the review.",
   :rdfs/label           "reviewBody",
   :schema/domainIncludes :schema/Review,
   :schema/rangeIncludes :schema/Text})

(def reviewCount
  {:db/ident             :schema/reviewCount,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The count of total number of reviews.",
   :rdfs/label           "reviewCount",
   :schema/domainIncludes :schema/AggregateRating,
   :schema/rangeIncludes :schema/Integer})

(def reviewRating
  {:db/ident :schema/reviewRating,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The rating given in this review. Note that reviews can themselves be rated. The ```reviewRating``` applies to rating given by the review. The [[aggregateRating]] property applies to the review itself, as a creative work.",
   :rdfs/label "reviewRating",
   :schema/domainIncludes :schema/Review,
   :schema/rangeIncludes :schema/Rating})

(def reviewedBy
  {:db/ident :schema/reviewedBy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "People or organizations that have reviewed the content on this web page for accuracy and/or completeness.",
   :rdfs/label "reviewedBy",
   :schema/domainIncludes :schema/WebPage,
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def reviews
  {:db/ident            :schema/reviews,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "Review of the item.",
   :rdfs/label          "reviews",
   :schema/domainIncludes #{:schema/Place :schema/Product :schema/CreativeWork
                            :schema/Offer :schema/Organization},
   :schema/rangeIncludes :schema/Review,
   :schema/supersededBy :schema/review})

(def riskFactor
  {:db/ident :schema/riskFactor,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A modifiable or non-modifiable factor that increases the risk of a patient contracting this condition, e.g. age,  coexisting condition.",
   :rdfs/label "riskFactor",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalRiskFactor})

(def risks
  {:db/ident :schema/risks,
   :rdf/type :rdf/Property,
   :rdfs/comment "Specific physiologic risks associated to the diet plan.",
   :rdfs/label "risks",
   :schema/domainIncludes :schema/Diet,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def roleName
  {:db/ident :schema/roleName,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A role played, performed or filled by a person or organization. For example, the team of creators for a comic book might fill the roles named 'inker', 'penciller', and 'letterer'; or an athlete in a SportsTeam might play in the position named 'Quarterback'.",
   :rdfs/label "roleName",
   :schema/domainIncludes :schema/Role,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def roofLoad
  {:db/ident :schema/roofLoad,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The permitted total weight of cargo and installations (e.g. a roof rack) on top of the vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]]\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
   :rdfs/label "roofLoad",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes #{:schema/BusOrCoach :schema/Car},
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def rsvpResponse
  {:db/ident             :schema/rsvpResponse,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The response (yes, no, maybe) to the RSVP.",
   :rdfs/label           "rsvpResponse",
   :schema/domainIncludes :schema/RsvpAction,
   :schema/rangeIncludes :schema/RsvpResponseType})

(def runsTo
  {:db/ident :schema/runsTo,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The vasculature the lymphatic structure runs, or efferents, to.",
   :rdfs/label "runsTo",
   :schema/domainIncludes :schema/LymphaticVessel,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Vessel})

(def runtime
  {:db/ident :schema/runtime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).",
   :rdfs/label "runtime",
   :schema/domainIncludes :schema/SoftwareSourceCode,
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/runtimePlatform})

(def runtimePlatform
  {:db/ident :schema/runtimePlatform,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Runtime platform or script interpreter dependencies (example: Java v1, Python 2.3, .NET Framework 3.0).",
   :rdfs/label "runtimePlatform",
   :schema/domainIncludes :schema/SoftwareSourceCode,
   :schema/rangeIncludes :schema/Text})

(def rxcui
  {:db/ident :schema/rxcui,
   :rdf/type :rdf/Property,
   :rdfs/comment "The RxCUI drug identifier from RXNORM.",
   :rdfs/label "rxcui",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def safetyConsideration
  {:db/ident :schema/safetyConsideration,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any potential safety concern associated with the supplement. May include interactions with other drugs and foods, pregnancy, breastfeeding, known adverse reactions, and documented efficacy of the supplement.",
   :rdfs/label "safetyConsideration",
   :schema/domainIncludes :schema/DietarySupplement,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def salaryCurrency
  {:db/ident :schema/salaryCurrency,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The currency (coded using [ISO 4217](http://en.wikipedia.org/wiki/ISO_4217)) used for the main salary information in this job posting or for this employee.",
   :rdfs/label "salaryCurrency",
   :schema/domainIncludes #{:schema/JobPosting :schema/EmployeeRole},
   :schema/rangeIncludes :schema/Text})

(def salaryUponCompletion
  {:db/ident :schema/salaryUponCompletion,
   :rdf/type :rdf/Property,
   :rdfs/comment "The expected salary upon completing the training.",
   :rdfs/label "salaryUponCompletion",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmountDistribution,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2289"}})

(def sameAs
  {:db/ident :schema/sameAs,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "URL of a reference Web page that unambiguously indicates the item's identity. E.g. the URL of the item's Wikipedia page, Wikidata entry, or official website.",
   :rdfs/label "sameAs",
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes :schema/URL})

(def sampleType
  {:db/ident :schema/sampleType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "What type of code sample: full (compile ready) solution, code snippet, inline code, scripts, template.",
   :rdfs/label "sampleType",
   :schema/domainIncludes :schema/SoftwareSourceCode,
   :schema/rangeIncludes :schema/Text,
   :schema/supersededBy :schema/codeSampleType})

(def saturatedFatContent
  {:db/ident             :schema/saturatedFatContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of grams of saturated fat.",
   :rdfs/label           "saturatedFatContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def scheduleTimezone
  {:db/ident :schema/scheduleTimezone,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the timezone for which the time(s) indicated in the [[Schedule]] are given. The value provided should be among those listed in the IANA Time Zone Database.",
   :rdfs/label "scheduleTimezone",
   :schema/domainIncludes :schema/Schedule,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1457"}})

(def scheduledPaymentDate
  {:db/ident             :schema/scheduledPaymentDate,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The date the invoice is scheduled to be paid.",
   :rdfs/label           "scheduledPaymentDate",
   :schema/domainIncludes :schema/Invoice,
   :schema/rangeIncludes :schema/Date})

(def scheduledTime
  {:db/ident             :schema/scheduledTime,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The time the object is scheduled to.",
   :rdfs/label           "scheduledTime",
   :schema/domainIncludes :schema/PlanAction,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def schemaVersion
  {:db/ident :schema/schemaVersion,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates (by URL or string) a particular version of a schema used in some CreativeWork. This property was created primarily to\n    indicate the use of a specific schema.org release, e.g. ```10.0``` as a simple string, or more explicitly via URL, ```http://schema.org/docs/releases.html#v10.0```. There may be situations in which other schemas might usefully be referenced this way, e.g. ```http://dublincore.org/specifications/dublin-core/dces/1999-07-02/``` but this has not been carefully explored in the community.",
   :rdfs/label "schemaVersion",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def schoolClosuresInfo
  {:db/ident :schema/schoolClosuresInfo,
   :rdf/type :rdf/Property,
   :rdfs/comment "Information about school closures.",
   :rdfs/label "schoolClosuresInfo",
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/WebContent :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def screenCount
  {:db/ident             :schema/screenCount,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of screens in the movie theater.",
   :rdfs/label           "screenCount",
   :schema/domainIncludes :schema/MovieTheater,
   :schema/rangeIncludes :schema/Number})

(def screenshot
  {:db/ident             :schema/screenshot,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A link to a screenshot image of the app.",
   :rdfs/label           "screenshot",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes #{:schema/ImageObject :schema/URL}})

(def sdDatePublished
  {:db/ident :schema/sdDatePublished,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the date on which the current structured data was generated / published. Typically used alongside [[sdPublisher]].",
   :rdfs/label "sdDatePublished",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Date,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1886"}})

(def sdLicense
  {:db/ident :schema/sdLicense,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A license document that applies to this structured data, typically indicated by URL.",
   :rdfs/label "sdLicense",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1886"}})

(def sdPublisher
  {:db/ident :schema/sdPublisher,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the party responsible for generating and publishing the current structured data markup, typically in cases where the structured data is derived automatically from existing published content but published on a different site. For example, student projects and open data initiatives often re-publish existing content with more explicitly structured metadata. The\n[[sdPublisher]] property helps make such practices more explicit.",
   :rdfs/label "sdPublisher",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1886"}})

(def season
  {:db/ident            :schema/season,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A season in a media series.",
   :rdfs/label          "season",
   :rdfs/subPropertyOf  :schema/hasPart,
   :schema/domainIncludes #{:schema/TVSeries :schema/VideoGameSeries
                            :schema/RadioSeries},
   :schema/rangeIncludes #{:schema/CreativeWorkSeason :schema/URL},
   :schema/supersededBy :schema/containsSeason})

(def seasonNumber
  {:db/ident :schema/seasonNumber,
   :rdf/type :rdf/Property,
   :rdfs/comment "Position of the season within an ordered group of seasons.",
   :rdfs/label "seasonNumber",
   :rdfs/subPropertyOf :schema/position,
   :schema/domainIncludes :schema/CreativeWorkSeason,
   :schema/rangeIncludes #{:schema/Integer :schema/Text}})

(def seasons
  {:db/ident            :schema/seasons,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A season in a media series.",
   :rdfs/label          "seasons",
   :schema/domainIncludes #{:schema/TVSeries :schema/VideoGameSeries
                            :schema/RadioSeries},
   :schema/rangeIncludes :schema/CreativeWorkSeason,
   :schema/supersededBy :schema/season})

(def seatNumber
  {:db/ident             :schema/seatNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The location of the reserved seat (e.g., 27).",
   :rdfs/label           "seatNumber",
   :schema/domainIncludes :schema/Seat,
   :schema/rangeIncludes :schema/Text})

(def seatRow
  {:db/ident             :schema/seatRow,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The row location of the reserved seat (e.g., B).",
   :rdfs/label           "seatRow",
   :schema/domainIncludes :schema/Seat,
   :schema/rangeIncludes :schema/Text})

(def seatSection
  {:db/ident :schema/seatSection,
   :rdf/type :rdf/Property,
   :rdfs/comment "The section location of the reserved seat (e.g. Orchestra).",
   :rdfs/label "seatSection",
   :schema/domainIncludes :schema/Seat,
   :schema/rangeIncludes :schema/Text})

(def seatingCapacity
  {:db/ident :schema/seatingCapacity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of persons that can be seated (e.g. in a vehicle), both in terms of the physical space available, and in terms of limitations set by law.\\n\\nTypical unit code(s): C62 for persons.",
   :rdfs/label "seatingCapacity",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def seatingType
  {:db/ident             :schema/seatingType,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The type/class of the seat.",
   :rdfs/label           "seatingType",
   :schema/domainIncludes :schema/Seat,
   :schema/rangeIncludes #{:schema/Text :schema/QualitativeValue}})

(def secondaryPrevention
  {:db/ident :schema/secondaryPrevention,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A preventative therapy used to prevent reoccurrence of the medical condition after an initial episode of the condition.",
   :rdfs/label "secondaryPrevention",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTherapy})

(def securityClearanceRequirement
  {:db/ident :schema/securityClearanceRequirement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of any security clearance requirements of the job.",
   :rdfs/label "securityClearanceRequirement",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2384"}})

(def securityScreening
  {:db/ident :schema/securityScreening,
   :rdf/type :rdf/Property,
   :rdfs/comment "The type of security screening the passenger is subject to.",
   :rdfs/label "securityScreening",
   :schema/domainIncludes :schema/FlightReservation,
   :schema/rangeIncludes :schema/Text})

(def seeks
  {:db/ident :schema/seeks,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A pointer to products or services sought by the organization or person (demand).",
   :rdfs/label "seeks",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Demand})

(def seller
  {:db/ident :schema/seller,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An entity which offers (sells / leases / lends / loans) the services / goods.  A seller may also be a provider.",
   :rdfs/label "seller",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes #{:schema/BuyAction :schema/Order :schema/Demand
                            :schema/Offer :schema/Flight},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def sender
  {:db/ident :schema/sender,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of participant. The participant who is at the sending end of the action.",
   :rdfs/label "sender",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes #{:schema/ReceiveAction :schema/Message},
   :schema/rangeIncludes #{:schema/Audience :schema/Organization
                           :schema/Person}})

(def sensoryRequirement
  {:db/ident :schema/sensoryRequirement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of any sensory requirements and levels necessary to function on the job, including hearing and vision. Defined terms such as those in O*net may be used, but note that there is no way to specify the level of ability as well as its nature when using a defined term.",
   :rdfs/label "sensoryRequirement",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2384"}})

(def sensoryUnit
  {:db/ident :schema/sensoryUnit,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The neurological pathway extension that inputs and sends information to the brain or spinal cord.",
   :rdfs/label "sensoryUnit",
   :schema/domainIncludes :schema/Nerve,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/SuperficialAnatomy
                           :schema/AnatomicalStructure}})

(def serialNumber
  {:db/ident :schema/serialNumber,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The serial number or any alphanumeric identifier of a particular product. When attached to an offer, it is a shortcut for the serial number of the product included in the offer.",
   :rdfs/label "serialNumber",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/IndividualProduct :schema/Demand
                            :schema/Offer},
   :schema/rangeIncludes :schema/Text})

(def seriousAdverseOutcome
  {:db/ident :schema/seriousAdverseOutcome,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A possible serious complication and/or serious side effect of this therapy. Serious adverse outcomes include those that are life-threatening; result in death, disability, or permanent damage; require hospitalization or prolong existing hospitalization; cause congenital anomalies or birth defects; or jeopardize the patient and may require medical or surgical intervention to prevent one of the outcomes in this definition.",
   :rdfs/label "seriousAdverseOutcome",
   :schema/domainIncludes #{:schema/MedicalTherapy :schema/MedicalDevice},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalEntity})

(def serverStatus
  {:db/ident             :schema/serverStatus,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Status of a game server.",
   :rdfs/label           "serverStatus",
   :schema/domainIncludes :schema/GameServer,
   :schema/rangeIncludes :schema/GameServerStatus})

(def servesCuisine
  {:db/ident             :schema/servesCuisine,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The cuisine of the restaurant.",
   :rdfs/label           "servesCuisine",
   :schema/domainIncludes :schema/FoodEstablishment,
   :schema/rangeIncludes :schema/Text})

(def serviceArea
  {:db/ident            :schema/serviceArea,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "The geographic area where the service is provided.",
   :rdfs/label          "serviceArea",
   :schema/domainIncludes #{:schema/ContactPoint :schema/Organization
                            :schema/Service},
   :schema/rangeIncludes #{:schema/Place :schema/AdministrativeArea
                           :schema/GeoShape},
   :schema/supersededBy :schema/areaServed})

(def serviceAudience
  {:db/ident            :schema/serviceAudience,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "The audience eligible for this service.",
   :rdfs/label          "serviceAudience",
   :schema/domainIncludes :schema/Service,
   :schema/rangeIncludes :schema/Audience,
   :schema/supersededBy :schema/audience})

(def serviceLocation
  {:db/ident :schema/serviceLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The location (e.g. civic structure, local business, etc.) where a person can go to access the service.",
   :rdfs/label "serviceLocation",
   :schema/domainIncludes :schema/ServiceChannel,
   :schema/rangeIncludes :schema/Place})

(def serviceOperator
  {:db/ident :schema/serviceOperator,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The operating organization, if different from the provider.  This enables the representation of services that are provided by an organization, but operated by another organization like a subcontractor.",
   :rdfs/label "serviceOperator",
   :schema/domainIncludes :schema/GovernmentService,
   :schema/rangeIncludes :schema/Organization})

(def serviceOutput
  {:db/ident :schema/serviceOutput,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The tangible thing generated by the service, e.g. a passport, permit, etc.",
   :rdfs/label "serviceOutput",
   :schema/domainIncludes :schema/Service,
   :schema/rangeIncludes :schema/Thing})

(def servicePhone
  {:db/ident             :schema/servicePhone,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The phone number to use to access the service.",
   :rdfs/label           "servicePhone",
   :schema/domainIncludes :schema/ServiceChannel,
   :schema/rangeIncludes :schema/ContactPoint})

(def servicePostalAddress
  {:db/ident             :schema/servicePostalAddress,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The address for accessing the service by mail.",
   :rdfs/label           "servicePostalAddress",
   :schema/domainIncludes :schema/ServiceChannel,
   :schema/rangeIncludes :schema/PostalAddress})

(def serviceSmsNumber
  {:db/ident             :schema/serviceSmsNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number to access the service by text message.",
   :rdfs/label           "serviceSmsNumber",
   :schema/domainIncludes :schema/ServiceChannel,
   :schema/rangeIncludes :schema/ContactPoint})

(def serviceType
  {:db/ident :schema/serviceType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of service being offered, e.g. veterans' benefits, emergency relief, etc.",
   :rdfs/label "serviceType",
   :schema/domainIncludes :schema/Service,
   :schema/rangeIncludes #{:schema/GovernmentBenefitsType :schema/Text}})

(def serviceUrl
  {:db/ident             :schema/serviceUrl,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The website to access the service.",
   :rdfs/label           "serviceUrl",
   :schema/domainIncludes :schema/ServiceChannel,
   :schema/rangeIncludes :schema/URL})

(def servingSize
  {:db/ident :schema/servingSize,
   :rdf/type :rdf/Property,
   :rdfs/comment "The serving size, in terms of the number of volume or mass.",
   :rdfs/label "servingSize",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Text})

(def sha256
  {:db/ident :schema/sha256,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The [SHA-2](https://en.wikipedia.org/wiki/SHA-2) SHA256 hash of the content of the item. For example, a zero-length input has value 'e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855'.",
   :rdfs/label "sha256",
   :rdfs/subPropertyOf :schema/description,
   :schema/domainIncludes :schema/MediaObject,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2450"}})

(def sharedContent
  {:db/ident :schema/sharedContent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A CreativeWork such as an image, video, or audio clip shared as part of this posting.",
   :rdfs/label "sharedContent",
   :schema/domainIncludes #{:schema/SocialMediaPosting :schema/Comment},
   :schema/rangeIncludes :schema/CreativeWork})

(def shippingDestination
  {:db/ident :schema/shippingDestination,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "indicates (possibly multiple) shipping destinations. These can be defined in several ways, e.g. postalCode ranges.",
   :rdfs/label "shippingDestination",
   :schema/domainIncludes #{:schema/OfferShippingDetails
                            :schema/ShippingRateSettings
                            :schema/DeliveryTimeSettings},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/DefinedRegion,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def shippingDetails
  {:db/ident :schema/shippingDetails,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates information about the shipping policies and options associated with an [[Offer]].",
   :rdfs/label "shippingDetails",
   :schema/domainIncludes :schema/Offer,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/OfferShippingDetails,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def shippingLabel
  {:db/ident :schema/shippingLabel,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Label to match an [[OfferShippingDetails]] with a [[ShippingRateSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).",
   :rdfs/label "shippingLabel",
   :schema/domainIncludes #{:schema/OfferShippingDetails
                            :schema/ShippingRateSettings},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def shippingOrigin
  {:db/ident :schema/shippingOrigin,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the origin of a shipment, i.e. where it should be coming from.",
   :rdfs/label "shippingOrigin",
   :schema/domainIncludes :schema/OfferShippingDetails,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/DefinedRegion,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3122"}})

(def shippingRate
  {:db/ident :schema/shippingRate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The shipping rate is the cost of shipping to the specified destination. Typically, the maxValue and currency values (of the [[MonetaryAmount]]) are most appropriate.",
   :rdfs/label "shippingRate",
   :schema/domainIncludes #{:schema/OfferShippingDetails
                            :schema/ShippingRateSettings},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmount,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def shippingSettingsLink
  {:db/ident :schema/shippingSettingsLink,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Link to a page containing [[ShippingRateSettings]] and [[DeliveryTimeSettings]] details.",
   :rdfs/label "shippingSettingsLink",
   :schema/domainIncludes :schema/OfferShippingDetails,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/URL,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def sibling
  {:db/ident             :schema/sibling,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A sibling of the person.",
   :rdfs/label           "sibling",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person})

(def siblings
  {:db/ident            :schema/siblings,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "A sibling of the person.",
   :rdfs/label          "siblings",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person,
   :schema/supersededBy :schema/sibling})

(def signDetected
  {:db/ident             :schema/signDetected,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A sign detected by the test.",
   :rdfs/label           "signDetected",
   :schema/domainIncludes :schema/MedicalTest,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalSign})

(def signOrSymptom
  {:db/ident :schema/signOrSymptom,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sign or symptom of this condition. Signs are objective or physically observable manifestations of the medical condition while symptoms are the subjective experience of the medical condition.",
   :rdfs/label "signOrSymptom",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalSignOrSymptom})

(def significance
  {:db/ident :schema/significance,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The significance associated with the superficial anatomy; as an example, how characteristics of the superficial anatomy can suggest underlying medical conditions or courses of treatment.",
   :rdfs/label "significance",
   :schema/domainIncludes :schema/SuperficialAnatomy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def significantLink
  {:db/ident :schema/significantLink,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "One of the more significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.",
   :rdfs/label "significantLink",
   :schema/domainIncludes :schema/WebPage,
   :schema/rangeIncludes :schema/URL})

(def significantLinks
  {:db/ident :schema/significantLinks,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The most significant URLs on the page. Typically, these are the non-navigation links that are clicked on the most.",
   :rdfs/label "significantLinks",
   :schema/domainIncludes :schema/WebPage,
   :schema/rangeIncludes :schema/URL,
   :schema/supersededBy :schema/significantLink})

(def size
  {:db/ident :schema/size,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A standardized size of a product or creative work, specified either through a simple textual string (for example 'XL', '32Wx34L'), a  QuantitativeValue with a unitCode, or a comprehensive and structured [[SizeSpecification]]; in other cases, the [[width]], [[height]], [[depth]] and [[weight]] properties may be more applicable. ",
   :rdfs/label "size",
   :schema/domainIncludes #{:schema/Product :schema/CreativeWork},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/SizeSpecification
                           :schema/QuantitativeValue :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1797"}})

(def sizeGroup
  {:db/ident :schema/sizeGroup,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The size group (also known as \"size type\") for a product's size. Size groups are common in the fashion industry to define size segments and suggested audiences for wearable products. Multiple values can be combined, for example \"men's big and tall\", \"petite maternity\" or \"regular\".",
   :rdfs/label "sizeGroup",
   :schema/domainIncludes :schema/SizeSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/SizeGroupEnumeration :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def sizeSystem
  {:db/ident :schema/sizeSystem,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The size system used to identify a product's size. Typically either a standard (for example, \"GS1\" or \"ISO-EN13402\"), country code (for example \"US\" or \"JP\"), or a measuring system (for example \"Metric\" or \"Imperial\").",
   :rdfs/label "sizeSystem",
   :schema/domainIncludes :schema/SizeSpecification,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/SizeSystemEnumeration},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def skills
  {:db/ident :schema/skills,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A statement of knowledge, skill, ability, task or any other assertion expressing a competency that is desired or required to fulfill this role or to work in this occupation.",
   :rdfs/label "skills",
   :schema/domainIncludes #{:schema/Occupation :schema/JobPosting},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text},
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2322"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/1698"}}})

(def sku
  {:db/ident :schema/sku,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Stock Keeping Unit (SKU), i.e. a merchant-specific identifier for a product or service, or the product to which the offer refers.",
   :rdfs/label "sku",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Product :schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/Text})

(def slogan
  {:db/ident             :schema/slogan,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A slogan or motto associated with the item.",
   :rdfs/label           "slogan",
   :schema/domainIncludes #{:schema/Place :schema/Product :schema/Brand
                            :schema/Organization :schema/Service},
   :schema/rangeIncludes :schema/Text})

(def smiles
  {:db/ident :schema/smiles,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A specification in form of a line notation for describing the structure of chemical species using short ASCII strings.  Double bond stereochemistry \\ indicators may need to be escaped in the string in formats where the backslash is an escape character.",
   :rdfs/label "smiles",
   :rdfs/subPropertyOf :schema/hasRepresentation,
   :schema/domainIncludes :schema/MolecularEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/MolecularEntity"}})

(def smokingAllowed
  {:db/ident :schema/smokingAllowed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether it is allowed to smoke in the place, e.g. in the restaurant, hotel or hotel room.",
   :rdfs/label "smokingAllowed",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes :schema/Boolean})

(def sodiumContent
  {:db/ident             :schema/sodiumContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of milligrams of sodium.",
   :rdfs/label           "sodiumContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def softwareAddOn
  {:db/ident             :schema/softwareAddOn,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Additional content for a software application.",
   :rdfs/label           "softwareAddOn",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/SoftwareApplication})

(def softwareHelp
  {:db/ident             :schema/softwareHelp,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Software application help.",
   :rdfs/label           "softwareHelp",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/CreativeWork})

(def softwareRequirements
  {:db/ident :schema/softwareRequirements,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Component dependency requirements for application. This includes runtime environments and shared libraries that are not included in the application distribution package, but required to run the application (examples: DirectX, Java or .NET runtime).",
   :rdfs/label "softwareRequirements",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def softwareVersion
  {:db/ident             :schema/softwareVersion,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Version of the software instance.",
   :rdfs/label           "softwareVersion",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/Text})

(def sourceOrganization
  {:db/ident :schema/sourceOrganization,
   :rdf/type :rdf/Property,
   :rdfs/comment "The Organization on whose behalf the creator was working.",
   :rdfs/label "sourceOrganization",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Organization})

(def sourcedFrom
  {:db/ident :schema/sourcedFrom,
   :rdf/type :rdf/Property,
   :rdfs/comment "The neurological pathway that originates the neurons.",
   :rdfs/label "sourcedFrom",
   :schema/domainIncludes :schema/Nerve,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/BrainStructure})

(def spatial
  {:db/ident :schema/spatial,
   :owl/equivalentProperty :dcterms/spatial,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The \"spatial\" property can be used in cases when more specific properties\n(e.g. [[locationCreated]], [[spatialCoverage]], [[contentLocation]]) are not known to be appropriate.",
   :rdfs/label "spatial",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Place})

(def spatialCoverage
  {:db/ident :schema/spatialCoverage,
   :owl/equivalentProperty :dcterms/spatial,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The spatialCoverage of a CreativeWork indicates the place(s) which are the focus of the content. It is a subproperty of\n      contentLocation intended primarily for more technical and detailed materials. For example with a Dataset, it indicates\n      areas that the dataset describes: a dataset of New York weather would have spatialCoverage which was the place: the state of New York.",
   :rdfs/label "spatialCoverage",
   :rdfs/subPropertyOf :schema/contentLocation,
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Place})

(def speakable
  {:db/ident :schema/speakable,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates sections of a Web page that are particularly 'speakable' in the sense of being highlighted as being especially appropriate for text-to-speech conversion. Other sections of a page may also be usefully spoken in particular circumstances; the 'speakable' property serves to indicate the parts most likely to be generally useful for speech.\n\nThe *speakable* property can be repeated an arbitrary number of times, with three kinds of possible 'content-locator' values:\n\n1.) *id-value* URL references - uses *id-value* of an element in the page being annotated. The simplest use of *speakable* has (potentially relative) URL values, referencing identified sections of the document concerned.\n\n2.) CSS Selectors - addresses content in the annotated page, e.g. via class attribute. Use the [[cssSelector]] property.\n\n3.)  XPaths - addresses content via XPaths (assuming an XML view of the content). Use the [[xpath]] property.\n\n\nFor more sophisticated markup of speakable sections beyond simple ID references, either CSS selectors or XPath expressions to pick out document section(s) as speakable. For this\nwe define a supporting type, [[SpeakableSpecification]]  which is defined to be a possible value of the *speakable* property.\n         ",
   :rdfs/label "speakable",
   :schema/domainIncludes #{:schema/WebPage :schema/Article},
   :schema/rangeIncludes #{:schema/SpeakableSpecification :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1389"}})

(def specialCommitments
  {:db/ident :schema/specialCommitments,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Any special commitments associated with this job posting. Valid entries include VeteranCommit, MilitarySpouseCommit, etc.",
   :rdfs/label "specialCommitments",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Text})

(def specialOpeningHoursSpecification
  {:db/ident :schema/specialOpeningHoursSpecification,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The special opening hours of a certain place.\\n\\nUse this to explicitly override general opening hours brought in scope by [[openingHoursSpecification]] or [[openingHours]].\n      ",
   :rdfs/label "specialOpeningHoursSpecification",
   :schema/domainIncludes :schema/Place,
   :schema/rangeIncludes :schema/OpeningHoursSpecification})

(def specialty
  {:db/ident :schema/specialty,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "One of the domain specialities to which this web page's content applies.",
   :rdfs/label "specialty",
   :schema/domainIncludes :schema/WebPage,
   :schema/rangeIncludes :schema/Specialty})

(def speechToTextMarkup
  {:db/ident :schema/speechToTextMarkup,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Form of markup used. eg. [SSML](https://www.w3.org/TR/speech-synthesis11) or [IPA](https://www.wikidata.org/wiki/Property:P898).",
   :rdfs/label "speechToTextMarkup",
   :schema/domainIncludes :schema/PronounceableText,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2108"}})

(def speed
  {:db/ident :schema/speed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The speed range of the vehicle. If the vehicle is powered by an engine, the upper limit of the speed range (indicated by [[maxValue]]) should be the maximum speed achievable under regular conditions.\\n\\nTypical unit code(s): KMH for km/h, HM for mile per hour (0.447 04 m/s), KNT for knot\\n\\n*Note 1: Use [[minValue]] and [[maxValue]] to indicate the range. Typically, the minimal value is zero.\\n* Note 2: There are many different ways of measuring the speed range. You can link to information about how the given value has been determined using the [[valueReference]] property.",
   :rdfs/label "speed",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def spokenByCharacter
  {:db/ident :schema/spokenByCharacter,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The (e.g. fictional) character, Person or Organization to whom the quotation is attributed within the containing CreativeWork.",
   :rdfs/label "spokenByCharacter",
   :schema/domainIncludes :schema/Quotation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/271"}})

(def sponsor
  {:db/ident :schema/sponsor,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A person or organization that supports a thing through a pledge, promise, or financial contribution. E.g. a sponsor of a Medical Study or a corporate sponsor of an event.",
   :rdfs/label "sponsor",
   :schema/domainIncludes #{:schema/CreativeWork :schema/Grant :schema/Event
                            :schema/Organization :schema/MedicalStudy
                            :schema/Person},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def sport
  {:db/ident :schema/sport,
   :rdf/type :rdf/Property,
   :rdfs/comment "A type of sport (e.g. Baseball).",
   :rdfs/label "sport",
   :schema/domainIncludes #{:schema/SportsOrganization :schema/SportsEvent},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1951"}})

(def sportsActivityLocation
  {:db/ident :schema/sportsActivityLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of location. The sports activity location where this action occurred.",
   :rdfs/label "sportsActivityLocation",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/ExerciseAction,
   :schema/rangeIncludes :schema/SportsActivityLocation})

(def sportsEvent
  {:db/ident :schema/sportsEvent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of location. The sports event where this action occurred.",
   :rdfs/label "sportsEvent",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/ExerciseAction,
   :schema/rangeIncludes :schema/SportsEvent})

(def sportsTeam
  {:db/ident :schema/sportsTeam,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of participant. The sports team that participated on this action.",
   :rdfs/label "sportsTeam",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/ExerciseAction,
   :schema/rangeIncludes :schema/SportsTeam})

(def spouse
  {:db/ident             :schema/spouse,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The person's spouse.",
   :rdfs/label           "spouse",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Person})

(def stage
  {:db/ident             :schema/stage,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The stage of the condition, if applicable.",
   :rdfs/label           "stage",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalConditionStage})

(def stageAsNumber
  {:db/ident             :schema/stageAsNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The stage represented as a number, e.g. 3.",
   :rdfs/label           "stageAsNumber",
   :schema/domainIncludes :schema/MedicalConditionStage,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Number})

(def starRating
  {:db/ident :schema/starRating,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An official rating for a lodging business or food establishment, e.g. from national associations or standards bodies. Use the author property to indicate the rating organization, e.g. as an Organization with name such as (e.g. HOTREC, DEHOGA, WHR, or Hotelstars).",
   :rdfs/label "starRating",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes #{:schema/LodgingBusiness :schema/FoodEstablishment},
   :schema/rangeIncludes :schema/Rating})

(def startDate
  {:db/ident :schema/startDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The start date and time of the item (in [ISO 8601 date format](http://en.wikipedia.org/wiki/ISO_8601)).",
   :rdfs/label "startDate",
   :schema/domainIncludes
   #{:schema/MerchantReturnPolicySeasonalOverride
     :schema/EducationalOccupationalProgram :schema/CreativeWorkSeason
     :schema/DatedMoneySpecification :schema/Event :schema/CreativeWorkSeries
     :schema/Role :schema/Schedule},
   :schema/rangeIncludes #{:schema/Date :schema/DateTime},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2486"}})

(def startOffset
  {:db/ident :schema/startOffset,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The start time of the clip expressed as the number of seconds from the beginning of the work.",
   :rdfs/label "startOffset",
   :schema/domainIncludes #{:schema/SeekToAction :schema/Clip},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/HyperTocEntry :schema/Number},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2021"}})

(def startTime
  {:db/ident :schema/startTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The startTime of something. For a reserved event or service (e.g. FoodEstablishmentReservation), the time that it is expected to start. For actions that span a period of time, when the action was performed. E.g. John wrote a book from *January* to December. For media, including audio and video, it's the time offset of the start of a clip within a larger file.\\n\\nNote that Event uses startDate/endDate instead of startTime/endTime, even when describing dates with times. This situation may be clarified in future revisions.",
   :rdfs/label "startTime",
   :schema/domainIncludes #{:schema/MediaObject :schema/InteractionCounter
                            :schema/FoodEstablishmentReservation :schema/Action
                            :schema/Schedule},
   :schema/rangeIncludes #{:schema/Time :schema/DateTime},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2493"}})

(def statType
  {:db/ident :schema/statType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the kind of statistic represented by a [[StatisticalVariable]], e.g. mean, count etc. The value of statType is a property, either from within Schema.org (e.g. [[count]], [[median]], [[marginOfError]], [[maxValue]], [[minValue]]) or from other compatible (e.g. RDF) systems such as DataCommons.org or Wikidata.org. ",
   :rdfs/label "statType",
   :schema/domainIncludes :schema/StatisticalVariable,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Property :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2564"}})

(def status
  {:db/ident             :schema/status,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The status of the study (enumerated).",
   :rdfs/label           "status",
   :schema/domainIncludes #{:schema/MedicalProcedure :schema/MedicalCondition
                            :schema/MedicalStudy},
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/EventStatusType :schema/MedicalStudyStatus
                           :schema/Text}})

(def steeringPosition
  {:db/ident :schema/steeringPosition,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The position of the steering wheel or similar device (mostly for cars).",
   :rdfs/label "steeringPosition",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/SteeringPositionValue})

(def step
  {:db/ident :schema/step,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A single step item (as HowToStep, text, document, video, etc.) or a HowToSection.",
   :rdfs/label "step",
   :schema/domainIncludes :schema/HowTo,
   :schema/rangeIncludes #{:schema/CreativeWork :schema/HowToSection
                           :schema/HowToStep :schema/Text}})

(def stepValue
  {:db/ident :schema/stepValue,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The stepValue attribute indicates the granularity that is expected (and required) of the value in a PropertyValueSpecification.",
   :rdfs/label "stepValue",
   :schema/domainIncludes :schema/PropertyValueSpecification,
   :schema/rangeIncludes :schema/Number})

(def steps
  {:db/ident :schema/steps,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A single step item (as HowToStep, text, document, video, etc.) or a HowToSection (originally misnamed 'steps'; 'step' is preferred).",
   :rdfs/label "steps",
   :schema/domainIncludes #{:schema/HowToSection :schema/HowTo},
   :schema/rangeIncludes #{:schema/ItemList :schema/CreativeWork :schema/Text},
   :schema/supersededBy :schema/step})

(def storageRequirements
  {:db/ident             :schema/storageRequirements,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Storage requirements (free space required).",
   :rdfs/label           "storageRequirements",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def streetAddress
  {:db/ident :schema/streetAddress,
   :rdf/type :rdf/Property,
   :rdfs/comment "The street address. For example, 1600 Amphitheatre Pkwy.",
   :rdfs/label "streetAddress",
   :schema/domainIncludes :schema/PostalAddress,
   :schema/rangeIncludes :schema/Text})

(def strengthUnit
  {:db/ident :schema/strengthUnit,
   :rdf/type :rdf/Property,
   :rdfs/comment "The units of an active ingredient's strength, e.g. mg.",
   :rdfs/label "strengthUnit",
   :schema/domainIncludes :schema/DrugStrength,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def strengthValue
  {:db/ident :schema/strengthValue,
   :rdf/type :rdf/Property,
   :rdfs/comment "The value of an active ingredient's strength, e.g. 325.",
   :rdfs/label "strengthValue",
   :schema/domainIncludes :schema/DrugStrength,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Number})

(def structuralClass
  {:db/ident :schema/structuralClass,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The name given to how bone physically connects to each other.",
   :rdfs/label "structuralClass",
   :schema/domainIncludes :schema/Joint,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def study
  {:db/ident             :schema/study,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A medical study or trial related to this entity.",
   :rdfs/label           "study",
   :schema/domainIncludes :schema/MedicalEntity,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalStudy})

(def studyDesign
  {:db/ident :schema/studyDesign,
   :rdf/type :rdf/Property,
   :rdfs/comment "Specifics about the observational study design (enumerated).",
   :rdfs/label "studyDesign",
   :schema/domainIncludes :schema/MedicalObservationalStudy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalObservationalStudyDesign})

(def studyLocation
  {:db/ident :schema/studyLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment "The location in which the study is taking/took place.",
   :rdfs/label "studyLocation",
   :schema/domainIncludes :schema/MedicalStudy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AdministrativeArea})

(def studySubject
  {:db/ident :schema/studySubject,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A subject of the study, i.e. one of the medical conditions, therapies, devices, drugs, etc. investigated by the study.",
   :rdfs/label "studySubject",
   :schema/domainIncludes :schema/MedicalStudy,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalEntity})

(def subEvent
  {:db/ident :schema/subEvent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An Event that is part of this event. For example, a conference event includes many presentations, each of which is a subEvent of the conference.",
   :rdfs/label "subEvent",
   :schema/domainIncludes :schema/Event,
   :schema/inverseOf :schema/superEvent,
   :schema/rangeIncludes :schema/Event})

(def subEvents
  {:db/ident :schema/subEvents,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Events that are a part of this event. For example, a conference event includes many presentations, each subEvents of the conference.",
   :rdfs/label "subEvents",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes :schema/Event,
   :schema/supersededBy :schema/subEvent})

(def subOrganization
  {:db/ident :schema/subOrganization,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A relationship between two organizations where the first includes the second, e.g., as a subsidiary. See also: the more specific 'department' property.",
   :rdfs/label "subOrganization",
   :schema/domainIncludes :schema/Organization,
   :schema/inverseOf :schema/parentOrganization,
   :schema/rangeIncludes :schema/Organization})

(def subReservation
  {:db/ident :schema/subReservation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The individual reservations included in the package. Typically a repeated property.",
   :rdfs/label "subReservation",
   :schema/domainIncludes :schema/ReservationPackage,
   :schema/rangeIncludes :schema/Reservation})

(def subStageSuffix
  {:db/ident             :schema/subStageSuffix,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The substage, e.g. 'a' for Stage IIIa.",
   :rdfs/label           "subStageSuffix",
   :schema/domainIncludes :schema/MedicalConditionStage,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def subStructure
  {:db/ident :schema/subStructure,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Component (sub-)structure(s) that comprise this anatomical structure.",
   :rdfs/label "subStructure",
   :schema/domainIncludes :schema/AnatomicalStructure,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AnatomicalStructure})

(def subTest
  {:db/ident             :schema/subTest,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A component test of the panel.",
   :rdfs/label           "subTest",
   :schema/domainIncludes :schema/MedicalTestPanel,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTest})

(def subTrip
  {:db/ident :schema/subTrip,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Identifies a [[Trip]] that is a subTrip of this Trip.  For example Day 1, Day 2, etc. of a multi-day trip.",
   :rdfs/label "subTrip",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/Tourism"},
   :schema/domainIncludes :schema/Trip,
   :schema/inverseOf :schema/partOfTrip,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Trip,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1810"}})

(def subjectOf
  {:db/ident :schema/subjectOf,
   :rdf/type :rdf/Property,
   :rdfs/comment "A CreativeWork or Event about this Thing.",
   :rdfs/label "subjectOf",
   :schema/domainIncludes :schema/Thing,
   :schema/inverseOf :schema/about,
   :schema/rangeIncludes #{:schema/CreativeWork :schema/Event},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1670"}})

(def subtitleLanguage
  {:db/ident :schema/subtitleLanguage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Languages in which subtitles/captions are available, in [IETF BCP 47 standard format](http://tools.ietf.org/html/bcp47).",
   :rdfs/label "subtitleLanguage",
   :schema/domainIncludes #{:schema/TVEpisode :schema/Movie
                            :schema/BroadcastEvent :schema/ScreeningEvent},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/Language},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2110"}})

(def successorOf
  {:db/ident :schema/successorOf,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A pointer from a newer variant of a product  to its previous, often discontinued predecessor.",
   :rdfs/label "successorOf",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/ProductModel,
   :schema/rangeIncludes :schema/ProductModel})

(def sugarContent
  {:db/ident             :schema/sugarContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of grams of sugar.",
   :rdfs/label           "sugarContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def suggestedAge
  {:db/ident :schema/suggestedAge,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The age or age range for the intended audience or person, for example 3-12 months for infants, 1-5 years for toddlers.",
   :rdfs/label "suggestedAge",
   :schema/domainIncludes #{:schema/SizeSpecification :schema/PeopleAudience},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def suggestedAnswer
  {:db/ident :schema/suggestedAnswer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An answer (possibly one of several, possibly incorrect) to a Question, e.g. on a Question/Answer site.",
   :rdfs/label "suggestedAnswer",
   :schema/domainIncludes :schema/Question,
   :schema/rangeIncludes #{:schema/ItemList :schema/Answer}})

(def suggestedGender
  {:db/ident :schema/suggestedGender,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The suggested gender of the intended person or audience, for example \"male\", \"female\", or \"unisex\".",
   :rdfs/label "suggestedGender",
   :schema/domainIncludes #{:schema/SizeSpecification :schema/PeopleAudience},
   :schema/rangeIncludes #{:schema/GenderType :schema/Text}})

(def suggestedMaxAge
  {:db/ident :schema/suggestedMaxAge,
   :rdf/type :rdf/Property,
   :rdfs/comment "Maximum recommended age in years for the audience or user.",
   :rdfs/label "suggestedMaxAge",
   :schema/domainIncludes :schema/PeopleAudience,
   :schema/rangeIncludes :schema/Number})

(def suggestedMeasurement
  {:db/ident :schema/suggestedMeasurement,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A suggested range of body measurements for the intended audience or person, for example inseam between 32 and 34 inches or height between 170 and 190 cm. Typically found on a size chart for wearable products.",
   :rdfs/label "suggestedMeasurement",
   :schema/domainIncludes #{:schema/SizeSpecification :schema/PeopleAudience},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2811"}})

(def suggestedMinAge
  {:db/ident :schema/suggestedMinAge,
   :rdf/type :rdf/Property,
   :rdfs/comment "Minimum recommended age in years for the audience or user.",
   :rdfs/label "suggestedMinAge",
   :schema/domainIncludes :schema/PeopleAudience,
   :schema/rangeIncludes :schema/Number})

(def suitableForDiet
  {:db/ident :schema/suitableForDiet,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates a dietary restriction or guideline for which this recipe or menu item is suitable, e.g. diabetic, halal etc.",
   :rdfs/label "suitableForDiet",
   :schema/domainIncludes #{:schema/MenuItem :schema/Recipe},
   :schema/rangeIncludes :schema/RestrictedDiet})

(def superEvent
  {:db/ident :schema/superEvent,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An event that this event is a part of. For example, a collection of individual music performances might each have a music festival as their superEvent.",
   :rdfs/label "superEvent",
   :schema/domainIncludes :schema/Event,
   :schema/inverseOf :schema/subEvent,
   :schema/rangeIncludes :schema/Event})

(def supersededBy
  {:db/ident :schema/supersededBy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Relates a term (i.e. a property, class or enumeration) to one that supersedes it.",
   :rdfs/label "supersededBy",
   :schema/domainIncludes #{:schema/Enumeration :schema/Property :schema/Class},
   :schema/isPartOf {:xsd/anyURI "http://meta.schema.org"},
   :schema/rangeIncludes #{:schema/Enumeration :schema/Property :schema/Class}})

(def supply
  {:db/ident :schema/supply,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub-property of instrument. A supply consumed when performing instructions or a direction.",
   :rdfs/label "supply",
   :rdfs/subPropertyOf :schema/instrument,
   :schema/domainIncludes #{:schema/HowToDirection :schema/HowTo},
   :schema/rangeIncludes #{:schema/HowToSupply :schema/Text}})

(def supplyTo
  {:db/ident             :schema/supplyTo,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The area to which the artery supplies blood.",
   :rdfs/label           "supplyTo",
   :schema/domainIncludes :schema/Artery,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AnatomicalStructure})

(def supportingData
  {:db/ident             :schema/supportingData,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Supporting data for a SoftwareApplication.",
   :rdfs/label           "supportingData",
   :schema/domainIncludes :schema/SoftwareApplication,
   :schema/rangeIncludes :schema/DataFeed})

(def surface
  {:db/ident :schema/surface,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A material used as a surface in some artwork, e.g. Canvas, Paper, Wood, Board, etc.",
   :rdfs/label "surface",
   :rdfs/subPropertyOf :schema/material,
   :schema/domainIncludes :schema/VisualArtwork,
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/supersededBy :schema/artworkSurface})

(def syllabusSections
  {:db/ident :schema/syllabusSections,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates (typically several) Syllabus entities that lay out what each section of the overall course will cover.",
   :rdfs/label "syllabusSections",
   :schema/domainIncludes :schema/Course,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Syllabus,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3281"}})

(def target
  {:db/ident :schema/target,
   :rdf/type :rdf/Property,
   :rdfs/comment "Indicates a target EntryPoint, or url, for an Action.",
   :rdfs/label "target",
   :schema/domainIncludes :schema/Action,
   :schema/rangeIncludes #{:schema/EntryPoint :schema/URL}})

(def targetCollection
  {:db/ident :schema/targetCollection,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of object. The collection target of the action.",
   :rdfs/label "targetCollection",
   :rdfs/subPropertyOf :schema/object,
   :schema/domainIncludes :schema/UpdateAction,
   :schema/rangeIncludes :schema/Thing})

(def targetDescription
  {:db/ident :schema/targetDescription,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The description of a node in an established educational framework.",
   :rdfs/label "targetDescription",
   :schema/domainIncludes :schema/AlignmentObject,
   :schema/rangeIncludes :schema/Text})

(def targetName
  {:db/ident :schema/targetName,
   :rdf/type :rdf/Property,
   :rdfs/comment "The name of a node in an established educational framework.",
   :rdfs/label "targetName",
   :schema/domainIncludes :schema/AlignmentObject,
   :schema/rangeIncludes :schema/Text})

(def targetPlatform
  {:db/ident :schema/targetPlatform,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Type of app development: phone, Metro style, desktop, XBox, etc.",
   :rdfs/label "targetPlatform",
   :schema/domainIncludes :schema/APIReference,
   :schema/rangeIncludes :schema/Text})

(def targetPopulation
  {:db/ident :schema/targetPopulation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Characteristics of the population for which this is intended, or which typically uses it, e.g. 'adults'.",
   :rdfs/label "targetPopulation",
   :schema/domainIncludes #{:schema/DoseSchedule :schema/DietarySupplement},
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def targetProduct
  {:db/ident :schema/targetProduct,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Target Operating System / Product to which the code applies.  If applies to several versions, just the product name can be used.",
   :rdfs/label "targetProduct",
   :schema/domainIncludes :schema/SoftwareSourceCode,
   :schema/rangeIncludes :schema/SoftwareApplication})

(def targetUrl
  {:db/ident :schema/targetUrl,
   :rdf/type :rdf/Property,
   :rdfs/comment "The URL of a node in an established educational framework.",
   :rdfs/label "targetUrl",
   :schema/domainIncludes :schema/AlignmentObject,
   :schema/rangeIncludes :schema/URL})

(def taxID
  {:db/ident :schema/taxID,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Tax / Fiscal ID of the organization or person, e.g. the TIN in the US or the CIF/NIF in Spain.",
   :rdfs/label "taxID",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def taxonRank
  {:db/ident :schema/taxonRank,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The taxonomic rank of this taxon given preferably as a URI from a controlled vocabulary – typically the ranks from TDWG TaxonRank ontology or equivalent Wikidata URIs.",
   :rdfs/label "taxonRank",
   :schema/domainIncludes :schema/Taxon,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/PropertyValue :schema/Text :schema/URL},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org/Taxon"}})

(def taxonomicRange
  {:db/ident :schema/taxonomicRange,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The taxonomic grouping of the organism that expresses, encodes, or in some way related to the BioChemEntity.",
   :rdfs/label "taxonomicRange",
   :schema/domainIncludes :schema/BioChemEntity,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Taxon :schema/Text
                           :schema/URL},
   :schema/source {:xsd/anyURI "http://www.bioschemas.org"}})

(def teaches
  {:db/ident :schema/teaches,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The item being described is intended to help a person learn the competency or learning outcome defined by the referenced term.",
   :rdfs/label "teaches",
   :schema/domainIncludes #{:schema/LearningResource :schema/EducationEvent
                            :schema/CreativeWork},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2427"}})

(def telephone
  {:db/ident             :schema/telephone,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The telephone number.",
   :rdfs/label           "telephone",
   :schema/domainIncludes #{:schema/Place :schema/ContactPoint
                            :schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def temporal
  {:db/ident :schema/temporal,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The \"temporal\" property can be used in cases where more specific properties\n(e.g. [[temporalCoverage]], [[dateCreated]], [[dateModified]], [[datePublished]]) are not known to be appropriate.",
   :rdfs/label "temporal",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Text :schema/DateTime}})

(def temporalCoverage
  {:db/ident :schema/temporalCoverage,
   :owl/equivalentProperty :dcterms/temporal,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The temporalCoverage of a CreativeWork indicates the period that the content applies to, i.e. that it describes, either as a DateTime or as a textual string indicating a time period in [ISO 8601 time interval format](https://en.wikipedia.org/wiki/ISO_8601#Time_intervals). In\n      the case of a Dataset it will typically indicate the relevant time period in a precise notation (e.g. for a 2011 census dataset, the year 2011 would be written \"2011/2012\"). Other forms of content, e.g. ScholarlyArticle, Book, TVSeries or TVEpisode, may indicate their temporalCoverage in broader terms - textually or via well-known URL.\n      Written works such as books may sometimes have precise temporal coverage too, e.g. a work set in 1939 - 1945 can be indicated in ISO 8601 interval format format via \"1939/1945\".\n\nOpen-ended date ranges can be written with \"..\" in place of the end date. For example, \"2015-11/..\" indicates a range beginning in November 2015 and with no specified final date. This is tentative and might be updated in future when ISO 8601 is officially updated.",
   :rdfs/label "temporalCoverage",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Text :schema/DateTime :schema/URL}})

(def termCode
  {:db/ident :schema/termCode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A code that identifies this [[DefinedTerm]] within a [[DefinedTermSet]].",
   :rdfs/label "termCode",
   :schema/domainIncludes :schema/DefinedTerm,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/894"}})

(def termDuration
  {:db/ident :schema/termDuration,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The amount of time in a term as defined by the institution. A term is a length of time where students take one or more classes. Semesters and quarters are common units for term.",
   :rdfs/label "termDuration",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Duration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2419"}})

(def termsOfService
  {:db/ident :schema/termsOfService,
   :rdf/type :rdf/Property,
   :rdfs/comment "Human-readable terms of service documentation.",
   :rdfs/label "termsOfService",
   :schema/domainIncludes :schema/Service,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1423"}})

(def termsPerYear
  {:db/ident :schema/termsPerYear,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of times terms of study are offered per year. Semesters and quarters are common units for term. For example, if the student can only take 2 semesters for the program in one year, then termsPerYear should be 2.",
   :rdfs/label "termsPerYear",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2419"}})

(def text
  {:db/ident             :schema/text,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The textual content of this CreativeWork.",
   :rdfs/label           "text",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Text})

(def textValue
  {:db/ident :schema/textValue,
   :rdf/type :rdf/Property,
   :rdfs/comment "Text value being annotated.",
   :rdfs/label "textValue",
   :schema/domainIncludes :schema/PronounceableText,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2108"}})

(def thumbnail
  {:db/ident             :schema/thumbnail,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Thumbnail image for an image or video.",
   :rdfs/label           "thumbnail",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/ImageObject})

(def thumbnailUrl
  {:db/ident             :schema/thumbnailUrl,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A thumbnail image relevant to the Thing.",
   :rdfs/label           "thumbnailUrl",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/URL})

(def tickerSymbol
  {:db/ident :schema/tickerSymbol,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The exchange traded instrument associated with a Corporation object. The tickerSymbol is expressed as an exchange and an instrument name separated by a space character. For the exchange component of the tickerSymbol attribute, we recommend using the controlled vocabulary of Market Identifier Codes (MIC) specified in ISO 15022.",
   :rdfs/label "tickerSymbol",
   :schema/domainIncludes :schema/Corporation,
   :schema/rangeIncludes :schema/Text})

(def ticketNumber
  {:db/ident             :schema/ticketNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The unique identifier for the ticket.",
   :rdfs/label           "ticketNumber",
   :schema/domainIncludes :schema/Ticket,
   :schema/rangeIncludes :schema/Text})

(def ticketToken
  {:db/ident :schema/ticketToken,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Reference to an asset (e.g., Barcode, QR code image or PDF) usable for entrance.",
   :rdfs/label "ticketToken",
   :schema/domainIncludes :schema/Ticket,
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def ticketedSeat
  {:db/ident             :schema/ticketedSeat,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The seat associated with the ticket.",
   :rdfs/label           "ticketedSeat",
   :schema/domainIncludes :schema/Ticket,
   :schema/rangeIncludes :schema/Seat})

(def timeOfDay
  {:db/ident :schema/timeOfDay,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The time of day the program normally runs. For example, \"evenings\".",
   :rdfs/label "timeOfDay",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2419"}})

(def timeRequired
  {:db/ident :schema/timeRequired,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Approximate or typical time it usually takes to work with or through the content of this work for the typical or target audience.",
   :rdfs/label "timeRequired",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes :schema/Duration})

(def timeToComplete
  {:db/ident :schema/timeToComplete,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The expected length of time to complete the program if attending full-time.",
   :rdfs/label "timeToComplete",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Duration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2289"}})

(def tissueSample
  {:db/ident             :schema/tissueSample,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The type of tissue sample required for the test.",
   :rdfs/label           "tissueSample",
   :schema/domainIncludes :schema/PathologyTest,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def title
  {:db/ident             :schema/title,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The title of the job.",
   :rdfs/label           "title",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Text})

(def titleEIDR
  {:db/ident :schema/titleEIDR,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An [EIDR](https://eidr.org/) (Entertainment Identifier Registry) [[identifier]] representing at the most general/abstract level, a work of film or television.\n\nFor example, the motion picture known as \"Ghostbusters\" has a titleEIDR of  \"10.5240/7EC7-228A-510A-053E-CBB8-J\". This title (or work) may have several variants, which EIDR calls \"edits\". See [[editEIDR]].\n\nSince schema.org types like [[Movie]], [[TVEpisode]], [[TVSeason]], and [[TVSeries]] can be used for both works and their multiple expressions, it is possible to use [[titleEIDR]] alone (for a general description), or alongside [[editEIDR]] for a more edit-specific description.\n",
   :rdfs/label "titleEIDR",
   :rdfs/subPropertyOf :schema/identifier,
   :schema/domainIncludes #{:schema/TVSeries :schema/TVEpisode :schema/Movie
                            :schema/TVSeason},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2469"}})

(def toLocation
  {:db/ident :schema/toLocation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of location. The final location of the object or the agent after the action.",
   :rdfs/label "toLocation",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes #{:schema/MoveAction :schema/TransferAction
                            :schema/ExerciseAction :schema/InsertAction},
   :schema/rangeIncludes :schema/Place})

(def toRecipient
  {:db/ident :schema/toRecipient,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of recipient. The recipient who was directly sent the message.",
   :rdfs/label "toRecipient",
   :rdfs/subPropertyOf :schema/recipient,
   :schema/domainIncludes :schema/Message,
   :schema/rangeIncludes #{:schema/Audience :schema/ContactPoint
                           :schema/Organization :schema/Person}})

(def tocContinuation
  {:db/ident :schema/tocContinuation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A [[HyperTocEntry]] can have a [[tocContinuation]] indicated, which is another [[HyperTocEntry]] that would be the default next item to play or render.",
   :rdfs/label "tocContinuation",
   :schema/domainIncludes :schema/HyperTocEntry,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/HyperTocEntry,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2766"}})

(def tocEntry
  {:db/ident :schema/tocEntry,
   :rdf/type :rdf/Property,
   :rdfs/comment "Indicates a [[HyperTocEntry]] in a [[HyperToc]].",
   :rdfs/label "tocEntry",
   :rdfs/subPropertyOf :schema/hasPart,
   :schema/domainIncludes :schema/HyperToc,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/HyperTocEntry,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2766"}})

(def tongueWeight
  {:db/ident :schema/tongueWeight,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The permitted vertical load (TWR) of a trailer attached to the vehicle. Also referred to as Tongue Load Rating (TLR) or Vertical Load Rating (VLR).\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
   :rdfs/label "tongueWeight",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def tool
  {:db/ident :schema/tool,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A sub property of instrument. An object used (but not consumed) when performing instructions or a direction.",
   :rdfs/label "tool",
   :rdfs/subPropertyOf :schema/instrument,
   :schema/domainIncludes #{:schema/HowToDirection :schema/HowTo},
   :schema/rangeIncludes #{:schema/HowToTool :schema/Text}})

(def torque
  {:db/ident :schema/torque,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The torque (turning force) of the vehicle's engine.\\n\\nTypical unit code(s): NU for newton metre (N m), F17 for pound-force per foot, or F48 for pound-force per inch\\n\\n* Note 1: You can link to information about how the given value has been determined (e.g. reference RPM) using the [[valueReference]] property.\\n* Note 2: You can use [[minValue]] and [[maxValue]] to indicate ranges.",
   :rdfs/label "torque",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/EngineSpecification,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def totalHistoricalEnrollment
  {:db/ident :schema/totalHistoricalEnrollment,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total number of students that have enrolled in the history of the course.",
   :rdfs/label "totalHistoricalEnrollment",
   :schema/domainIncludes :schema/Course,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/3281"}})

(def totalJobOpenings
  {:db/ident :schema/totalJobOpenings,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of positions open for this job posting. Use a positive integer. Do not use if the number of positions is unclear or not known.",
   :rdfs/label "totalJobOpenings",
   :schema/domainIncludes :schema/JobPosting,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Integer,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2329"}})

(def totalPaymentDue
  {:db/ident             :schema/totalPaymentDue,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The total amount due.",
   :rdfs/label           "totalPaymentDue",
   :schema/domainIncludes :schema/Invoice,
   :schema/rangeIncludes #{:schema/MonetaryAmount :schema/PriceSpecification}})

(def totalPrice
  {:db/ident :schema/totalPrice,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total price for the reservation or ticket, including applicable taxes, shipping, etc.\\n\\nUsage guidelines:\\n\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
   :rdfs/label "totalPrice",
   :schema/domainIncludes #{:schema/Reservation :schema/Ticket},
   :schema/rangeIncludes #{:schema/PriceSpecification :schema/Number
                           :schema/Text}})

(def totalTime
  {:db/ident :schema/totalTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The total time required to perform instructions or a direction (including time to prepare the supplies), in [ISO 8601 duration format](http://en.wikipedia.org/wiki/ISO_8601).",
   :rdfs/label "totalTime",
   :schema/domainIncludes #{:schema/HowToDirection :schema/HowTo},
   :schema/rangeIncludes :schema/Duration})

(def tourBookingPage
  {:db/ident :schema/tourBookingPage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A page providing information on how to book a tour of some [[Place]], such as an [[Accommodation]] or [[ApartmentComplex]] in a real estate setting, as well as other kinds of tours as appropriate.",
   :rdfs/label "tourBookingPage",
   :schema/domainIncludes #{:schema/Place :schema/Accommodation
                            :schema/ApartmentComplex},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/URL,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def touristType
  {:db/ident :schema/touristType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Attraction suitable for type(s) of tourist. E.g. children, visitors from a particular country, etc. ",
   :rdfs/label "touristType",
   :schema/contributor #{{:xsd/anyURI
                          "http://schema.org/docs/collab/IIT-CNR.it"}
                         {:xsd/anyURI "http://schema.org/docs/collab/Tourism"}},
   :schema/domainIncludes #{:schema/TouristTrip :schema/TouristDestination
                            :schema/TouristAttraction},
   :schema/rangeIncludes #{:schema/Audience :schema/Text}})

(def track
  {:db/ident :schema/track,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A music recording (track)&#x2014;usually a single song. If an ItemList is given, the list should contain items of type MusicRecording.",
   :rdfs/label "track",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/MBZ"},
   :schema/domainIncludes #{:schema/MusicGroup :schema/MusicPlaylist},
   :schema/rangeIncludes #{:schema/ItemList :schema/MusicRecording}})

(def trackingNumber
  {:db/ident             :schema/trackingNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Shipper tracking number.",
   :rdfs/label           "trackingNumber",
   :schema/domainIncludes :schema/ParcelDelivery,
   :schema/rangeIncludes :schema/Text})

(def trackingUrl
  {:db/ident             :schema/trackingUrl,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Tracking url for the parcel delivery.",
   :rdfs/label           "trackingUrl",
   :schema/domainIncludes :schema/ParcelDelivery,
   :schema/rangeIncludes :schema/URL})

(def tracks
  {:db/ident :schema/tracks,
   :rdf/type :rdf/Property,
   :rdfs/comment "A music recording (track)&#x2014;usually a single song.",
   :rdfs/label "tracks",
   :schema/domainIncludes #{:schema/MusicGroup :schema/MusicPlaylist},
   :schema/rangeIncludes :schema/MusicRecording,
   :schema/supersededBy :schema/track})

(def trailer
  {:db/ident :schema/trailer,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The trailer of a movie or TV/radio series, season, episode, etc.",
   :rdfs/label "trailer",
   :schema/domainIncludes #{:schema/Episode :schema/CreativeWorkSeason
                            :schema/TVSeries :schema/MovieSeries :schema/Movie
                            :schema/VideoGame :schema/VideoGameSeries
                            :schema/RadioSeries},
   :schema/rangeIncludes :schema/VideoObject})

(def trailerWeight
  {:db/ident :schema/trailerWeight,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The permitted weight of a trailer attached to the vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
   :rdfs/label "trailerWeight",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def trainName
  {:db/ident             :schema/trainName,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The name of the train (e.g. The Orient Express).",
   :rdfs/label           "trainName",
   :schema/domainIncludes :schema/TrainTrip,
   :schema/rangeIncludes :schema/Text})

(def trainNumber
  {:db/ident             :schema/trainNumber,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The unique identifier for the train.",
   :rdfs/label           "trainNumber",
   :schema/domainIncludes :schema/TrainTrip,
   :schema/rangeIncludes :schema/Text})

(def trainingSalary
  {:db/ident :schema/trainingSalary,
   :rdf/type :rdf/Property,
   :rdfs/comment "The estimated salary earned while in the program.",
   :rdfs/label "trainingSalary",
   :schema/domainIncludes #{:schema/EducationalOccupationalProgram
                            :schema/WorkBasedProgram},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/MonetaryAmountDistribution,
   :schema/source
   #{{:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2460"}
     {:xsd/anyURI "https://github.com/schemaorg/schemaorg/issues/2289"}}})

(def transFatContent
  {:db/ident             :schema/transFatContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of grams of trans fat.",
   :rdfs/label           "transFatContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def transcript
  {:db/ident :schema/transcript,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "If this MediaObject is an AudioObject or VideoObject, the transcript of that object.",
   :rdfs/label "transcript",
   :schema/domainIncludes #{:schema/VideoObject :schema/AudioObject},
   :schema/rangeIncludes :schema/Text})

(def transitTime
  {:db/ident :schema/transitTime,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The typical delay the order has been sent for delivery and the goods reach the final customer. Typical properties: minValue, maxValue, unitCode (d for DAY).",
   :rdfs/label "transitTime",
   :schema/domainIncludes :schema/ShippingDeliveryTime,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def transitTimeLabel
  {:db/ident :schema/transitTimeLabel,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Label to match an [[OfferShippingDetails]] with a [[DeliveryTimeSettings]] (within the context of a [[shippingSettingsLink]] cross-reference).",
   :rdfs/label "transitTimeLabel",
   :schema/domainIncludes #{:schema/OfferShippingDetails
                            :schema/DeliveryTimeSettings},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2506"}})

(def translationOfWork
  {:db/ident :schema/translationOfWork,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The work that this work has been translated from. E.g. 物种起源 is a translationOf “On the Origin of Species”.",
   :rdfs/label "translationOfWork",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/inverseOf :schema/workTranslation,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/CreativeWork})

(def translator
  {:db/ident :schema/translator,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Organization or person who adapts a creative work to different languages, regional differences and technical requirements of a target market, or that translates during some event.",
   :rdfs/label "translator",
   :schema/domainIncludes #{:schema/CreativeWork :schema/Event},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def transmissionMethod
  {:db/ident :schema/transmissionMethod,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "How the disease spreads, either as a route or vector, for example 'direct contact', 'Aedes aegypti', etc.",
   :rdfs/label "transmissionMethod",
   :schema/domainIncludes :schema/InfectiousDisease,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def travelBans
  {:db/ident :schema/travelBans,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Information about travel bans, e.g. in the context of a pandemic.",
   :rdfs/label "travelBans",
   :schema/domainIncludes :schema/SpecialAnnouncement,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/WebContent :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2490"}})

(def trialDesign
  {:db/ident             :schema/trialDesign,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Specifics about the trial design (enumerated).",
   :rdfs/label           "trialDesign",
   :schema/domainIncludes :schema/MedicalTrial,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTrialDesign})

(def tributary
  {:db/ident :schema/tributary,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The anatomical or organ system that the vein flows into; a larger structure that the vein connects to.",
   :rdfs/label "tributary",
   :schema/domainIncludes :schema/Vein,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/AnatomicalStructure})

(def tripOrigin
  {:db/ident :schema/tripOrigin,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The location of origin of the trip, prior to any destination(s).",
   :rdfs/label "tripOrigin",
   :schema/domainIncludes :schema/Trip,
   :schema/rangeIncludes :schema/Place})

(def typeOfBed
  {:db/ident :schema/typeOfBed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of bed to which the BedDetail refers, i.e. the type of bed available in the quantity indicated by quantity.",
   :rdfs/label "typeOfBed",
   :schema/contributor
   {:xsd/anyURI "http://schema.org/docs/collab/STI_Accommodation_Ontology"},
   :schema/domainIncludes :schema/BedDetails,
   :schema/rangeIncludes #{:schema/Text :schema/BedType}})

(def typeOfGood
  {:db/ident :schema/typeOfGood,
   :rdf/type :rdf/Property,
   :rdfs/comment "The product that this structured value is referring to.",
   :rdfs/label "typeOfGood",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/TypeAndQuantityNode :schema/OwnershipInfo},
   :schema/rangeIncludes #{:schema/Product :schema/Service}})

(def typicalAgeRange
  {:db/ident             :schema/typicalAgeRange,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The typical expected age range, e.g. '7-9', '11-'.",
   :rdfs/label           "typicalAgeRange",
   :schema/domainIncludes #{:schema/CreativeWork :schema/Event},
   :schema/rangeIncludes :schema/Text})

(def typicalCreditsPerTerm
  {:db/ident :schema/typicalCreditsPerTerm,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of credits or units a full-time student would be expected to take in 1 term however 'term' is defined by the institution.",
   :rdfs/label "typicalCreditsPerTerm",
   :schema/domainIncludes :schema/EducationalOccupationalProgram,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Integer :schema/StructuredValue},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2419"}})

(def typicalTest
  {:db/ident :schema/typicalTest,
   :rdf/type :rdf/Property,
   :rdfs/comment "A medical test typically performed given this condition.",
   :rdfs/label "typicalTest",
   :schema/domainIncludes :schema/MedicalCondition,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalTest})

(def underName
  {:db/ident :schema/underName,
   :rdf/type :rdf/Property,
   :rdfs/comment "The person or organization the reservation or ticket is for.",
   :rdfs/label "underName",
   :schema/domainIncludes #{:schema/Reservation :schema/Ticket},
   :schema/rangeIncludes #{:schema/Organization :schema/Person}})

(def unitCode
  {:db/ident :schema/unitCode,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The unit of measurement given using the UN/CEFACT Common Code (3 characters) or a URL. Other codes than the UN/CEFACT Common Code may be used with a prefix followed by a colon.",
   :rdfs/label "unitCode",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/UnitPriceSpecification
                            :schema/QuantitativeValue
                            :schema/TypeAndQuantityNode :schema/PropertyValue},
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def unitText
  {:db/ident :schema/unitText,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A string or text indicating the unit of measurement. Useful if you cannot provide a standard unit code for\n<a href='unitCode'>unitCode</a>.",
   :rdfs/label "unitText",
   :schema/domainIncludes #{:schema/UnitPriceSpecification
                            :schema/QuantitativeValue
                            :schema/TypeAndQuantityNode :schema/PropertyValue},
   :schema/rangeIncludes :schema/Text})

(def unnamedSourcesPolicy
  {:db/ident :schema/unnamedSourcesPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "For an [[Organization]] (typically a [[NewsMediaOrganization]]), a statement about policy on use of unnamed sources and the decision process required.",
   :rdfs/label "unnamedSourcesPolicy",
   :rdfs/subPropertyOf :schema/publishingPrinciples,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes #{:schema/NewsMediaOrganization :schema/Organization},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def unsaturatedFatContent
  {:db/ident             :schema/unsaturatedFatContent,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of grams of unsaturated fat.",
   :rdfs/label           "unsaturatedFatContent",
   :schema/domainIncludes :schema/NutritionInformation,
   :schema/rangeIncludes :schema/Mass})

(def uploadDate
  {:db/ident :schema/uploadDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Date (including time if available) when this media object was uploaded to this site.",
   :rdfs/label "uploadDate",
   :schema/domainIncludes :schema/MediaObject,
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def upvoteCount
  {:db/ident :schema/upvoteCount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of upvotes this question, answer or comment has received from the community.",
   :rdfs/label "upvoteCount",
   :schema/domainIncludes :schema/Comment,
   :schema/rangeIncludes :schema/Integer})

(def url
  {:db/ident             :schema/url,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "URL of the item.",
   :rdfs/label           "url",
   :schema/domainIncludes :schema/Thing,
   :schema/rangeIncludes :schema/URL})

(def urlTemplate
  {:db/ident :schema/urlTemplate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An url template (RFC6570) that will be used to construct the target of the execution of the action.",
   :rdfs/label "urlTemplate",
   :schema/domainIncludes :schema/EntryPoint,
   :schema/rangeIncludes :schema/Text})

(def usageInfo
  {:db/ident :schema/usageInfo,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The schema.org [[usageInfo]] property indicates further information about a [[CreativeWork]]. This property is applicable both to works that are freely available and to those that require payment or other transactions. It can reference additional information, e.g. community expectations on preferred linking and citation conventions, as well as purchasing details. For something that can be commercially licensed, usageInfo can provide detailed, resource-specific information about licensing options.\n\nThis property can be used alongside the license property which indicates license(s) applicable to some piece of content. The usageInfo property can provide information about other licensing options, e.g. acquiring commercial usage rights for an image that is also available under non-commercial creative commons licenses.",
   :rdfs/label "usageInfo",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2454"}})

(def usedToDiagnose
  {:db/ident             :schema/usedToDiagnose,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "A condition the test is used to diagnose.",
   :rdfs/label           "usedToDiagnose",
   :schema/domainIncludes :schema/MedicalTest,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalCondition})

(def userInteractionCount
  {:db/ident :schema/userInteractionCount,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of interactions for the CreativeWork using the WebSite or SoftwareApplication.",
   :rdfs/label "userInteractionCount",
   :schema/domainIncludes :schema/InteractionCounter,
   :schema/rangeIncludes :schema/Integer})

(def usesDevice
  {:db/ident             :schema/usesDevice,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Device used to perform the test.",
   :rdfs/label           "usesDevice",
   :schema/domainIncludes :schema/MedicalTest,
   :schema/isPartOf      {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes :schema/MedicalDevice})

(def usesHealthPlanIdStandard
  {:db/ident :schema/usesHealthPlanIdStandard,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The standard for interpreting the Plan ID. The preferred is \"HIOS\". See the Centers for Medicare & Medicaid Services for more details.",
   :rdfs/label "usesHealthPlanIdStandard",
   :schema/domainIncludes :schema/HealthInsurancePlan,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1062"}})

(def utterances
  {:db/ident :schema/utterances,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Text of an utterances (spoken words, lyrics etc.) that occurs at a certain section of a media object, represented as a [[HyperTocEntry]].",
   :rdfs/label "utterances",
   :schema/domainIncludes :schema/HyperTocEntry,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Text,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2766"}})

(def validFor
  {:db/ident :schema/validFor,
   :rdf/type :rdf/Property,
   :rdfs/comment "The duration of validity of a permit or similar thing.",
   :rdfs/label "validFor",
   :schema/domainIncludes #{:schema/Permit
                            :schema/EducationalOccupationalCredential},
   :schema/rangeIncludes :schema/Duration,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1779"}})

(def validFrom
  {:db/ident           :schema/validFrom,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The date when the item becomes valid.",
   :rdfs/label         "validFrom",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes
   #{:schema/MonetaryAmount :schema/LocationFeatureSpecification
     :schema/PriceSpecification :schema/Permit :schema/OpeningHoursSpecification
     :schema/Demand :schema/Offer},
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def validIn
  {:db/ident :schema/validIn,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The geographic area where a permit or similar thing is valid.",
   :rdfs/label "validIn",
   :schema/domainIncludes #{:schema/Permit
                            :schema/EducationalOccupationalCredential},
   :schema/rangeIncludes :schema/AdministrativeArea,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1779"}})

(def validThrough
  {:db/ident :schema/validThrough,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The date after when the item is not valid. For example the end of an offer, salary period, or a period of opening hours.",
   :rdfs/label "validThrough",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes
   #{:schema/MonetaryAmount :schema/LocationFeatureSpecification
     :schema/PriceSpecification :schema/OpeningHoursSpecification
     :schema/JobPosting :schema/Demand :schema/Offer},
   :schema/rangeIncludes #{:schema/Date :schema/DateTime}})

(def validUntil
  {:db/ident             :schema/validUntil,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The date when the item is no longer valid.",
   :rdfs/label           "validUntil",
   :schema/domainIncludes :schema/Permit,
   :schema/rangeIncludes :schema/Date})

(def value
  {:db/ident :schema/value,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The value of a [[QuantitativeValue]] (including [[Observation]]) or property value node.\\n\\n* For [[QuantitativeValue]] and [[MonetaryAmount]], the recommended type for values is 'Number'.\\n* For [[PropertyValue]], it can be 'Text', 'Number', 'Boolean', or 'StructuredValue'.\\n* Use values from 0123456789 (Unicode 'DIGIT ZERO' (U+0030) to 'DIGIT NINE' (U+0039)) rather than superficially similar Unicode symbols.\\n* Use '.' (Unicode 'FULL STOP' (U+002E)) rather than ',' to indicate a decimal point. Avoid using these symbols as a readability separator.",
   :rdfs/label "value",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/MonetaryAmount :schema/QuantitativeValue
                            :schema/PropertyValue},
   :schema/rangeIncludes #{:schema/Number :schema/Boolean :schema/Text
                           :schema/StructuredValue}})

(def valueAddedTaxIncluded
  {:db/ident :schema/valueAddedTaxIncluded,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies whether the applicable value-added tax (VAT) is included in the price specification or not.",
   :rdfs/label "valueAddedTaxIncluded",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/PriceSpecification,
   :schema/rangeIncludes :schema/Boolean})

(def valueMaxLength
  {:db/ident :schema/valueMaxLength,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies the allowed range for number of characters in a literal value.",
   :rdfs/label "valueMaxLength",
   :schema/domainIncludes :schema/PropertyValueSpecification,
   :schema/rangeIncludes :schema/Number})

(def valueMinLength
  {:db/ident :schema/valueMinLength,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies the minimum allowed range for number of characters in a literal value.",
   :rdfs/label "valueMinLength",
   :schema/domainIncludes :schema/PropertyValueSpecification,
   :schema/rangeIncludes :schema/Number})

(def valueName
  {:db/ident :schema/valueName,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the name of the PropertyValueSpecification to be used in URL templates and form encoding in a manner analogous to HTML's input@name.",
   :rdfs/label "valueName",
   :schema/domainIncludes :schema/PropertyValueSpecification,
   :schema/rangeIncludes :schema/Text})

(def valuePattern
  {:db/ident :schema/valuePattern,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Specifies a regular expression for testing literal values according to the HTML spec.",
   :rdfs/label "valuePattern",
   :schema/domainIncludes :schema/PropertyValueSpecification,
   :schema/rangeIncludes :schema/Text})

(def valueReference
  {:db/ident :schema/valueReference,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A secondary value that provides additional information on the original value, e.g. a reference temperature or a type of measurement.",
   :rdfs/label "valueReference",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/QuantitativeValue :schema/PropertyValue
                            :schema/QualitativeValue},
   :schema/rangeIncludes
   #{:schema/DefinedTerm :schema/Enumeration :schema/MeasurementTypeEnumeration
     :schema/QuantitativeValue :schema/PropertyValue :schema/Text
     :schema/QualitativeValue :schema/StructuredValue}})

(def valueRequired
  {:db/ident :schema/valueRequired,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Whether the property must be filled in to complete the action.  Default is false.",
   :rdfs/label "valueRequired",
   :schema/domainIncludes :schema/PropertyValueSpecification,
   :schema/rangeIncludes :schema/Boolean})

(def variableMeasured
  {:db/ident :schema/variableMeasured,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The variableMeasured property can indicate (repeated as necessary) the  variables that are measured in some dataset, either described as text or as pairs of identifier and description using PropertyValue, or more explicitly as a [[StatisticalVariable]].",
   :rdfs/label "variableMeasured",
   :schema/domainIncludes #{:schema/Observation :schema/Dataset},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/Property :schema/PropertyValue :schema/Text
                           :schema/StatisticalVariable},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1083"}})

(def variantCover
  {:db/ident :schema/variantCover,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A description of the variant cover\n    \tfor the issue, if the issue is a variant printing. For example, \"Bryan Hitch\n    \tVariant Cover\" or \"2nd Printing Variant\".",
   :rdfs/label "variantCover",
   :schema/domainIncludes :schema/ComicIssue,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/Text})

(def variesBy
  {:db/ident :schema/variesBy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates the property or properties by which the variants in a [[ProductGroup]] vary, e.g. their size, color etc. Schema.org properties can be referenced by their short name e.g. \"color\"; terms defined elsewhere can be referenced with their URIs.",
   :rdfs/label "variesBy",
   :schema/domainIncludes :schema/ProductGroup,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DefinedTerm :schema/Text},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1797"}})

(def vatID
  {:db/ident           :schema/vatID,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The Value-added Tax ID of the organization or person.",
   :rdfs/label         "vatID",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Organization :schema/Person},
   :schema/rangeIncludes :schema/Text})

(def vehicleConfiguration
  {:db/ident :schema/vehicleConfiguration,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A short text indicating the configuration of the vehicle, e.g. '5dr hatchback ST 2.5 MT 225 hp' or 'limited edition'.",
   :rdfs/label "vehicleConfiguration",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/Text})

(def vehicleEngine
  {:db/ident :schema/vehicleEngine,
   :rdf/type :rdf/Property,
   :rdfs/comment "Information about the engine or engines of the vehicle.",
   :rdfs/label "vehicleEngine",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/EngineSpecification})

(def vehicleIdentificationNumber
  {:db/ident :schema/vehicleIdentificationNumber,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The Vehicle Identification Number (VIN) is a unique serial number used by the automotive industry to identify individual motor vehicles.",
   :rdfs/label "vehicleIdentificationNumber",
   :rdfs/subPropertyOf :schema/serialNumber,
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/Text})

(def vehicleInteriorColor
  {:db/ident :schema/vehicleInteriorColor,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The color or color combination of the interior of the vehicle.",
   :rdfs/label "vehicleInteriorColor",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/Text})

(def vehicleInteriorType
  {:db/ident :schema/vehicleInteriorType,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type or material of the interior of the vehicle (e.g. synthetic fabric, leather, wood, etc.). While most interior types are characterized by the material used, an interior type can also be based on vehicle usage or target audience.",
   :rdfs/label "vehicleInteriorType",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/Text})

(def vehicleModelDate
  {:db/ident :schema/vehicleModelDate,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The release date of a vehicle model (often used to differentiate versions of the same make and model).",
   :rdfs/label "vehicleModelDate",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes :schema/Date})

(def vehicleSeatingCapacity
  {:db/ident :schema/vehicleSeatingCapacity,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The number of passengers that can be seated in the vehicle, both in terms of the physical space available, and in terms of limitations set by law.\\n\\nTypical unit code(s): C62 for persons.",
   :rdfs/label "vehicleSeatingCapacity",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes #{:schema/Number :schema/QuantitativeValue}})

(def vehicleSpecialUsage
  {:db/ident :schema/vehicleSpecialUsage,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Indicates whether the vehicle has been used for special purposes, like commercial rental, driving school, or as a taxi. The legislation in many countries requires this information to be revealed when offering a car for sale.",
   :rdfs/label "vehicleSpecialUsage",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes #{:schema/CarUsageType :schema/Text}})

(def vehicleTransmission
  {:db/ident :schema/vehicleTransmission,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of component used for transmitting the power from a rotating power source to the wheels or other relevant component(s) (\"gearbox\" for cars).",
   :rdfs/label "vehicleTransmission",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/rangeIncludes #{:schema/Text :schema/QualitativeValue :schema/URL}})

(def vendor
  {:db/ident            :schema/vendor,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "'vendor' is an earlier term for 'seller'.",
   :rdfs/label          "vendor",
   :rdfs/subPropertyOf  :schema/participant,
   :schema/domainIncludes :schema/BuyAction,
   :schema/rangeIncludes #{:schema/Organization :schema/Person},
   :schema/supersededBy :schema/seller})

(def verificationFactCheckingPolicy
  {:db/ident :schema/verificationFactCheckingPolicy,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Disclosure about verification and fact-checking processes for a [[NewsMediaOrganization]] or other fact-checking [[Organization]].",
   :rdfs/label "verificationFactCheckingPolicy",
   :rdfs/subPropertyOf :schema/publishingPrinciples,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/TP"},
   :schema/domainIncludes :schema/NewsMediaOrganization,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/CreativeWork :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1525"}})

(def version
  {:db/ident :schema/version,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The version of the CreativeWork embodied by a specified resource.",
   :rdfs/label "version",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def video
  {:db/ident             :schema/video,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "An embedded video object.",
   :rdfs/label           "video",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/rangeIncludes #{:schema/VideoObject :schema/Clip}})

(def videoFormat
  {:db/ident :schema/videoFormat,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The type of screening or video broadcast used (e.g. IMAX, 3D, SD, HD, etc.).",
   :rdfs/label "videoFormat",
   :schema/domainIncludes #{:schema/BroadcastEvent :schema/ScreeningEvent
                            :schema/BroadcastService},
   :schema/rangeIncludes :schema/Text})

(def videoFrameSize
  {:db/ident             :schema/videoFrameSize,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The frame size of the video.",
   :rdfs/label           "videoFrameSize",
   :schema/domainIncludes :schema/VideoObject,
   :schema/rangeIncludes :schema/Text})

(def videoQuality
  {:db/ident             :schema/videoQuality,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The quality of the video.",
   :rdfs/label           "videoQuality",
   :schema/domainIncludes :schema/VideoObject,
   :schema/rangeIncludes :schema/Text})

(def volumeNumber
  {:db/ident :schema/volumeNumber,
   :owl/equivalentProperty :bibo/volume,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Identifies the volume of publication or multi-part work; for example, \"iii\" or \"2\".",
   :rdfs/label "volumeNumber",
   :rdfs/subPropertyOf :schema/position,
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"},
   :schema/domainIncludes :schema/PublicationVolume,
   :schema/rangeIncludes #{:schema/Integer :schema/Text}})

(def warning
  {:db/ident :schema/warning,
   :rdf/type :rdf/Property,
   :rdfs/comment "Any FDA or other warnings about the drug (text or URL).",
   :rdfs/label "warning",
   :schema/domainIncludes :schema/Drug,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/Text :schema/URL}})

(def warranty
  {:db/ident           :schema/warranty,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The warranty promise(s) included in the offer.",
   :rdfs/label         "warranty",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/Demand :schema/Offer},
   :schema/rangeIncludes :schema/WarrantyPromise})

(def warrantyPromise
  {:db/ident            :schema/warrantyPromise,
   :rdf/type            :rdf/Property,
   :rdfs/comment        "The warranty promise(s) included in the offer.",
   :rdfs/label          "warrantyPromise",
   :schema/domainIncludes #{:schema/BuyAction :schema/SellAction},
   :schema/rangeIncludes :schema/WarrantyPromise,
   :schema/supersededBy :schema/warranty})

(def warrantyScope
  {:db/ident           :schema/warrantyScope,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The scope of the warranty promise.",
   :rdfs/label         "warrantyScope",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes :schema/WarrantyPromise,
   :schema/rangeIncludes :schema/WarrantyScope})

(def webCheckinTime
  {:db/ident :schema/webCheckinTime,
   :rdf/type :rdf/Property,
   :rdfs/comment "The time when a passenger can check into the flight online.",
   :rdfs/label "webCheckinTime",
   :schema/domainIncludes :schema/Flight,
   :schema/rangeIncludes :schema/DateTime})

(def webFeed
  {:db/ident :schema/webFeed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The URL for a feed, e.g. associated with a podcast series, blog, or series of date-stamped updates. This is usually RSS or Atom.",
   :rdfs/label "webFeed",
   :schema/domainIncludes #{:schema/SpecialAnnouncement :schema/PodcastSeries},
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes #{:schema/DataFeed :schema/URL},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/373"}})

(def weight
  {:db/ident           :schema/weight,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The weight of the product or person.",
   :rdfs/label         "weight",
   :schema/contributor {:xsd/anyURI
                        "http://schema.org/docs/collab/GoodRelationsTerms"},
   :schema/domainIncludes #{:schema/OfferShippingDetails :schema/Product
                            :schema/Person},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def weightTotal
  {:db/ident :schema/weightTotal,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The permitted total weight of the loaded vehicle, including passengers and cargo and the weight of the empty vehicle.\\n\\nTypical unit code(s): KGM for kilogram, LBR for pound\\n\\n* Note 1: You can indicate additional information in the [[name]] of the [[QuantitativeValue]] node.\\n* Note 2: You may also link to a [[QualitativeValue]] node that provides additional information using [[valueReference]].\\n* Note 3: Note that you can use [[minValue]] and [[maxValue]] to indicate ranges.",
   :rdfs/label "weightTotal",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def wheelbase
  {:db/ident :schema/wheelbase,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The distance between the centers of the front and rear wheels.\\n\\nTypical unit code(s): CMT for centimeters, MTR for meters, INH for inches, FOT for foot/feet.",
   :rdfs/label "wheelbase",
   :schema/contributor
   {:xsd/anyURI
    "http://schema.org/docs/collab/Automotive_Ontology_Working_Group"},
   :schema/domainIncludes :schema/Vehicle,
   :schema/isPartOf {:xsd/anyURI "http://auto.schema.org"},
   :schema/rangeIncludes :schema/QuantitativeValue})

(def width
  {:db/ident             :schema/width,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The width of the item.",
   :rdfs/label           "width",
   :schema/domainIncludes #{:schema/MediaObject :schema/OfferShippingDetails
                            :schema/Product :schema/VisualArtwork},
   :schema/rangeIncludes #{:schema/Distance :schema/QuantitativeValue}})

(def winner
  {:db/ident :schema/winner,
   :rdf/type :rdf/Property,
   :rdfs/comment "A sub property of participant. The winner of the action.",
   :rdfs/label "winner",
   :rdfs/subPropertyOf :schema/participant,
   :schema/domainIncludes :schema/LoseAction,
   :schema/rangeIncludes :schema/Person})

(def wordCount
  {:db/ident             :schema/wordCount,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The number of words in the text of the Article.",
   :rdfs/label           "wordCount",
   :schema/domainIncludes :schema/Article,
   :schema/rangeIncludes :schema/Integer})

(def workExample
  {:db/ident :schema/workExample,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Example/instance/realization/derivation of the concept of this creative work. E.g. the paperback edition, first edition, or e-book.",
   :rdfs/label "workExample",
   :schema/contributor {:xsd/anyURI "http://schema.org/docs/collab/bibex"},
   :schema/domainIncludes :schema/CreativeWork,
   :schema/inverseOf :schema/exampleOfWork,
   :schema/rangeIncludes :schema/CreativeWork})

(def workFeatured
  {:db/ident :schema/workFeatured,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A work featured in some event, e.g. exhibited in an ExhibitionEvent.\n       Specific subproperties are available for workPerformed (e.g. a play), or a workPresented (a Movie at a ScreeningEvent).",
   :rdfs/label "workFeatured",
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes :schema/CreativeWork})

(def workHours
  {:db/ident :schema/workHours,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The typical working hours for this job (e.g. 1st shift, night shift, 8am-5pm).",
   :rdfs/label "workHours",
   :schema/domainIncludes :schema/JobPosting,
   :schema/rangeIncludes :schema/Text})

(def workLocation
  {:db/ident           :schema/workLocation,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "A contact location for a person's place of work.",
   :rdfs/label         "workLocation",
   :rdfs/subPropertyOf :schema/location,
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes #{:schema/Place :schema/ContactPoint}})

(def workPerformed
  {:db/ident :schema/workPerformed,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A work performed in some event, for example a play performed in a TheaterEvent.",
   :rdfs/label "workPerformed",
   :rdfs/subPropertyOf :schema/workFeatured,
   :schema/domainIncludes :schema/Event,
   :schema/rangeIncludes :schema/CreativeWork})

(def workPresented
  {:db/ident           :schema/workPresented,
   :rdf/type           :rdf/Property,
   :rdfs/comment       "The movie presented during this event.",
   :rdfs/label         "workPresented",
   :rdfs/subPropertyOf :schema/workFeatured,
   :schema/domainIncludes :schema/ScreeningEvent,
   :schema/rangeIncludes :schema/Movie})

(def workTranslation
  {:db/ident :schema/workTranslation,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "A work that is a translation of the content of this work. E.g. 西遊記 has an English workTranslation “Journey to the West”, a German workTranslation “Monkeys Pilgerfahrt” and a Vietnamese  translation Tây du ký bình khảo.",
   :rdfs/label "workTranslation",
   :schema/domainIncludes :schema/CreativeWork,
   :schema/inverseOf :schema/translationOfWork,
   :schema/isPartOf {:xsd/anyURI "http://bib.schema.org"},
   :schema/rangeIncludes :schema/CreativeWork})

(def workload
  {:db/ident :schema/workload,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "Quantitative measure of the physiologic output of the exercise; also referred to as energy expenditure.",
   :rdfs/label "workload",
   :schema/domainIncludes :schema/ExercisePlan,
   :schema/isPartOf {:xsd/anyURI "http://health-lifesci.schema.org"},
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Energy}})

(def worksFor
  {:db/ident             :schema/worksFor,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "Organizations that the person works for.",
   :rdfs/label           "worksFor",
   :schema/domainIncludes :schema/Person,
   :schema/rangeIncludes :schema/Organization})

(def worstRating
  {:db/ident :schema/worstRating,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The lowest value allowed in this rating system. If worstRating is omitted, 1 is assumed.",
   :rdfs/label "worstRating",
   :schema/domainIncludes :schema/Rating,
   :schema/rangeIncludes #{:schema/Number :schema/Text}})

(def xpath
  {:db/ident :schema/xpath,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "An XPath, e.g. of a [[SpeakableSpecification]] or [[WebPageElement]]. In the latter case, multiple matches within a page can constitute a single conceptual \"Web page element\".",
   :rdfs/label "xpath",
   :schema/domainIncludes #{:schema/SpeakableSpecification
                            :schema/WebPageElement},
   :schema/rangeIncludes :schema/XPathType,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/1389"}})

(def yearBuilt
  {:db/ident :schema/yearBuilt,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The year an [[Accommodation]] was constructed. This corresponds to the [YearBuilt field in RESO](https://ddwiki.reso.org/display/DDW17/YearBuilt+Field). ",
   :rdfs/label "yearBuilt",
   :schema/domainIncludes :schema/Accommodation,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/rangeIncludes :schema/Number,
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2373"}})

(def yearlyRevenue
  {:db/ident             :schema/yearlyRevenue,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The size of the business in annual revenue.",
   :rdfs/label           "yearlyRevenue",
   :schema/domainIncludes :schema/BusinessAudience,
   :schema/rangeIncludes :schema/QuantitativeValue})

(def yearsInOperation
  {:db/ident             :schema/yearsInOperation,
   :rdf/type             :rdf/Property,
   :rdfs/comment         "The age of the business.",
   :rdfs/label           "yearsInOperation",
   :schema/domainIncludes :schema/BusinessAudience,
   :schema/rangeIncludes :schema/QuantitativeValue})

(def yield
  {:db/ident :schema/yield,
   :rdf/type :rdf/Property,
   :rdfs/comment
   "The quantity that results by performing instructions. For example, a paper airplane, 10 personalized candles.",
   :rdfs/label "yield",
   :schema/domainIncludes :schema/HowTo,
   :schema/rangeIncludes #{:schema/QuantitativeValue :schema/Text}})

(def |3DModel|
  {:db/ident :schema/|3DModel|,
   :rdf/type :rdfs/Class,
   :rdfs/comment
   "A 3D model represents some kind of 3D content, which may have [[encoding]]s in one or more [[MediaObject]]s. Many 3D formats are available (e.g. see [Wikipedia](https://en.wikipedia.org/wiki/Category:3D_graphics_file_formats)); specific encoding formats can be represented using the [[encodingFormat]] property applied to the relevant [[MediaObject]]. For the\ncase of a single file published after Zip compression, the convention of appending '+zip' to the [[encodingFormat]] can be used. Geospatial, AR/VR, artistic/animation, gaming, engineering and scientific content can all be represented using [[3DModel]].",
   :rdfs/label "3DModel",
   :rdfs/subClassOf :schema/MediaObject,
   :schema/isPartOf {:xsd/anyURI "http://pending.schema.org"},
   :schema/source {:xsd/anyURI
                   "https://github.com/schemaorg/schemaorg/issues/2140"}})